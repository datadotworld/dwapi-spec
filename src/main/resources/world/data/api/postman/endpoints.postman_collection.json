{
	"info": {
		"_postman_id": "c178e829-cc39-41dc-8c30-96e65103f658",
		"name": "data.world Public API",
		"description": "A postman collection of all public API endpoints.",
		"schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json"
	},
	"item": [
		{
			"name": "connections/{owner}",
			"item": [
				{
					"name": "{id}",
					"item": [
						{
							"name": "Get an individual connection",
							"request": {
								"auth": {
									"type": "bearer",
									"bearer": [
										{
											"key": "token",
											"value": "{{entAdmin}}",
											"type": "string"
										}
									]
								},
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{baseUrl}}/connections/:owner/:id",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"connections",
										":owner",
										":id"
									],
									"variable": [
										{
											"key": "owner",
											"value": "{{org}}",
											"description": "(Required) "
										},
										{
											"key": "id",
											"value": "aeed6b76-a31c-4fa0-8ea7-f715c8080e71",
											"description": "(Required) "
										}
									]
								}
							},
							"response": [
								{
									"name": "successful operation",
									"originalRequest": {
										"method": "GET",
										"header": [
											{
												"description": "Added as a part of security scheme: oauth2",
												"key": "Authorization",
												"value": "<token>"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/connections/:owner/:id",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"connections",
												":owner",
												":id"
											],
											"variable": [
												{
													"key": "owner"
												},
												{
													"key": "id"
												}
											]
										}
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n \"host\": \"dwserver.thinktank.com\",\n \"type\": \"ATHENA\",\n \"name\": \"Humanitarian_Aid\",\n \"port\": 45558,\n \"database\": \"schemadw\",\n \"credentials\": {\n  \"user\": \"johnsmith\",\n  \"password\": \"!AdHJfGgd@3#\"\n },\n \"sshTunnel\": {\n  \"host\": \"passthru.tunnel.ca\",\n  \"user\": \"johnsmith\",\n  \"userKeyPair\": false,\n  \"port\": 31745\n },\n \"sslRequired\": false,\n \"verifyServerCertificate\": false,\n \"trustedServerCertificates\": \"ex esse Ut sit est\",\n \"properties\": {},\n \"advancedProperties\": {}\n}"
								},
								{
									"name": "Bad Request",
									"originalRequest": {
										"method": "GET",
										"header": [
											{
												"description": "Added as a part of security scheme: oauth2",
												"key": "Authorization",
												"value": "<token>"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/connections/:owner/:id",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"connections",
												":owner",
												":id"
											],
											"variable": [
												{
													"key": "owner"
												},
												{
													"key": "id"
												}
											]
										}
									},
									"status": "Bad Request",
									"code": 400,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n \"code\": 1519430,\n \"message\": \"enim\",\n \"details\": \"do\"\n}"
								},
								{
									"name": "Not found",
									"originalRequest": {
										"method": "GET",
										"header": [
											{
												"description": "Added as a part of security scheme: oauth2",
												"key": "Authorization",
												"value": "<token>"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/connections/:owner/:id",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"connections",
												":owner",
												":id"
											],
											"variable": [
												{
													"key": "owner"
												},
												{
													"key": "id"
												}
											]
										}
									},
									"status": "Not Found",
									"code": 404,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n \"code\": 1519430,\n \"message\": \"enim\",\n \"details\": \"do\"\n}"
								}
							]
						},
						{
							"name": "Delete a Connection.",
							"request": {
								"auth": {
									"type": "bearer",
									"bearer": [
										{
											"key": "token",
											"value": "{{entAdmin}}",
											"type": "string"
										}
									]
								},
								"method": "DELETE",
								"header": [],
								"url": {
									"raw": "{{baseUrl}}/connections/:owner/:id",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"connections",
										":owner",
										":id"
									],
									"variable": [
										{
											"key": "owner",
											"value": "{{org}}",
											"description": "(Required) "
										},
										{
											"key": "id",
											"value": "af705ea9-28c5-4ce3-a6b3-2340f760c6f6",
											"description": "(Required) "
										}
									]
								}
							},
							"response": [
								{
									"name": "Connection has been successfully deleted.",
									"originalRequest": {
										"method": "DELETE",
										"header": [
											{
												"description": "Added as a part of security scheme: oauth2",
												"key": "Authorization",
												"value": "<token>"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/connections/:owner/:id",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"connections",
												":owner",
												":id"
											],
											"variable": [
												{
													"key": "owner"
												},
												{
													"key": "id"
												}
											]
										}
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n \"message\": \"voluptate culpa nulla esse\"\n}"
								},
								{
									"name": "Bad request",
									"originalRequest": {
										"method": "DELETE",
										"header": [
											{
												"description": "Added as a part of security scheme: oauth2",
												"key": "Authorization",
												"value": "<token>"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/connections/:owner/:id",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"connections",
												":owner",
												":id"
											],
											"variable": [
												{
													"key": "owner"
												},
												{
													"key": "id"
												}
											]
										}
									},
									"status": "Bad Request",
									"code": 400,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n \"code\": 1519430,\n \"message\": \"enim\",\n \"details\": \"do\"\n}"
								},
								{
									"name": "Unauthorized",
									"originalRequest": {
										"method": "DELETE",
										"header": [
											{
												"description": "Added as a part of security scheme: oauth2",
												"key": "Authorization",
												"value": "<token>"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/connections/:owner/:id",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"connections",
												":owner",
												":id"
											],
											"variable": [
												{
													"key": "owner"
												},
												{
													"key": "id"
												}
											]
										}
									},
									"status": "Unauthorized",
									"code": 401,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n \"code\": 1519430,\n \"message\": \"enim\",\n \"details\": \"do\"\n}"
								},
								{
									"name": "Forbidden",
									"originalRequest": {
										"method": "DELETE",
										"header": [
											{
												"description": "Added as a part of security scheme: oauth2",
												"key": "Authorization",
												"value": "<token>"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/connections/:owner/:id",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"connections",
												":owner",
												":id"
											],
											"variable": [
												{
													"key": "owner"
												},
												{
													"key": "id"
												}
											]
										}
									},
									"status": "Forbidden",
									"code": 403,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n \"code\": 1519430,\n \"message\": \"enim\",\n \"details\": \"do\"\n}"
								},
								{
									"name": "Not found",
									"originalRequest": {
										"method": "DELETE",
										"header": [
											{
												"description": "Added as a part of security scheme: oauth2",
												"key": "Authorization",
												"value": "<token>"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/connections/:owner/:id",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"connections",
												":owner",
												":id"
											],
											"variable": [
												{
													"key": "owner"
												},
												{
													"key": "id"
												}
											]
										}
									},
									"status": "Not Found",
									"code": 404,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n \"code\": 1519430,\n \"message\": \"enim\",\n \"details\": \"do\"\n}"
								},
								{
									"name": "Server error",
									"originalRequest": {
										"method": "DELETE",
										"header": [
											{
												"description": "Added as a part of security scheme: oauth2",
												"key": "Authorization",
												"value": "<token>"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/connections/:owner/:id",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"connections",
												":owner",
												":id"
											],
											"variable": [
												{
													"key": "owner"
												},
												{
													"key": "id"
												}
											]
										}
									},
									"status": "Internal Server Error",
									"code": 500,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n \"code\": 1519430,\n \"message\": \"enim\",\n \"details\": \"do\"\n}"
								}
							]
						}
					]
				},
				{
					"name": "Get connections by owner.",
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{entAdmin}}",
									"type": "string"
								}
							]
						},
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{baseUrl}}/connections/:owner",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"connections",
								":owner"
							],
							"query": [
								{
									"key": "size",
									"value": "adipisicing elit ullamco",
									"disabled": true
								},
								{
									"key": "from",
									"value": "adipisicing elit ullamco",
									"disabled": true
								},
								{
									"key": "sort",
									"value": "adipisicing elit ullamco",
									"disabled": true
								}
							],
							"variable": [
								{
									"key": "owner",
									"value": "{{org}}",
									"description": "(Required) "
								}
							]
						}
					},
					"response": [
						{
							"name": "Successfully retrieved connections",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"description": "Added as a part of security scheme: oauth2",
										"key": "Authorization",
										"value": "<token>"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/connections/:owner?size=adipisicing elit ullamco&from=adipisicing elit ullamco&sort=adipisicing elit ullamco",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"connections",
										":owner"
									],
									"query": [
										{
											"key": "size",
											"value": "adipisicing elit ullamco"
										},
										{
											"key": "from",
											"value": "adipisicing elit ullamco"
										},
										{
											"key": "sort",
											"value": "adipisicing elit ullamco"
										}
									],
									"variable": [
										{
											"key": "owner"
										}
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n \"count\": 97512930,\n \"records\": [\n  {\n   \"host\": \"dwserver.thinktank.com\",\n   \"type\": \"ATHENA\",\n   \"name\": \"Humanitarian_Aid\",\n   \"port\": 9683,\n   \"database\": \"schemadw\",\n   \"credentials\": {\n    \"user\": {\n     \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    \"password\": {\n     \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    }\n   },\n   \"sshTunnel\": {\n    \"host\": {\n     \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    \"user\": {\n     \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    \"userKeyPair\": {\n     \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    \"port\": {\n     \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    }\n   },\n   \"sslRequired\": false,\n   \"verifyServerCertificate\": false,\n   \"trustedServerCertificates\": \"voluptate quis enim labore magna\",\n   \"properties\": {},\n   \"advancedProperties\": {}\n  },\n  {\n   \"host\": \"dwserver.thinktank.com\",\n   \"type\": \"ATHENA\",\n   \"name\": \"Humanitarian_Aid\",\n   \"port\": 48674,\n   \"database\": \"schemadw\",\n   \"credentials\": {\n    \"user\": {\n     \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    \"password\": {\n     \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    }\n   },\n   \"sshTunnel\": {\n    \"host\": {\n     \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    \"user\": {\n     \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    \"userKeyPair\": {\n     \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    \"port\": {\n     \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    }\n   },\n   \"sslRequired\": false,\n   \"verifyServerCertificate\": false,\n   \"trustedServerCertificates\": \"velit culpa dolor\",\n   \"properties\": {},\n   \"advancedProperties\": {}\n  }\n ],\n \"nextPageToken\": \"dolor ea eu qui\"\n}"
						},
						{
							"name": "Bad request",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"description": "Added as a part of security scheme: oauth2",
										"key": "Authorization",
										"value": "<token>"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/connections/:owner?size=adipisicing elit ullamco&from=adipisicing elit ullamco&sort=adipisicing elit ullamco",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"connections",
										":owner"
									],
									"query": [
										{
											"key": "size",
											"value": "adipisicing elit ullamco"
										},
										{
											"key": "from",
											"value": "adipisicing elit ullamco"
										},
										{
											"key": "sort",
											"value": "adipisicing elit ullamco"
										}
									],
									"variable": [
										{
											"key": "owner"
										}
									]
								}
							},
							"status": "Bad Request",
							"code": 400,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n \"code\": 1519430,\n \"message\": \"enim\",\n \"details\": \"do\"\n}"
						},
						{
							"name": "Unauthorized",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"description": "Added as a part of security scheme: oauth2",
										"key": "Authorization",
										"value": "<token>"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/connections/:owner?size=adipisicing elit ullamco&from=adipisicing elit ullamco&sort=adipisicing elit ullamco",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"connections",
										":owner"
									],
									"query": [
										{
											"key": "size",
											"value": "adipisicing elit ullamco"
										},
										{
											"key": "from",
											"value": "adipisicing elit ullamco"
										},
										{
											"key": "sort",
											"value": "adipisicing elit ullamco"
										}
									],
									"variable": [
										{
											"key": "owner"
										}
									]
								}
							},
							"status": "Unauthorized",
							"code": 401,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n \"code\": 1519430,\n \"message\": \"enim\",\n \"details\": \"do\"\n}"
						},
						{
							"name": "Forbidden",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"description": "Added as a part of security scheme: oauth2",
										"key": "Authorization",
										"value": "<token>"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/connections/:owner?size=adipisicing elit ullamco&from=adipisicing elit ullamco&sort=adipisicing elit ullamco",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"connections",
										":owner"
									],
									"query": [
										{
											"key": "size",
											"value": "adipisicing elit ullamco"
										},
										{
											"key": "from",
											"value": "adipisicing elit ullamco"
										},
										{
											"key": "sort",
											"value": "adipisicing elit ullamco"
										}
									],
									"variable": [
										{
											"key": "owner"
										}
									]
								}
							},
							"status": "Forbidden",
							"code": 403,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n \"code\": 1519430,\n \"message\": \"enim\",\n \"details\": \"do\"\n}"
						},
						{
							"name": "Not found",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"description": "Added as a part of security scheme: oauth2",
										"key": "Authorization",
										"value": "<token>"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/connections/:owner?size=adipisicing elit ullamco&from=adipisicing elit ullamco&sort=adipisicing elit ullamco",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"connections",
										":owner"
									],
									"query": [
										{
											"key": "size",
											"value": "adipisicing elit ullamco"
										},
										{
											"key": "from",
											"value": "adipisicing elit ullamco"
										},
										{
											"key": "sort",
											"value": "adipisicing elit ullamco"
										}
									],
									"variable": [
										{
											"key": "owner"
										}
									]
								}
							},
							"status": "Not Found",
							"code": 404,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n \"code\": 1519430,\n \"message\": \"enim\",\n \"details\": \"do\"\n}"
						},
						{
							"name": "Server error",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"description": "Added as a part of security scheme: oauth2",
										"key": "Authorization",
										"value": "<token>"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/connections/:owner?size=adipisicing elit ullamco&from=adipisicing elit ullamco&sort=adipisicing elit ullamco",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"connections",
										":owner"
									],
									"query": [
										{
											"key": "size",
											"value": "adipisicing elit ullamco"
										},
										{
											"key": "from",
											"value": "adipisicing elit ullamco"
										},
										{
											"key": "sort",
											"value": "adipisicing elit ullamco"
										}
									],
									"variable": [
										{
											"key": "owner"
										}
									]
								}
							},
							"status": "Internal Server Error",
							"code": 500,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n \"code\": 1519430,\n \"message\": \"enim\",\n \"details\": \"do\"\n}"
						}
					]
				},
				{
					"name": "Create a new connection.",
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{entAdmin}}",
									"type": "string"
								}
							]
						},
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"name\": \"snowflake HR\",\n    \"type\": \"SNOWFLAKE\",\n    \"host\": \"cu51508.snowflakecomputing.com\",\n    \"database\": \"COMPANY_HR\",\n    \"credentials\":{\n        \"user\": \"rickliao\",\n        \"password\": \"\"\n    }\n}"
						},
						"url": {
							"raw": "{{baseUrl}}/connections/:owner",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"connections",
								":owner"
							],
							"variable": [
								{
									"key": "owner",
									"value": "{{org}}",
									"description": "(Required) "
								}
							]
						}
					},
					"response": [
						{
							"name": "Connection created successfully.",
							"originalRequest": {
								"method": "POST",
								"header": [
									{
										"description": "Added as a part of security scheme: oauth2",
										"key": "Authorization",
										"value": "<token>"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"host\": \"dwserver.thinktank.com\",\n    \"type\": \"ATHENA\",\n    \"name\": \"Humanitarian_Aid\",\n    \"port\": 45558,\n    \"database\": \"schemadw\",\n    \"credentials\": {\n        \"user\": \"johnsmith\",\n        \"password\": \"!AdHJfGgd@3#\"\n    },\n    \"sshTunnel\": {\n        \"host\": \"passthru.tunnel.ca\",\n        \"user\": \"johnsmith\",\n        \"userKeyPair\": false,\n        \"port\": 31745\n    },\n    \"sslRequired\": false,\n    \"verifyServerCertificate\": false,\n    \"trustedServerCertificates\": \"ex esse Ut sit est\",\n    \"properties\": {},\n    \"advancedProperties\": {}\n}"
								},
								"url": {
									"raw": "{{baseUrl}}/connections/:owner",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"connections",
										":owner"
									],
									"variable": [
										{
											"key": "owner"
										}
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n \"uri\": \"http://A.sfQ-gVx.2oEMnKdGnZwvPKe1go1ZBeMhzDIKRr\",\n \"message\": \"nisi nulla quis veniam\"\n}"
						},
						{
							"name": "Bad request",
							"originalRequest": {
								"method": "POST",
								"header": [
									{
										"description": "Added as a part of security scheme: oauth2",
										"key": "Authorization",
										"value": "<token>"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"host\": \"dwserver.thinktank.com\",\n    \"type\": \"ATHENA\",\n    \"name\": \"Humanitarian_Aid\",\n    \"port\": 45558,\n    \"database\": \"schemadw\",\n    \"credentials\": {\n        \"user\": \"johnsmith\",\n        \"password\": \"!AdHJfGgd@3#\"\n    },\n    \"sshTunnel\": {\n        \"host\": \"passthru.tunnel.ca\",\n        \"user\": \"johnsmith\",\n        \"userKeyPair\": false,\n        \"port\": 31745\n    },\n    \"sslRequired\": false,\n    \"verifyServerCertificate\": false,\n    \"trustedServerCertificates\": \"ex esse Ut sit est\",\n    \"properties\": {},\n    \"advancedProperties\": {}\n}"
								},
								"url": {
									"raw": "{{baseUrl}}/connections/:owner",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"connections",
										":owner"
									],
									"variable": [
										{
											"key": "owner"
										}
									]
								}
							},
							"status": "Bad Request",
							"code": 400,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n \"code\": 1519430,\n \"message\": \"enim\",\n \"details\": \"do\"\n}"
						},
						{
							"name": "Unauthorized",
							"originalRequest": {
								"method": "POST",
								"header": [
									{
										"description": "Added as a part of security scheme: oauth2",
										"key": "Authorization",
										"value": "<token>"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"host\": \"dwserver.thinktank.com\",\n    \"type\": \"ATHENA\",\n    \"name\": \"Humanitarian_Aid\",\n    \"port\": 45558,\n    \"database\": \"schemadw\",\n    \"credentials\": {\n        \"user\": \"johnsmith\",\n        \"password\": \"!AdHJfGgd@3#\"\n    },\n    \"sshTunnel\": {\n        \"host\": \"passthru.tunnel.ca\",\n        \"user\": \"johnsmith\",\n        \"userKeyPair\": false,\n        \"port\": 31745\n    },\n    \"sslRequired\": false,\n    \"verifyServerCertificate\": false,\n    \"trustedServerCertificates\": \"ex esse Ut sit est\",\n    \"properties\": {},\n    \"advancedProperties\": {}\n}"
								},
								"url": {
									"raw": "{{baseUrl}}/connections/:owner",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"connections",
										":owner"
									],
									"variable": [
										{
											"key": "owner"
										}
									]
								}
							},
							"status": "Unauthorized",
							"code": 401,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n \"code\": 1519430,\n \"message\": \"enim\",\n \"details\": \"do\"\n}"
						},
						{
							"name": "Forbidden",
							"originalRequest": {
								"method": "POST",
								"header": [
									{
										"description": "Added as a part of security scheme: oauth2",
										"key": "Authorization",
										"value": "<token>"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"host\": \"dwserver.thinktank.com\",\n    \"type\": \"ATHENA\",\n    \"name\": \"Humanitarian_Aid\",\n    \"port\": 45558,\n    \"database\": \"schemadw\",\n    \"credentials\": {\n        \"user\": \"johnsmith\",\n        \"password\": \"!AdHJfGgd@3#\"\n    },\n    \"sshTunnel\": {\n        \"host\": \"passthru.tunnel.ca\",\n        \"user\": \"johnsmith\",\n        \"userKeyPair\": false,\n        \"port\": 31745\n    },\n    \"sslRequired\": false,\n    \"verifyServerCertificate\": false,\n    \"trustedServerCertificates\": \"ex esse Ut sit est\",\n    \"properties\": {},\n    \"advancedProperties\": {}\n}"
								},
								"url": {
									"raw": "{{baseUrl}}/connections/:owner",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"connections",
										":owner"
									],
									"variable": [
										{
											"key": "owner"
										}
									]
								}
							},
							"status": "Forbidden",
							"code": 403,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n \"code\": 1519430,\n \"message\": \"enim\",\n \"details\": \"do\"\n}"
						},
						{
							"name": "Not found",
							"originalRequest": {
								"method": "POST",
								"header": [
									{
										"description": "Added as a part of security scheme: oauth2",
										"key": "Authorization",
										"value": "<token>"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"host\": \"dwserver.thinktank.com\",\n    \"type\": \"ATHENA\",\n    \"name\": \"Humanitarian_Aid\",\n    \"port\": 45558,\n    \"database\": \"schemadw\",\n    \"credentials\": {\n        \"user\": \"johnsmith\",\n        \"password\": \"!AdHJfGgd@3#\"\n    },\n    \"sshTunnel\": {\n        \"host\": \"passthru.tunnel.ca\",\n        \"user\": \"johnsmith\",\n        \"userKeyPair\": false,\n        \"port\": 31745\n    },\n    \"sslRequired\": false,\n    \"verifyServerCertificate\": false,\n    \"trustedServerCertificates\": \"ex esse Ut sit est\",\n    \"properties\": {},\n    \"advancedProperties\": {}\n}"
								},
								"url": {
									"raw": "{{baseUrl}}/connections/:owner",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"connections",
										":owner"
									],
									"variable": [
										{
											"key": "owner"
										}
									]
								}
							},
							"status": "Not Found",
							"code": 404,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n \"code\": 1519430,\n \"message\": \"enim\",\n \"details\": \"do\"\n}"
						},
						{
							"name": "Conflict",
							"originalRequest": {
								"method": "POST",
								"header": [
									{
										"description": "Added as a part of security scheme: oauth2",
										"key": "Authorization",
										"value": "<token>"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"host\": \"dwserver.thinktank.com\",\n    \"type\": \"ATHENA\",\n    \"name\": \"Humanitarian_Aid\",\n    \"port\": 45558,\n    \"database\": \"schemadw\",\n    \"credentials\": {\n        \"user\": \"johnsmith\",\n        \"password\": \"!AdHJfGgd@3#\"\n    },\n    \"sshTunnel\": {\n        \"host\": \"passthru.tunnel.ca\",\n        \"user\": \"johnsmith\",\n        \"userKeyPair\": false,\n        \"port\": 31745\n    },\n    \"sslRequired\": false,\n    \"verifyServerCertificate\": false,\n    \"trustedServerCertificates\": \"ex esse Ut sit est\",\n    \"properties\": {},\n    \"advancedProperties\": {}\n}"
								},
								"url": {
									"raw": "{{baseUrl}}/connections/:owner",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"connections",
										":owner"
									],
									"variable": [
										{
											"key": "owner"
										}
									]
								}
							},
							"status": "Conflict",
							"code": 409,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n \"code\": 1519430,\n \"message\": \"enim\",\n \"details\": \"do\"\n}"
						},
						{
							"name": "Bad request",
							"originalRequest": {
								"method": "POST",
								"header": [
									{
										"description": "Added as a part of security scheme: oauth2",
										"key": "Authorization",
										"value": "<token>"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"host\": \"dwserver.thinktank.com\",\n    \"type\": \"ATHENA\",\n    \"name\": \"Humanitarian_Aid\",\n    \"port\": 45558,\n    \"database\": \"schemadw\",\n    \"credentials\": {\n        \"user\": \"johnsmith\",\n        \"password\": \"!AdHJfGgd@3#\"\n    },\n    \"sshTunnel\": {\n        \"host\": \"passthru.tunnel.ca\",\n        \"user\": \"johnsmith\",\n        \"userKeyPair\": false,\n        \"port\": 31745\n    },\n    \"sslRequired\": false,\n    \"verifyServerCertificate\": false,\n    \"trustedServerCertificates\": \"ex esse Ut sit est\",\n    \"properties\": {},\n    \"advancedProperties\": {}\n}"
								},
								"url": {
									"raw": "{{baseUrl}}/connections/:owner",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"connections",
										":owner"
									],
									"variable": [
										{
											"key": "owner"
										}
									]
								}
							},
							"status": "Unprocessable Entity (WebDAV) (RFC 4918)",
							"code": 422,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n \"code\": 1519430,\n \"message\": \"enim\",\n \"details\": \"do\"\n}"
						},
						{
							"name": "Server error",
							"originalRequest": {
								"method": "POST",
								"header": [
									{
										"description": "Added as a part of security scheme: oauth2",
										"key": "Authorization",
										"value": "<token>"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"host\": \"dwserver.thinktank.com\",\n    \"type\": \"ATHENA\",\n    \"name\": \"Humanitarian_Aid\",\n    \"port\": 45558,\n    \"database\": \"schemadw\",\n    \"credentials\": {\n        \"user\": \"johnsmith\",\n        \"password\": \"!AdHJfGgd@3#\"\n    },\n    \"sshTunnel\": {\n        \"host\": \"passthru.tunnel.ca\",\n        \"user\": \"johnsmith\",\n        \"userKeyPair\": false,\n        \"port\": 31745\n    },\n    \"sslRequired\": false,\n    \"verifyServerCertificate\": false,\n    \"trustedServerCertificates\": \"ex esse Ut sit est\",\n    \"properties\": {},\n    \"advancedProperties\": {}\n}"
								},
								"url": {
									"raw": "{{baseUrl}}/connections/:owner",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"connections",
										":owner"
									],
									"variable": [
										{
											"key": "owner"
										}
									]
								}
							},
							"status": "Internal Server Error",
							"code": 500,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n \"code\": 1519430,\n \"message\": \"enim\",\n \"details\": \"do\"\n}"
						}
					]
				}
			]
		},
		{
			"name": "datasets",
			"item": [
				{
					"name": "{owner}",
					"item": [
						{
							"name": "{id}",
							"item": [
								{
									"name": "dois/{doi}",
									"item": [
										{
											"name": "Create dataset DOI",
											"request": {
												"auth": {
													"type": "bearer",
													"bearer": [
														{
															"key": "token",
															"value": "{{readWrite}}",
															"type": "string"
														}
													]
												},
												"method": "PUT",
												"header": [],
												"url": {
													"raw": "{{baseUrl}}/datasets/:owner/:id/dois/:doi",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"datasets",
														":owner",
														":id",
														"dois",
														":doi"
													],
													"variable": [
														{
															"key": "owner",
															"value": "{{owner}}",
															"description": "(Required) "
														},
														{
															"key": "id",
															"value": "{{datasetid}}",
															"description": "(Required) "
														},
														{
															"key": "doi",
															"value": "10.1038/nphys1170 ",
															"description": "(Required) "
														}
													]
												}
											},
											"response": [
												{
													"name": "DOI successfully added to dataset.",
													"originalRequest": {
														"method": "PUT",
														"header": [
															{
																"description": "Added as a part of security scheme: oauth2",
																"key": "Authorization",
																"value": "<token>"
															}
														],
														"url": {
															"raw": "{{baseUrl}}/datasets/:owner/:id/dois/:doi",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"datasets",
																":owner",
																":id",
																"dois",
																":doi"
															],
															"variable": [
																{
																	"key": "owner"
																},
																{
																	"key": "id"
																},
																{
																	"key": "doi"
																}
															]
														}
													},
													"status": "OK",
													"code": 200,
													"_postman_previewlanguage": "json",
													"header": [
														{
															"key": "Content-Type",
															"value": "application/json"
														}
													],
													"cookie": [],
													"body": "{\n \"message\": \"voluptate culpa nulla esse\"\n}"
												},
												{
													"name": "Bad request",
													"originalRequest": {
														"method": "PUT",
														"header": [
															{
																"description": "Added as a part of security scheme: oauth2",
																"key": "Authorization",
																"value": "<token>"
															}
														],
														"url": {
															"raw": "{{baseUrl}}/datasets/:owner/:id/dois/:doi",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"datasets",
																":owner",
																":id",
																"dois",
																":doi"
															],
															"variable": [
																{
																	"key": "owner"
																},
																{
																	"key": "id"
																},
																{
																	"key": "doi"
																}
															]
														}
													},
													"status": "Bad Request",
													"code": 400,
													"_postman_previewlanguage": "json",
													"header": [
														{
															"key": "Content-Type",
															"value": "application/json"
														}
													],
													"cookie": [],
													"body": "{\n \"code\": 1519430,\n \"message\": \"enim\",\n \"details\": \"do\"\n}"
												},
												{
													"name": "Unauthorized",
													"originalRequest": {
														"method": "PUT",
														"header": [
															{
																"description": "Added as a part of security scheme: oauth2",
																"key": "Authorization",
																"value": "<token>"
															}
														],
														"url": {
															"raw": "{{baseUrl}}/datasets/:owner/:id/dois/:doi",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"datasets",
																":owner",
																":id",
																"dois",
																":doi"
															],
															"variable": [
																{
																	"key": "owner"
																},
																{
																	"key": "id"
																},
																{
																	"key": "doi"
																}
															]
														}
													},
													"status": "Unauthorized",
													"code": 401,
													"_postman_previewlanguage": "json",
													"header": [
														{
															"key": "Content-Type",
															"value": "application/json"
														}
													],
													"cookie": [],
													"body": "{\n \"code\": 1519430,\n \"message\": \"enim\",\n \"details\": \"do\"\n}"
												},
												{
													"name": "Forbidden",
													"originalRequest": {
														"method": "PUT",
														"header": [
															{
																"description": "Added as a part of security scheme: oauth2",
																"key": "Authorization",
																"value": "<token>"
															}
														],
														"url": {
															"raw": "{{baseUrl}}/datasets/:owner/:id/dois/:doi",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"datasets",
																":owner",
																":id",
																"dois",
																":doi"
															],
															"variable": [
																{
																	"key": "owner"
																},
																{
																	"key": "id"
																},
																{
																	"key": "doi"
																}
															]
														}
													},
													"status": "Forbidden",
													"code": 403,
													"_postman_previewlanguage": "json",
													"header": [
														{
															"key": "Content-Type",
															"value": "application/json"
														}
													],
													"cookie": [],
													"body": "{\n \"code\": 1519430,\n \"message\": \"enim\",\n \"details\": \"do\"\n}"
												},
												{
													"name": "Not found",
													"originalRequest": {
														"method": "PUT",
														"header": [
															{
																"description": "Added as a part of security scheme: oauth2",
																"key": "Authorization",
																"value": "<token>"
															}
														],
														"url": {
															"raw": "{{baseUrl}}/datasets/:owner/:id/dois/:doi",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"datasets",
																":owner",
																":id",
																"dois",
																":doi"
															],
															"variable": [
																{
																	"key": "owner"
																},
																{
																	"key": "id"
																},
																{
																	"key": "doi"
																}
															]
														}
													},
													"status": "Not Found",
													"code": 404,
													"_postman_previewlanguage": "json",
													"header": [
														{
															"key": "Content-Type",
															"value": "application/json"
														}
													],
													"cookie": [],
													"body": "{\n \"code\": 1519430,\n \"message\": \"enim\",\n \"details\": \"do\"\n}"
												},
												{
													"name": "Server error",
													"originalRequest": {
														"method": "PUT",
														"header": [
															{
																"description": "Added as a part of security scheme: oauth2",
																"key": "Authorization",
																"value": "<token>"
															}
														],
														"url": {
															"raw": "{{baseUrl}}/datasets/:owner/:id/dois/:doi",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"datasets",
																":owner",
																":id",
																"dois",
																":doi"
															],
															"variable": [
																{
																	"key": "owner"
																},
																{
																	"key": "id"
																},
																{
																	"key": "doi"
																}
															]
														}
													},
													"status": "Internal Server Error",
													"code": 500,
													"_postman_previewlanguage": "json",
													"header": [
														{
															"key": "Content-Type",
															"value": "application/json"
														}
													],
													"cookie": [],
													"body": "{\n \"code\": 1519430,\n \"message\": \"enim\",\n \"details\": \"do\"\n}"
												}
											]
										},
										{
											"name": "Delete dataset DOI",
											"request": {
												"auth": {
													"type": "bearer",
													"bearer": [
														{
															"key": "token",
															"value": "{{readWrite}}",
															"type": "string"
														}
													]
												},
												"method": "DELETE",
												"header": [],
												"url": {
													"raw": "{{baseUrl}}/datasets/:owner/:id/dois/:doi",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"datasets",
														":owner",
														":id",
														"dois",
														":doi"
													],
													"variable": [
														{
															"key": "owner",
															"value": "{{owner}}",
															"description": "(Required) "
														},
														{
															"key": "id",
															"value": "{{datasetid}}",
															"description": "(Required) "
														},
														{
															"key": "doi",
															"value": "adipisicing elit ullamco",
															"description": "(Required) "
														}
													]
												}
											},
											"response": [
												{
													"name": "DOI successfully removed from dataset.",
													"originalRequest": {
														"method": "DELETE",
														"header": [
															{
																"description": "Added as a part of security scheme: oauth2",
																"key": "Authorization",
																"value": "<token>"
															}
														],
														"url": {
															"raw": "{{baseUrl}}/datasets/:owner/:id/dois/:doi",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"datasets",
																":owner",
																":id",
																"dois",
																":doi"
															],
															"variable": [
																{
																	"key": "owner"
																},
																{
																	"key": "id"
																},
																{
																	"key": "doi"
																}
															]
														}
													},
													"status": "OK",
													"code": 200,
													"_postman_previewlanguage": "json",
													"header": [
														{
															"key": "Content-Type",
															"value": "application/json"
														}
													],
													"cookie": [],
													"body": "{\n \"message\": \"voluptate culpa nulla esse\"\n}"
												},
												{
													"name": "Bad request",
													"originalRequest": {
														"method": "DELETE",
														"header": [
															{
																"description": "Added as a part of security scheme: oauth2",
																"key": "Authorization",
																"value": "<token>"
															}
														],
														"url": {
															"raw": "{{baseUrl}}/datasets/:owner/:id/dois/:doi",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"datasets",
																":owner",
																":id",
																"dois",
																":doi"
															],
															"variable": [
																{
																	"key": "owner"
																},
																{
																	"key": "id"
																},
																{
																	"key": "doi"
																}
															]
														}
													},
													"status": "Bad Request",
													"code": 400,
													"_postman_previewlanguage": "json",
													"header": [
														{
															"key": "Content-Type",
															"value": "application/json"
														}
													],
													"cookie": [],
													"body": "{\n \"code\": 1519430,\n \"message\": \"enim\",\n \"details\": \"do\"\n}"
												},
												{
													"name": "Unauthorized",
													"originalRequest": {
														"method": "DELETE",
														"header": [
															{
																"description": "Added as a part of security scheme: oauth2",
																"key": "Authorization",
																"value": "<token>"
															}
														],
														"url": {
															"raw": "{{baseUrl}}/datasets/:owner/:id/dois/:doi",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"datasets",
																":owner",
																":id",
																"dois",
																":doi"
															],
															"variable": [
																{
																	"key": "owner"
																},
																{
																	"key": "id"
																},
																{
																	"key": "doi"
																}
															]
														}
													},
													"status": "Unauthorized",
													"code": 401,
													"_postman_previewlanguage": "json",
													"header": [
														{
															"key": "Content-Type",
															"value": "application/json"
														}
													],
													"cookie": [],
													"body": "{\n \"code\": 1519430,\n \"message\": \"enim\",\n \"details\": \"do\"\n}"
												},
												{
													"name": "Forbidden",
													"originalRequest": {
														"method": "DELETE",
														"header": [
															{
																"description": "Added as a part of security scheme: oauth2",
																"key": "Authorization",
																"value": "<token>"
															}
														],
														"url": {
															"raw": "{{baseUrl}}/datasets/:owner/:id/dois/:doi",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"datasets",
																":owner",
																":id",
																"dois",
																":doi"
															],
															"variable": [
																{
																	"key": "owner"
																},
																{
																	"key": "id"
																},
																{
																	"key": "doi"
																}
															]
														}
													},
													"status": "Forbidden",
													"code": 403,
													"_postman_previewlanguage": "json",
													"header": [
														{
															"key": "Content-Type",
															"value": "application/json"
														}
													],
													"cookie": [],
													"body": "{\n \"code\": 1519430,\n \"message\": \"enim\",\n \"details\": \"do\"\n}"
												},
												{
													"name": "Not found",
													"originalRequest": {
														"method": "DELETE",
														"header": [
															{
																"description": "Added as a part of security scheme: oauth2",
																"key": "Authorization",
																"value": "<token>"
															}
														],
														"url": {
															"raw": "{{baseUrl}}/datasets/:owner/:id/dois/:doi",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"datasets",
																":owner",
																":id",
																"dois",
																":doi"
															],
															"variable": [
																{
																	"key": "owner"
																},
																{
																	"key": "id"
																},
																{
																	"key": "doi"
																}
															]
														}
													},
													"status": "Not Found",
													"code": 404,
													"_postman_previewlanguage": "json",
													"header": [
														{
															"key": "Content-Type",
															"value": "application/json"
														}
													],
													"cookie": [],
													"body": "{\n \"code\": 1519430,\n \"message\": \"enim\",\n \"details\": \"do\"\n}"
												},
												{
													"name": "Server error",
													"originalRequest": {
														"method": "DELETE",
														"header": [
															{
																"description": "Added as a part of security scheme: oauth2",
																"key": "Authorization",
																"value": "<token>"
															}
														],
														"url": {
															"raw": "{{baseUrl}}/datasets/:owner/:id/dois/:doi",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"datasets",
																":owner",
																":id",
																"dois",
																":doi"
															],
															"variable": [
																{
																	"key": "owner"
																},
																{
																	"key": "id"
																},
																{
																	"key": "doi"
																}
															]
														}
													},
													"status": "Internal Server Error",
													"code": 500,
													"_postman_previewlanguage": "json",
													"header": [
														{
															"key": "Content-Type",
															"value": "application/json"
														}
													],
													"cookie": [],
													"body": "{\n \"code\": 1519430,\n \"message\": \"enim\",\n \"details\": \"do\"\n}"
												}
											]
										}
									]
								},
								{
									"name": "files",
									"item": [
										{
											"name": "{file}",
											"item": [
												{
													"name": "metadata",
													"item": [
														{
															"name": "Get file description and labels",
															"request": {
																"auth": {
																	"type": "bearer",
																	"bearer": [
																		{
																			"key": "token",
																			"value": "{{readWrite}}",
																			"type": "string"
																		}
																	]
																},
																"method": "GET",
																"header": [],
																"url": {
																	"raw": "{{baseUrl}}/datasets/:owner/:id/files/:file/metadata",
																	"host": [
																		"{{baseUrl}}"
																	],
																	"path": [
																		"datasets",
																		":owner",
																		":id",
																		"files",
																		":file",
																		"metadata"
																	],
																	"variable": [
																		{
																			"key": "owner",
																			"value": "{{owner}}",
																			"description": "(Required) "
																		},
																		{
																			"key": "id",
																			"value": "{{datasetid}}",
																			"description": "(Required) "
																		},
																		{
																			"key": "file",
																			"value": "{{fileName}}",
																			"description": "(Required) "
																		}
																	]
																},
																"description": "Get file description and labels"
															},
															"response": [
																{
																	"name": "Successfully retrieved metadata of file.",
																	"originalRequest": {
																		"method": "GET",
																		"header": [
																			{
																				"description": "Added as a part of security scheme: oauth2",
																				"key": "Authorization",
																				"value": "<token>"
																			}
																		],
																		"url": {
																			"raw": "{{baseUrl}}/datasets/:owner/:id/files/:file/metadata",
																			"host": [
																				"{{baseUrl}}"
																			],
																			"path": [
																				"datasets",
																				":owner",
																				":id",
																				"files",
																				":file",
																				"metadata"
																			],
																			"variable": [
																				{
																					"key": "owner"
																				},
																				{
																					"key": "id"
																				},
																				{
																					"key": "file"
																				}
																			]
																		}
																	},
																	"status": "OK",
																	"code": 200,
																	"_postman_previewlanguage": "json",
																	"header": [
																		{
																			"key": "Content-Type",
																			"value": "application/json"
																		}
																	],
																	"cookie": [],
																	"body": "{\n \"created\": \"non nisi Lorem in\",\n \"name\": \"BnW6 S\",\n \"updated\": \"ad irure in\",\n \"description\": \"irure ea dolor occaecat\",\n \"labels\": [\n  \"nostrud\",\n  \"cillum\"\n ],\n \"sizeInBytes\": -5461322\n}"
																},
																{
																	"name": "Bad request",
																	"originalRequest": {
																		"method": "GET",
																		"header": [
																			{
																				"description": "Added as a part of security scheme: oauth2",
																				"key": "Authorization",
																				"value": "<token>"
																			}
																		],
																		"url": {
																			"raw": "{{baseUrl}}/datasets/:owner/:id/files/:file/metadata",
																			"host": [
																				"{{baseUrl}}"
																			],
																			"path": [
																				"datasets",
																				":owner",
																				":id",
																				"files",
																				":file",
																				"metadata"
																			],
																			"variable": [
																				{
																					"key": "owner"
																				},
																				{
																					"key": "id"
																				},
																				{
																					"key": "file"
																				}
																			]
																		}
																	},
																	"status": "Bad Request",
																	"code": 400,
																	"_postman_previewlanguage": "json",
																	"header": [
																		{
																			"key": "Content-Type",
																			"value": "application/json"
																		}
																	],
																	"cookie": [],
																	"body": "{\n \"code\": 1519430,\n \"message\": \"enim\",\n \"details\": \"do\"\n}"
																},
																{
																	"name": "Unauthorized",
																	"originalRequest": {
																		"method": "GET",
																		"header": [
																			{
																				"description": "Added as a part of security scheme: oauth2",
																				"key": "Authorization",
																				"value": "<token>"
																			}
																		],
																		"url": {
																			"raw": "{{baseUrl}}/datasets/:owner/:id/files/:file/metadata",
																			"host": [
																				"{{baseUrl}}"
																			],
																			"path": [
																				"datasets",
																				":owner",
																				":id",
																				"files",
																				":file",
																				"metadata"
																			],
																			"variable": [
																				{
																					"key": "owner"
																				},
																				{
																					"key": "id"
																				},
																				{
																					"key": "file"
																				}
																			]
																		}
																	},
																	"status": "Unauthorized",
																	"code": 401,
																	"_postman_previewlanguage": "json",
																	"header": [
																		{
																			"key": "Content-Type",
																			"value": "application/json"
																		}
																	],
																	"cookie": [],
																	"body": "{\n \"code\": 1519430,\n \"message\": \"enim\",\n \"details\": \"do\"\n}"
																},
																{
																	"name": "Forbidden",
																	"originalRequest": {
																		"method": "GET",
																		"header": [
																			{
																				"description": "Added as a part of security scheme: oauth2",
																				"key": "Authorization",
																				"value": "<token>"
																			}
																		],
																		"url": {
																			"raw": "{{baseUrl}}/datasets/:owner/:id/files/:file/metadata",
																			"host": [
																				"{{baseUrl}}"
																			],
																			"path": [
																				"datasets",
																				":owner",
																				":id",
																				"files",
																				":file",
																				"metadata"
																			],
																			"variable": [
																				{
																					"key": "owner"
																				},
																				{
																					"key": "id"
																				},
																				{
																					"key": "file"
																				}
																			]
																		}
																	},
																	"status": "Forbidden",
																	"code": 403,
																	"_postman_previewlanguage": "json",
																	"header": [
																		{
																			"key": "Content-Type",
																			"value": "application/json"
																		}
																	],
																	"cookie": [],
																	"body": "{\n \"code\": 1519430,\n \"message\": \"enim\",\n \"details\": \"do\"\n}"
																},
																{
																	"name": "Not found",
																	"originalRequest": {
																		"method": "GET",
																		"header": [
																			{
																				"description": "Added as a part of security scheme: oauth2",
																				"key": "Authorization",
																				"value": "<token>"
																			}
																		],
																		"url": {
																			"raw": "{{baseUrl}}/datasets/:owner/:id/files/:file/metadata",
																			"host": [
																				"{{baseUrl}}"
																			],
																			"path": [
																				"datasets",
																				":owner",
																				":id",
																				"files",
																				":file",
																				"metadata"
																			],
																			"variable": [
																				{
																					"key": "owner"
																				},
																				{
																					"key": "id"
																				},
																				{
																					"key": "file"
																				}
																			]
																		}
																	},
																	"status": "Not Found",
																	"code": 404,
																	"_postman_previewlanguage": "json",
																	"header": [
																		{
																			"key": "Content-Type",
																			"value": "application/json"
																		}
																	],
																	"cookie": [],
																	"body": "{\n \"code\": 1519430,\n \"message\": \"enim\",\n \"details\": \"do\"\n}"
																},
																{
																	"name": "Bad request",
																	"originalRequest": {
																		"method": "GET",
																		"header": [
																			{
																				"description": "Added as a part of security scheme: oauth2",
																				"key": "Authorization",
																				"value": "<token>"
																			}
																		],
																		"url": {
																			"raw": "{{baseUrl}}/datasets/:owner/:id/files/:file/metadata",
																			"host": [
																				"{{baseUrl}}"
																			],
																			"path": [
																				"datasets",
																				":owner",
																				":id",
																				"files",
																				":file",
																				"metadata"
																			],
																			"variable": [
																				{
																					"key": "owner"
																				},
																				{
																					"key": "id"
																				},
																				{
																					"key": "file"
																				}
																			]
																		}
																	},
																	"status": "Unprocessable Entity (WebDAV) (RFC 4918)",
																	"code": 422,
																	"_postman_previewlanguage": "json",
																	"header": [
																		{
																			"key": "Content-Type",
																			"value": "application/json"
																		}
																	],
																	"cookie": [],
																	"body": "{\n \"code\": 1519430,\n \"message\": \"enim\",\n \"details\": \"do\"\n}"
																},
																{
																	"name": "Server error",
																	"originalRequest": {
																		"method": "GET",
																		"header": [
																			{
																				"description": "Added as a part of security scheme: oauth2",
																				"key": "Authorization",
																				"value": "<token>"
																			}
																		],
																		"url": {
																			"raw": "{{baseUrl}}/datasets/:owner/:id/files/:file/metadata",
																			"host": [
																				"{{baseUrl}}"
																			],
																			"path": [
																				"datasets",
																				":owner",
																				":id",
																				"files",
																				":file",
																				"metadata"
																			],
																			"variable": [
																				{
																					"key": "owner"
																				},
																				{
																					"key": "id"
																				},
																				{
																					"key": "file"
																				}
																			]
																		}
																	},
																	"status": "Internal Server Error",
																	"code": 500,
																	"_postman_previewlanguage": "json",
																	"header": [
																		{
																			"key": "Content-Type",
																			"value": "application/json"
																		}
																	],
																	"cookie": [],
																	"body": "{\n \"code\": 1519430,\n \"message\": \"enim\",\n \"details\": \"do\"\n}"
																}
															]
														},
														{
															"name": "Replace file description and labels",
															"request": {
																"auth": {
																	"type": "bearer",
																	"bearer": [
																		{
																			"key": "token",
																			"value": "{{readWrite}}",
																			"type": "string"
																		}
																	]
																},
																"method": "PUT",
																"header": [
																	{
																		"key": "Content-Type",
																		"value": "application/json"
																	}
																],
																"body": {
																	"mode": "raw",
																	"raw": "{\n    \"description\": \"replace me\",\n    \"labels\": [\n        \"report\",\n        \"deprecated\"\n    ]\n}"
																},
																"url": {
																	"raw": "{{baseUrl}}/datasets/:owner/:id/files/:file/metadata",
																	"host": [
																		"{{baseUrl}}"
																	],
																	"path": [
																		"datasets",
																		":owner",
																		":id",
																		"files",
																		":file",
																		"metadata"
																	],
																	"variable": [
																		{
																			"key": "owner",
																			"value": "{{owner}}",
																			"description": "(Required) "
																		},
																		{
																			"key": "id",
																			"value": "{{datasetid}}",
																			"description": "(Required) "
																		},
																		{
																			"key": "file",
																			"value": "{{fileName}}",
																			"description": "(Required) "
																		}
																	]
																},
																"description": "Replace file description and labels"
															},
															"response": [
																{
																	"name": "Successfully replaced metadata of file.",
																	"originalRequest": {
																		"method": "PUT",
																		"header": [
																			{
																				"description": "Added as a part of security scheme: oauth2",
																				"key": "Authorization",
																				"value": "<token>"
																			}
																		],
																		"url": {
																			"raw": "{{baseUrl}}/datasets/:owner/:id/files/:file/metadata",
																			"host": [
																				"{{baseUrl}}"
																			],
																			"path": [
																				"datasets",
																				":owner",
																				":id",
																				"files",
																				":file",
																				"metadata"
																			],
																			"variable": [
																				{
																					"key": "owner"
																				},
																				{
																					"key": "id"
																				},
																				{
																					"key": "file"
																				}
																			]
																		}
																	},
																	"status": "OK",
																	"code": 200,
																	"_postman_previewlanguage": "json",
																	"header": [
																		{
																			"key": "Content-Type",
																			"value": "application/json"
																		}
																	],
																	"cookie": [],
																	"body": "{\n \"message\": \"voluptate culpa nulla esse\"\n}"
																},
																{
																	"name": "Bad request",
																	"originalRequest": {
																		"method": "PUT",
																		"header": [
																			{
																				"description": "Added as a part of security scheme: oauth2",
																				"key": "Authorization",
																				"value": "<token>"
																			}
																		],
																		"url": {
																			"raw": "{{baseUrl}}/datasets/:owner/:id/files/:file/metadata",
																			"host": [
																				"{{baseUrl}}"
																			],
																			"path": [
																				"datasets",
																				":owner",
																				":id",
																				"files",
																				":file",
																				"metadata"
																			],
																			"variable": [
																				{
																					"key": "owner"
																				},
																				{
																					"key": "id"
																				},
																				{
																					"key": "file"
																				}
																			]
																		}
																	},
																	"status": "Bad Request",
																	"code": 400,
																	"_postman_previewlanguage": "json",
																	"header": [
																		{
																			"key": "Content-Type",
																			"value": "application/json"
																		}
																	],
																	"cookie": [],
																	"body": "{\n \"code\": 1519430,\n \"message\": \"enim\",\n \"details\": \"do\"\n}"
																},
																{
																	"name": "Unauthorized",
																	"originalRequest": {
																		"method": "PUT",
																		"header": [
																			{
																				"description": "Added as a part of security scheme: oauth2",
																				"key": "Authorization",
																				"value": "<token>"
																			}
																		],
																		"url": {
																			"raw": "{{baseUrl}}/datasets/:owner/:id/files/:file/metadata",
																			"host": [
																				"{{baseUrl}}"
																			],
																			"path": [
																				"datasets",
																				":owner",
																				":id",
																				"files",
																				":file",
																				"metadata"
																			],
																			"variable": [
																				{
																					"key": "owner"
																				},
																				{
																					"key": "id"
																				},
																				{
																					"key": "file"
																				}
																			]
																		}
																	},
																	"status": "Unauthorized",
																	"code": 401,
																	"_postman_previewlanguage": "json",
																	"header": [
																		{
																			"key": "Content-Type",
																			"value": "application/json"
																		}
																	],
																	"cookie": [],
																	"body": "{\n \"code\": 1519430,\n \"message\": \"enim\",\n \"details\": \"do\"\n}"
																},
																{
																	"name": "Forbidden",
																	"originalRequest": {
																		"method": "PUT",
																		"header": [
																			{
																				"description": "Added as a part of security scheme: oauth2",
																				"key": "Authorization",
																				"value": "<token>"
																			}
																		],
																		"url": {
																			"raw": "{{baseUrl}}/datasets/:owner/:id/files/:file/metadata",
																			"host": [
																				"{{baseUrl}}"
																			],
																			"path": [
																				"datasets",
																				":owner",
																				":id",
																				"files",
																				":file",
																				"metadata"
																			],
																			"variable": [
																				{
																					"key": "owner"
																				},
																				{
																					"key": "id"
																				},
																				{
																					"key": "file"
																				}
																			]
																		}
																	},
																	"status": "Forbidden",
																	"code": 403,
																	"_postman_previewlanguage": "json",
																	"header": [
																		{
																			"key": "Content-Type",
																			"value": "application/json"
																		}
																	],
																	"cookie": [],
																	"body": "{\n \"code\": 1519430,\n \"message\": \"enim\",\n \"details\": \"do\"\n}"
																},
																{
																	"name": "Not found",
																	"originalRequest": {
																		"method": "PUT",
																		"header": [
																			{
																				"description": "Added as a part of security scheme: oauth2",
																				"key": "Authorization",
																				"value": "<token>"
																			}
																		],
																		"url": {
																			"raw": "{{baseUrl}}/datasets/:owner/:id/files/:file/metadata",
																			"host": [
																				"{{baseUrl}}"
																			],
																			"path": [
																				"datasets",
																				":owner",
																				":id",
																				"files",
																				":file",
																				"metadata"
																			],
																			"variable": [
																				{
																					"key": "owner"
																				},
																				{
																					"key": "id"
																				},
																				{
																					"key": "file"
																				}
																			]
																		}
																	},
																	"status": "Not Found",
																	"code": 404,
																	"_postman_previewlanguage": "json",
																	"header": [
																		{
																			"key": "Content-Type",
																			"value": "application/json"
																		}
																	],
																	"cookie": [],
																	"body": "{\n \"code\": 1519430,\n \"message\": \"enim\",\n \"details\": \"do\"\n}"
																},
																{
																	"name": "Bad request",
																	"originalRequest": {
																		"method": "PUT",
																		"header": [
																			{
																				"description": "Added as a part of security scheme: oauth2",
																				"key": "Authorization",
																				"value": "<token>"
																			}
																		],
																		"url": {
																			"raw": "{{baseUrl}}/datasets/:owner/:id/files/:file/metadata",
																			"host": [
																				"{{baseUrl}}"
																			],
																			"path": [
																				"datasets",
																				":owner",
																				":id",
																				"files",
																				":file",
																				"metadata"
																			],
																			"variable": [
																				{
																					"key": "owner"
																				},
																				{
																					"key": "id"
																				},
																				{
																					"key": "file"
																				}
																			]
																		}
																	},
																	"status": "Unprocessable Entity (WebDAV) (RFC 4918)",
																	"code": 422,
																	"_postman_previewlanguage": "json",
																	"header": [
																		{
																			"key": "Content-Type",
																			"value": "application/json"
																		}
																	],
																	"cookie": [],
																	"body": "{\n \"code\": 1519430,\n \"message\": \"enim\",\n \"details\": \"do\"\n}"
																},
																{
																	"name": "Server error",
																	"originalRequest": {
																		"method": "PUT",
																		"header": [
																			{
																				"description": "Added as a part of security scheme: oauth2",
																				"key": "Authorization",
																				"value": "<token>"
																			}
																		],
																		"url": {
																			"raw": "{{baseUrl}}/datasets/:owner/:id/files/:file/metadata",
																			"host": [
																				"{{baseUrl}}"
																			],
																			"path": [
																				"datasets",
																				":owner",
																				":id",
																				"files",
																				":file",
																				"metadata"
																			],
																			"variable": [
																				{
																					"key": "owner"
																				},
																				{
																					"key": "id"
																				},
																				{
																					"key": "file"
																				}
																			]
																		}
																	},
																	"status": "Internal Server Error",
																	"code": 500,
																	"_postman_previewlanguage": "json",
																	"header": [
																		{
																			"key": "Content-Type",
																			"value": "application/json"
																		}
																	],
																	"cookie": [],
																	"body": "{\n \"code\": 1519430,\n \"message\": \"enim\",\n \"details\": \"do\"\n}"
																}
															]
														},
														{
															"name": "Update file description and labels",
															"request": {
																"auth": {
																	"type": "bearer",
																	"bearer": [
																		{
																			"key": "token",
																			"value": "{{readWrite}}",
																			"type": "string"
																		}
																	]
																},
																"method": "PATCH",
																"header": [
																	{
																		"key": "Content-Type",
																		"value": "application/json"
																	}
																],
																"body": {
																	"mode": "raw",
																	"raw": "{\n    \"description\": \"ayyyyy\",\n    \"labels\": [\n        \"raw data\"\n    ]\n}"
																},
																"url": {
																	"raw": "{{baseUrl}}/datasets/:owner/:id/files/:file/metadata",
																	"host": [
																		"{{baseUrl}}"
																	],
																	"path": [
																		"datasets",
																		":owner",
																		":id",
																		"files",
																		":file",
																		"metadata"
																	],
																	"variable": [
																		{
																			"key": "owner",
																			"value": "{{owner}}",
																			"description": "(Required) "
																		},
																		{
																			"key": "id",
																			"value": "{{datasetid}}",
																			"description": "(Required) "
																		},
																		{
																			"key": "file",
																			"value": "{{fileName}}",
																			"description": "(Required) "
																		}
																	]
																},
																"description": "Update file description and labels"
															},
															"response": [
																{
																	"name": "Successfully updated metadata of file.",
																	"originalRequest": {
																		"method": "PATCH",
																		"header": [
																			{
																				"description": "Added as a part of security scheme: oauth2",
																				"key": "Authorization",
																				"value": "<token>"
																			}
																		],
																		"url": {
																			"raw": "{{baseUrl}}/datasets/:owner/:id/files/:file/metadata",
																			"host": [
																				"{{baseUrl}}"
																			],
																			"path": [
																				"datasets",
																				":owner",
																				":id",
																				"files",
																				":file",
																				"metadata"
																			],
																			"variable": [
																				{
																					"key": "owner"
																				},
																				{
																					"key": "id"
																				},
																				{
																					"key": "file"
																				}
																			]
																		}
																	},
																	"status": "OK",
																	"code": 200,
																	"_postman_previewlanguage": "json",
																	"header": [
																		{
																			"key": "Content-Type",
																			"value": "application/json"
																		}
																	],
																	"cookie": [],
																	"body": "{\n \"message\": \"voluptate culpa nulla esse\"\n}"
																},
																{
																	"name": "Bad request",
																	"originalRequest": {
																		"method": "PATCH",
																		"header": [
																			{
																				"description": "Added as a part of security scheme: oauth2",
																				"key": "Authorization",
																				"value": "<token>"
																			}
																		],
																		"url": {
																			"raw": "{{baseUrl}}/datasets/:owner/:id/files/:file/metadata",
																			"host": [
																				"{{baseUrl}}"
																			],
																			"path": [
																				"datasets",
																				":owner",
																				":id",
																				"files",
																				":file",
																				"metadata"
																			],
																			"variable": [
																				{
																					"key": "owner"
																				},
																				{
																					"key": "id"
																				},
																				{
																					"key": "file"
																				}
																			]
																		}
																	},
																	"status": "Bad Request",
																	"code": 400,
																	"_postman_previewlanguage": "json",
																	"header": [
																		{
																			"key": "Content-Type",
																			"value": "application/json"
																		}
																	],
																	"cookie": [],
																	"body": "{\n \"code\": 1519430,\n \"message\": \"enim\",\n \"details\": \"do\"\n}"
																},
																{
																	"name": "Unauthorized",
																	"originalRequest": {
																		"method": "PATCH",
																		"header": [
																			{
																				"description": "Added as a part of security scheme: oauth2",
																				"key": "Authorization",
																				"value": "<token>"
																			}
																		],
																		"url": {
																			"raw": "{{baseUrl}}/datasets/:owner/:id/files/:file/metadata",
																			"host": [
																				"{{baseUrl}}"
																			],
																			"path": [
																				"datasets",
																				":owner",
																				":id",
																				"files",
																				":file",
																				"metadata"
																			],
																			"variable": [
																				{
																					"key": "owner"
																				},
																				{
																					"key": "id"
																				},
																				{
																					"key": "file"
																				}
																			]
																		}
																	},
																	"status": "Unauthorized",
																	"code": 401,
																	"_postman_previewlanguage": "json",
																	"header": [
																		{
																			"key": "Content-Type",
																			"value": "application/json"
																		}
																	],
																	"cookie": [],
																	"body": "{\n \"code\": 1519430,\n \"message\": \"enim\",\n \"details\": \"do\"\n}"
																},
																{
																	"name": "Forbidden",
																	"originalRequest": {
																		"method": "PATCH",
																		"header": [
																			{
																				"description": "Added as a part of security scheme: oauth2",
																				"key": "Authorization",
																				"value": "<token>"
																			}
																		],
																		"url": {
																			"raw": "{{baseUrl}}/datasets/:owner/:id/files/:file/metadata",
																			"host": [
																				"{{baseUrl}}"
																			],
																			"path": [
																				"datasets",
																				":owner",
																				":id",
																				"files",
																				":file",
																				"metadata"
																			],
																			"variable": [
																				{
																					"key": "owner"
																				},
																				{
																					"key": "id"
																				},
																				{
																					"key": "file"
																				}
																			]
																		}
																	},
																	"status": "Forbidden",
																	"code": 403,
																	"_postman_previewlanguage": "json",
																	"header": [
																		{
																			"key": "Content-Type",
																			"value": "application/json"
																		}
																	],
																	"cookie": [],
																	"body": "{\n \"code\": 1519430,\n \"message\": \"enim\",\n \"details\": \"do\"\n}"
																},
																{
																	"name": "Not found",
																	"originalRequest": {
																		"method": "PATCH",
																		"header": [
																			{
																				"description": "Added as a part of security scheme: oauth2",
																				"key": "Authorization",
																				"value": "<token>"
																			}
																		],
																		"url": {
																			"raw": "{{baseUrl}}/datasets/:owner/:id/files/:file/metadata",
																			"host": [
																				"{{baseUrl}}"
																			],
																			"path": [
																				"datasets",
																				":owner",
																				":id",
																				"files",
																				":file",
																				"metadata"
																			],
																			"variable": [
																				{
																					"key": "owner"
																				},
																				{
																					"key": "id"
																				},
																				{
																					"key": "file"
																				}
																			]
																		}
																	},
																	"status": "Not Found",
																	"code": 404,
																	"_postman_previewlanguage": "json",
																	"header": [
																		{
																			"key": "Content-Type",
																			"value": "application/json"
																		}
																	],
																	"cookie": [],
																	"body": "{\n \"code\": 1519430,\n \"message\": \"enim\",\n \"details\": \"do\"\n}"
																},
																{
																	"name": "Bad request",
																	"originalRequest": {
																		"method": "PATCH",
																		"header": [
																			{
																				"description": "Added as a part of security scheme: oauth2",
																				"key": "Authorization",
																				"value": "<token>"
																			}
																		],
																		"url": {
																			"raw": "{{baseUrl}}/datasets/:owner/:id/files/:file/metadata",
																			"host": [
																				"{{baseUrl}}"
																			],
																			"path": [
																				"datasets",
																				":owner",
																				":id",
																				"files",
																				":file",
																				"metadata"
																			],
																			"variable": [
																				{
																					"key": "owner"
																				},
																				{
																					"key": "id"
																				},
																				{
																					"key": "file"
																				}
																			]
																		}
																	},
																	"status": "Unprocessable Entity (WebDAV) (RFC 4918)",
																	"code": 422,
																	"_postman_previewlanguage": "json",
																	"header": [
																		{
																			"key": "Content-Type",
																			"value": "application/json"
																		}
																	],
																	"cookie": [],
																	"body": "{\n \"code\": 1519430,\n \"message\": \"enim\",\n \"details\": \"do\"\n}"
																},
																{
																	"name": "Server error",
																	"originalRequest": {
																		"method": "PATCH",
																		"header": [
																			{
																				"description": "Added as a part of security scheme: oauth2",
																				"key": "Authorization",
																				"value": "<token>"
																			}
																		],
																		"url": {
																			"raw": "{{baseUrl}}/datasets/:owner/:id/files/:file/metadata",
																			"host": [
																				"{{baseUrl}}"
																			],
																			"path": [
																				"datasets",
																				":owner",
																				":id",
																				"files",
																				":file",
																				"metadata"
																			],
																			"variable": [
																				{
																					"key": "owner"
																				},
																				{
																					"key": "id"
																				},
																				{
																					"key": "file"
																				}
																			]
																		}
																	},
																	"status": "Internal Server Error",
																	"code": 500,
																	"_postman_previewlanguage": "json",
																	"header": [
																		{
																			"key": "Content-Type",
																			"value": "application/json"
																		}
																	],
																	"cookie": [],
																	"body": "{\n \"code\": 1519430,\n \"message\": \"enim\",\n \"details\": \"do\"\n}"
																}
															]
														}
													]
												},
												{
													"name": "Delete a single file for a dataset.",
													"request": {
														"auth": {
															"type": "bearer",
															"bearer": [
																{
																	"key": "token",
																	"value": "{{readWrite}}",
																	"type": "string"
																}
															]
														},
														"method": "DELETE",
														"header": [],
														"url": {
															"raw": "{{baseUrl}}/datasets/:owner/:id/files/:file",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"datasets",
																":owner",
																":id",
																"files",
																":file"
															],
															"variable": [
																{
																	"key": "owner",
																	"value": "{{owner}}",
																	"description": "(Required) "
																},
																{
																	"key": "id",
																	"value": "{{datasetid}}",
																	"description": "(Required) "
																},
																{
																	"key": "file",
																	"value": "{{fileName}}",
																	"description": "(Required) Filename"
																}
															]
														}
													},
													"response": [
														{
															"name": "Dataset file(s) have been successfully deleted.",
															"originalRequest": {
																"method": "DELETE",
																"header": [
																	{
																		"description": "Added as a part of security scheme: oauth2",
																		"key": "Authorization",
																		"value": "<token>"
																	}
																],
																"url": {
																	"raw": "{{baseUrl}}/datasets/:owner/:id/files/:file",
																	"host": [
																		"{{baseUrl}}"
																	],
																	"path": [
																		"datasets",
																		":owner",
																		":id",
																		"files",
																		":file"
																	],
																	"variable": [
																		{
																			"key": "owner"
																		},
																		{
																			"key": "id"
																		},
																		{
																			"key": "file"
																		}
																	]
																}
															},
															"status": "OK",
															"code": 200,
															"_postman_previewlanguage": "json",
															"header": [
																{
																	"key": "Content-Type",
																	"value": "application/json"
																}
															],
															"cookie": [],
															"body": "{\n \"message\": \"voluptate culpa nulla esse\"\n}"
														},
														{
															"name": "Bad request",
															"originalRequest": {
																"method": "DELETE",
																"header": [
																	{
																		"description": "Added as a part of security scheme: oauth2",
																		"key": "Authorization",
																		"value": "<token>"
																	}
																],
																"url": {
																	"raw": "{{baseUrl}}/datasets/:owner/:id/files/:file",
																	"host": [
																		"{{baseUrl}}"
																	],
																	"path": [
																		"datasets",
																		":owner",
																		":id",
																		"files",
																		":file"
																	],
																	"variable": [
																		{
																			"key": "owner"
																		},
																		{
																			"key": "id"
																		},
																		{
																			"key": "file"
																		}
																	]
																}
															},
															"status": "Bad Request",
															"code": 400,
															"_postman_previewlanguage": "json",
															"header": [
																{
																	"key": "Content-Type",
																	"value": "application/json"
																}
															],
															"cookie": [],
															"body": "{\n \"code\": 1519430,\n \"message\": \"enim\",\n \"details\": \"do\"\n}"
														},
														{
															"name": "Unauthorized",
															"originalRequest": {
																"method": "DELETE",
																"header": [
																	{
																		"description": "Added as a part of security scheme: oauth2",
																		"key": "Authorization",
																		"value": "<token>"
																	}
																],
																"url": {
																	"raw": "{{baseUrl}}/datasets/:owner/:id/files/:file",
																	"host": [
																		"{{baseUrl}}"
																	],
																	"path": [
																		"datasets",
																		":owner",
																		":id",
																		"files",
																		":file"
																	],
																	"variable": [
																		{
																			"key": "owner"
																		},
																		{
																			"key": "id"
																		},
																		{
																			"key": "file"
																		}
																	]
																}
															},
															"status": "Unauthorized",
															"code": 401,
															"_postman_previewlanguage": "json",
															"header": [
																{
																	"key": "Content-Type",
																	"value": "application/json"
																}
															],
															"cookie": [],
															"body": "{\n \"code\": 1519430,\n \"message\": \"enim\",\n \"details\": \"do\"\n}"
														},
														{
															"name": "Forbidden",
															"originalRequest": {
																"method": "DELETE",
																"header": [
																	{
																		"description": "Added as a part of security scheme: oauth2",
																		"key": "Authorization",
																		"value": "<token>"
																	}
																],
																"url": {
																	"raw": "{{baseUrl}}/datasets/:owner/:id/files/:file",
																	"host": [
																		"{{baseUrl}}"
																	],
																	"path": [
																		"datasets",
																		":owner",
																		":id",
																		"files",
																		":file"
																	],
																	"variable": [
																		{
																			"key": "owner"
																		},
																		{
																			"key": "id"
																		},
																		{
																			"key": "file"
																		}
																	]
																}
															},
															"status": "Forbidden",
															"code": 403,
															"_postman_previewlanguage": "json",
															"header": [
																{
																	"key": "Content-Type",
																	"value": "application/json"
																}
															],
															"cookie": [],
															"body": "{\n \"code\": 1519430,\n \"message\": \"enim\",\n \"details\": \"do\"\n}"
														},
														{
															"name": "Not found",
															"originalRequest": {
																"method": "DELETE",
																"header": [
																	{
																		"description": "Added as a part of security scheme: oauth2",
																		"key": "Authorization",
																		"value": "<token>"
																	}
																],
																"url": {
																	"raw": "{{baseUrl}}/datasets/:owner/:id/files/:file",
																	"host": [
																		"{{baseUrl}}"
																	],
																	"path": [
																		"datasets",
																		":owner",
																		":id",
																		"files",
																		":file"
																	],
																	"variable": [
																		{
																			"key": "owner"
																		},
																		{
																			"key": "id"
																		},
																		{
																			"key": "file"
																		}
																	]
																}
															},
															"status": "Not Found",
															"code": 404,
															"_postman_previewlanguage": "json",
															"header": [
																{
																	"key": "Content-Type",
																	"value": "application/json"
																}
															],
															"cookie": [],
															"body": "{\n \"code\": 1519430,\n \"message\": \"enim\",\n \"details\": \"do\"\n}"
														},
														{
															"name": "Server error",
															"originalRequest": {
																"method": "DELETE",
																"header": [
																	{
																		"description": "Added as a part of security scheme: oauth2",
																		"key": "Authorization",
																		"value": "<token>"
																	}
																],
																"url": {
																	"raw": "{{baseUrl}}/datasets/:owner/:id/files/:file",
																	"host": [
																		"{{baseUrl}}"
																	],
																	"path": [
																		"datasets",
																		":owner",
																		":id",
																		"files",
																		":file"
																	],
																	"variable": [
																		{
																			"key": "owner"
																		},
																		{
																			"key": "id"
																		},
																		{
																			"key": "file"
																		}
																	]
																}
															},
															"status": "Internal Server Error",
															"code": 500,
															"_postman_previewlanguage": "json",
															"header": [
																{
																	"key": "Content-Type",
																	"value": "application/json"
																}
															],
															"cookie": [],
															"body": "{\n \"code\": 1519430,\n \"message\": \"enim\",\n \"details\": \"do\"\n}"
														}
													]
												}
											]
										},
										{
											"name": "Add or update files for a dataset.",
											"request": {
												"auth": {
													"type": "bearer",
													"bearer": [
														{
															"key": "token",
															"value": "{{readWrite}}",
															"type": "string"
														}
													]
												},
												"method": "POST",
												"header": [
													{
														"key": "Content-Type",
														"value": "application/json"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\n    \"files\":[\n        {\n            \"name\": \"51 rows\",\n            \"description\": \"made the fix\",\n            \"labels\": [\"raw data\"],\n            \"source\": {\n                \"url\": \"https://file-examples-com.github.io/uploads/2017/02/file_example_XLS_50.xls\",\n                \"method\": \"GET\"\n            }\n        },\n        {\n            \"name\": \"52 rows\",\n            \"description\": \"made the fix\",\n            \"labels\": [\"raw data\"],\n            \"source\": {\n                \"url\": \"https://file-examples-com.github.io/uploads/2017/02/file_example_XLS_50.xls\",\n                \"method\": \"GET\"\n            }\n        }\n    ]\n}"
												},
												"url": {
													"raw": "{{baseUrl}}/datasets/:owner/:id/files",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"datasets",
														":owner",
														":id",
														"files"
													],
													"variable": [
														{
															"key": "owner",
															"value": "{{owner}}",
															"description": "(Required) "
														},
														{
															"key": "id",
															"value": "{{datasetid}}",
															"description": "(Required) "
														}
													]
												}
											},
											"response": [
												{
													"name": "Dataset successfully updated with new sources. Sync in progress.",
													"originalRequest": {
														"method": "POST",
														"header": [
															{
																"description": "Added as a part of security scheme: oauth2",
																"key": "Authorization",
																"value": "<token>"
															}
														],
														"body": {
															"mode": "raw",
															"raw": "{\n    \"files\": [\n        {\n            \"name\": \"9Dmn*sf\",\n            \"source\": {\n                \"url\": {\n                    \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n                },\n                \"method\": {\n                    \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n                },\n                \"requestHeaders\": {\n                    \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n                },\n                \"requestEntity\": {\n                    \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n                },\n                \"oauthToken\": {\n                    \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n                },\n                \"credentials\": {\n                    \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n                },\n                \"authorization\": {\n                    \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n                },\n                \"databaseSource\": {\n                    \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n                },\n                \"dwccSpec\": {\n                    \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n                },\n                \"viewRequest\": {\n                    \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n                },\n                \"databaseMetadataSpec\": {\n                    \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n                },\n                \"dataTables\": {\n                    \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n                },\n                \"tableSpec\": {\n                    \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n                },\n                \"expandArchive\": {\n                    \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n                }\n            },\n            \"description\": \"dolor voluptate\",\n            \"labels\": [\n                \"id aliqua sunt\",\n                \"sed velit adipisicing eu\"\n            ]\n        },\n        {\n            \"name\": \"R!b \",\n            \"source\": {\n                \"url\": {\n                    \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n                },\n                \"method\": {\n                    \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n                },\n                \"requestHeaders\": {\n                    \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n                },\n                \"requestEntity\": {\n                    \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n                },\n                \"oauthToken\": {\n                    \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n                },\n                \"credentials\": {\n                    \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n                },\n                \"authorization\": {\n                    \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n                },\n                \"databaseSource\": {\n                    \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n                },\n                \"dwccSpec\": {\n                    \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n                },\n                \"viewRequest\": {\n                    \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n                },\n                \"databaseMetadataSpec\": {\n                    \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n                },\n                \"dataTables\": {\n                    \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n                },\n                \"tableSpec\": {\n                    \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n                },\n                \"expandArchive\": {\n                    \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n                }\n            },\n            \"description\": \"in minim occaecat\",\n            \"labels\": [\n                \"anim pariatur et\",\n                \"veniam irure do ad laboris\"\n            ]\n        }\n    ]\n}"
														},
														"url": {
															"raw": "{{baseUrl}}/datasets/:owner/:id/files",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"datasets",
																":owner",
																":id",
																"files"
															],
															"variable": [
																{
																	"key": "owner"
																},
																{
																	"key": "id"
																}
															]
														}
													},
													"status": "OK",
													"code": 200,
													"_postman_previewlanguage": "json",
													"header": [
														{
															"key": "Content-Type",
															"value": "application/json"
														}
													],
													"cookie": [],
													"body": "{\n \"message\": \"voluptate culpa nulla esse\"\n}"
												},
												{
													"name": "Bad request",
													"originalRequest": {
														"method": "POST",
														"header": [
															{
																"description": "Added as a part of security scheme: oauth2",
																"key": "Authorization",
																"value": "<token>"
															}
														],
														"body": {
															"mode": "raw",
															"raw": "{\n    \"files\": [\n        {\n            \"name\": \"9Dmn*sf\",\n            \"source\": {\n                \"url\": {\n                    \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n                },\n                \"method\": {\n                    \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n                },\n                \"requestHeaders\": {\n                    \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n                },\n                \"requestEntity\": {\n                    \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n                },\n                \"oauthToken\": {\n                    \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n                },\n                \"credentials\": {\n                    \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n                },\n                \"authorization\": {\n                    \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n                },\n                \"databaseSource\": {\n                    \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n                },\n                \"dwccSpec\": {\n                    \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n                },\n                \"viewRequest\": {\n                    \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n                },\n                \"databaseMetadataSpec\": {\n                    \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n                },\n                \"dataTables\": {\n                    \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n                },\n                \"tableSpec\": {\n                    \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n                },\n                \"expandArchive\": {\n                    \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n                }\n            },\n            \"description\": \"dolor voluptate\",\n            \"labels\": [\n                \"id aliqua sunt\",\n                \"sed velit adipisicing eu\"\n            ]\n        },\n        {\n            \"name\": \"R!b \",\n            \"source\": {\n                \"url\": {\n                    \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n                },\n                \"method\": {\n                    \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n                },\n                \"requestHeaders\": {\n                    \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n                },\n                \"requestEntity\": {\n                    \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n                },\n                \"oauthToken\": {\n                    \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n                },\n                \"credentials\": {\n                    \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n                },\n                \"authorization\": {\n                    \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n                },\n                \"databaseSource\": {\n                    \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n                },\n                \"dwccSpec\": {\n                    \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n                },\n                \"viewRequest\": {\n                    \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n                },\n                \"databaseMetadataSpec\": {\n                    \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n                },\n                \"dataTables\": {\n                    \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n                },\n                \"tableSpec\": {\n                    \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n                },\n                \"expandArchive\": {\n                    \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n                }\n            },\n            \"description\": \"in minim occaecat\",\n            \"labels\": [\n                \"anim pariatur et\",\n                \"veniam irure do ad laboris\"\n            ]\n        }\n    ]\n}"
														},
														"url": {
															"raw": "{{baseUrl}}/datasets/:owner/:id/files",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"datasets",
																":owner",
																":id",
																"files"
															],
															"variable": [
																{
																	"key": "owner"
																},
																{
																	"key": "id"
																}
															]
														}
													},
													"status": "Bad Request",
													"code": 400,
													"_postman_previewlanguage": "json",
													"header": [
														{
															"key": "Content-Type",
															"value": "application/json"
														}
													],
													"cookie": [],
													"body": "{\n \"code\": 1519430,\n \"message\": \"enim\",\n \"details\": \"do\"\n}"
												},
												{
													"name": "Unauthorized",
													"originalRequest": {
														"method": "POST",
														"header": [
															{
																"description": "Added as a part of security scheme: oauth2",
																"key": "Authorization",
																"value": "<token>"
															}
														],
														"body": {
															"mode": "raw",
															"raw": "{\n    \"files\": [\n        {\n            \"name\": \"9Dmn*sf\",\n            \"source\": {\n                \"url\": {\n                    \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n                },\n                \"method\": {\n                    \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n                },\n                \"requestHeaders\": {\n                    \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n                },\n                \"requestEntity\": {\n                    \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n                },\n                \"oauthToken\": {\n                    \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n                },\n                \"credentials\": {\n                    \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n                },\n                \"authorization\": {\n                    \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n                },\n                \"databaseSource\": {\n                    \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n                },\n                \"dwccSpec\": {\n                    \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n                },\n                \"viewRequest\": {\n                    \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n                },\n                \"databaseMetadataSpec\": {\n                    \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n                },\n                \"dataTables\": {\n                    \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n                },\n                \"tableSpec\": {\n                    \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n                },\n                \"expandArchive\": {\n                    \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n                }\n            },\n            \"description\": \"dolor voluptate\",\n            \"labels\": [\n                \"id aliqua sunt\",\n                \"sed velit adipisicing eu\"\n            ]\n        },\n        {\n            \"name\": \"R!b \",\n            \"source\": {\n                \"url\": {\n                    \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n                },\n                \"method\": {\n                    \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n                },\n                \"requestHeaders\": {\n                    \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n                },\n                \"requestEntity\": {\n                    \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n                },\n                \"oauthToken\": {\n                    \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n                },\n                \"credentials\": {\n                    \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n                },\n                \"authorization\": {\n                    \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n                },\n                \"databaseSource\": {\n                    \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n                },\n                \"dwccSpec\": {\n                    \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n                },\n                \"viewRequest\": {\n                    \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n                },\n                \"databaseMetadataSpec\": {\n                    \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n                },\n                \"dataTables\": {\n                    \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n                },\n                \"tableSpec\": {\n                    \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n                },\n                \"expandArchive\": {\n                    \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n                }\n            },\n            \"description\": \"in minim occaecat\",\n            \"labels\": [\n                \"anim pariatur et\",\n                \"veniam irure do ad laboris\"\n            ]\n        }\n    ]\n}"
														},
														"url": {
															"raw": "{{baseUrl}}/datasets/:owner/:id/files",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"datasets",
																":owner",
																":id",
																"files"
															],
															"variable": [
																{
																	"key": "owner"
																},
																{
																	"key": "id"
																}
															]
														}
													},
													"status": "Unauthorized",
													"code": 401,
													"_postman_previewlanguage": "json",
													"header": [
														{
															"key": "Content-Type",
															"value": "application/json"
														}
													],
													"cookie": [],
													"body": "{\n \"code\": 1519430,\n \"message\": \"enim\",\n \"details\": \"do\"\n}"
												},
												{
													"name": "Forbidden",
													"originalRequest": {
														"method": "POST",
														"header": [
															{
																"description": "Added as a part of security scheme: oauth2",
																"key": "Authorization",
																"value": "<token>"
															}
														],
														"body": {
															"mode": "raw",
															"raw": "{\n    \"files\": [\n        {\n            \"name\": \"9Dmn*sf\",\n            \"source\": {\n                \"url\": {\n                    \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n                },\n                \"method\": {\n                    \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n                },\n                \"requestHeaders\": {\n                    \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n                },\n                \"requestEntity\": {\n                    \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n                },\n                \"oauthToken\": {\n                    \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n                },\n                \"credentials\": {\n                    \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n                },\n                \"authorization\": {\n                    \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n                },\n                \"databaseSource\": {\n                    \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n                },\n                \"dwccSpec\": {\n                    \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n                },\n                \"viewRequest\": {\n                    \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n                },\n                \"databaseMetadataSpec\": {\n                    \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n                },\n                \"dataTables\": {\n                    \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n                },\n                \"tableSpec\": {\n                    \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n                },\n                \"expandArchive\": {\n                    \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n                }\n            },\n            \"description\": \"dolor voluptate\",\n            \"labels\": [\n                \"id aliqua sunt\",\n                \"sed velit adipisicing eu\"\n            ]\n        },\n        {\n            \"name\": \"R!b \",\n            \"source\": {\n                \"url\": {\n                    \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n                },\n                \"method\": {\n                    \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n                },\n                \"requestHeaders\": {\n                    \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n                },\n                \"requestEntity\": {\n                    \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n                },\n                \"oauthToken\": {\n                    \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n                },\n                \"credentials\": {\n                    \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n                },\n                \"authorization\": {\n                    \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n                },\n                \"databaseSource\": {\n                    \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n                },\n                \"dwccSpec\": {\n                    \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n                },\n                \"viewRequest\": {\n                    \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n                },\n                \"databaseMetadataSpec\": {\n                    \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n                },\n                \"dataTables\": {\n                    \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n                },\n                \"tableSpec\": {\n                    \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n                },\n                \"expandArchive\": {\n                    \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n                }\n            },\n            \"description\": \"in minim occaecat\",\n            \"labels\": [\n                \"anim pariatur et\",\n                \"veniam irure do ad laboris\"\n            ]\n        }\n    ]\n}"
														},
														"url": {
															"raw": "{{baseUrl}}/datasets/:owner/:id/files",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"datasets",
																":owner",
																":id",
																"files"
															],
															"variable": [
																{
																	"key": "owner"
																},
																{
																	"key": "id"
																}
															]
														}
													},
													"status": "Forbidden",
													"code": 403,
													"_postman_previewlanguage": "json",
													"header": [
														{
															"key": "Content-Type",
															"value": "application/json"
														}
													],
													"cookie": [],
													"body": "{\n \"code\": 1519430,\n \"message\": \"enim\",\n \"details\": \"do\"\n}"
												},
												{
													"name": "Not found",
													"originalRequest": {
														"method": "POST",
														"header": [
															{
																"description": "Added as a part of security scheme: oauth2",
																"key": "Authorization",
																"value": "<token>"
															}
														],
														"body": {
															"mode": "raw",
															"raw": "{\n    \"files\": [\n        {\n            \"name\": \"9Dmn*sf\",\n            \"source\": {\n                \"url\": {\n                    \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n                },\n                \"method\": {\n                    \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n                },\n                \"requestHeaders\": {\n                    \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n                },\n                \"requestEntity\": {\n                    \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n                },\n                \"oauthToken\": {\n                    \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n                },\n                \"credentials\": {\n                    \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n                },\n                \"authorization\": {\n                    \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n                },\n                \"databaseSource\": {\n                    \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n                },\n                \"dwccSpec\": {\n                    \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n                },\n                \"viewRequest\": {\n                    \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n                },\n                \"databaseMetadataSpec\": {\n                    \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n                },\n                \"dataTables\": {\n                    \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n                },\n                \"tableSpec\": {\n                    \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n                },\n                \"expandArchive\": {\n                    \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n                }\n            },\n            \"description\": \"dolor voluptate\",\n            \"labels\": [\n                \"id aliqua sunt\",\n                \"sed velit adipisicing eu\"\n            ]\n        },\n        {\n            \"name\": \"R!b \",\n            \"source\": {\n                \"url\": {\n                    \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n                },\n                \"method\": {\n                    \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n                },\n                \"requestHeaders\": {\n                    \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n                },\n                \"requestEntity\": {\n                    \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n                },\n                \"oauthToken\": {\n                    \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n                },\n                \"credentials\": {\n                    \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n                },\n                \"authorization\": {\n                    \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n                },\n                \"databaseSource\": {\n                    \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n                },\n                \"dwccSpec\": {\n                    \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n                },\n                \"viewRequest\": {\n                    \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n                },\n                \"databaseMetadataSpec\": {\n                    \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n                },\n                \"dataTables\": {\n                    \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n                },\n                \"tableSpec\": {\n                    \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n                },\n                \"expandArchive\": {\n                    \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n                }\n            },\n            \"description\": \"in minim occaecat\",\n            \"labels\": [\n                \"anim pariatur et\",\n                \"veniam irure do ad laboris\"\n            ]\n        }\n    ]\n}"
														},
														"url": {
															"raw": "{{baseUrl}}/datasets/:owner/:id/files",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"datasets",
																":owner",
																":id",
																"files"
															],
															"variable": [
																{
																	"key": "owner"
																},
																{
																	"key": "id"
																}
															]
														}
													},
													"status": "Not Found",
													"code": 404,
													"_postman_previewlanguage": "json",
													"header": [
														{
															"key": "Content-Type",
															"value": "application/json"
														}
													],
													"cookie": [],
													"body": "{\n \"code\": 1519430,\n \"message\": \"enim\",\n \"details\": \"do\"\n}"
												},
												{
													"name": "Bad request",
													"originalRequest": {
														"method": "POST",
														"header": [
															{
																"description": "Added as a part of security scheme: oauth2",
																"key": "Authorization",
																"value": "<token>"
															}
														],
														"body": {
															"mode": "raw",
															"raw": "{\n    \"files\": [\n        {\n            \"name\": \"9Dmn*sf\",\n            \"source\": {\n                \"url\": {\n                    \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n                },\n                \"method\": {\n                    \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n                },\n                \"requestHeaders\": {\n                    \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n                },\n                \"requestEntity\": {\n                    \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n                },\n                \"oauthToken\": {\n                    \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n                },\n                \"credentials\": {\n                    \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n                },\n                \"authorization\": {\n                    \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n                },\n                \"databaseSource\": {\n                    \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n                },\n                \"dwccSpec\": {\n                    \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n                },\n                \"viewRequest\": {\n                    \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n                },\n                \"databaseMetadataSpec\": {\n                    \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n                },\n                \"dataTables\": {\n                    \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n                },\n                \"tableSpec\": {\n                    \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n                },\n                \"expandArchive\": {\n                    \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n                }\n            },\n            \"description\": \"dolor voluptate\",\n            \"labels\": [\n                \"id aliqua sunt\",\n                \"sed velit adipisicing eu\"\n            ]\n        },\n        {\n            \"name\": \"R!b \",\n            \"source\": {\n                \"url\": {\n                    \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n                },\n                \"method\": {\n                    \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n                },\n                \"requestHeaders\": {\n                    \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n                },\n                \"requestEntity\": {\n                    \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n                },\n                \"oauthToken\": {\n                    \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n                },\n                \"credentials\": {\n                    \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n                },\n                \"authorization\": {\n                    \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n                },\n                \"databaseSource\": {\n                    \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n                },\n                \"dwccSpec\": {\n                    \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n                },\n                \"viewRequest\": {\n                    \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n                },\n                \"databaseMetadataSpec\": {\n                    \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n                },\n                \"dataTables\": {\n                    \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n                },\n                \"tableSpec\": {\n                    \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n                },\n                \"expandArchive\": {\n                    \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n                }\n            },\n            \"description\": \"in minim occaecat\",\n            \"labels\": [\n                \"anim pariatur et\",\n                \"veniam irure do ad laboris\"\n            ]\n        }\n    ]\n}"
														},
														"url": {
															"raw": "{{baseUrl}}/datasets/:owner/:id/files",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"datasets",
																":owner",
																":id",
																"files"
															],
															"variable": [
																{
																	"key": "owner"
																},
																{
																	"key": "id"
																}
															]
														}
													},
													"status": "Unprocessable Entity (WebDAV) (RFC 4918)",
													"code": 422,
													"_postman_previewlanguage": "json",
													"header": [
														{
															"key": "Content-Type",
															"value": "application/json"
														}
													],
													"cookie": [],
													"body": "{\n \"code\": 1519430,\n \"message\": \"enim\",\n \"details\": \"do\"\n}"
												},
												{
													"name": "Server error",
													"originalRequest": {
														"method": "POST",
														"header": [
															{
																"description": "Added as a part of security scheme: oauth2",
																"key": "Authorization",
																"value": "<token>"
															}
														],
														"body": {
															"mode": "raw",
															"raw": "{\n    \"files\": [\n        {\n            \"name\": \"9Dmn*sf\",\n            \"source\": {\n                \"url\": {\n                    \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n                },\n                \"method\": {\n                    \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n                },\n                \"requestHeaders\": {\n                    \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n                },\n                \"requestEntity\": {\n                    \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n                },\n                \"oauthToken\": {\n                    \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n                },\n                \"credentials\": {\n                    \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n                },\n                \"authorization\": {\n                    \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n                },\n                \"databaseSource\": {\n                    \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n                },\n                \"dwccSpec\": {\n                    \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n                },\n                \"viewRequest\": {\n                    \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n                },\n                \"databaseMetadataSpec\": {\n                    \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n                },\n                \"dataTables\": {\n                    \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n                },\n                \"tableSpec\": {\n                    \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n                },\n                \"expandArchive\": {\n                    \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n                }\n            },\n            \"description\": \"dolor voluptate\",\n            \"labels\": [\n                \"id aliqua sunt\",\n                \"sed velit adipisicing eu\"\n            ]\n        },\n        {\n            \"name\": \"R!b \",\n            \"source\": {\n                \"url\": {\n                    \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n                },\n                \"method\": {\n                    \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n                },\n                \"requestHeaders\": {\n                    \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n                },\n                \"requestEntity\": {\n                    \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n                },\n                \"oauthToken\": {\n                    \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n                },\n                \"credentials\": {\n                    \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n                },\n                \"authorization\": {\n                    \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n                },\n                \"databaseSource\": {\n                    \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n                },\n                \"dwccSpec\": {\n                    \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n                },\n                \"viewRequest\": {\n                    \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n                },\n                \"databaseMetadataSpec\": {\n                    \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n                },\n                \"dataTables\": {\n                    \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n                },\n                \"tableSpec\": {\n                    \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n                },\n                \"expandArchive\": {\n                    \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n                }\n            },\n            \"description\": \"in minim occaecat\",\n            \"labels\": [\n                \"anim pariatur et\",\n                \"veniam irure do ad laboris\"\n            ]\n        }\n    ]\n}"
														},
														"url": {
															"raw": "{{baseUrl}}/datasets/:owner/:id/files",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"datasets",
																":owner",
																":id",
																"files"
															],
															"variable": [
																{
																	"key": "owner"
																},
																{
																	"key": "id"
																}
															]
														}
													},
													"status": "Internal Server Error",
													"code": 500,
													"_postman_previewlanguage": "json",
													"header": [
														{
															"key": "Content-Type",
															"value": "application/json"
														}
													],
													"cookie": [],
													"body": "{\n \"code\": 1519430,\n \"message\": \"enim\",\n \"details\": \"do\"\n}"
												}
											]
										},
										{
											"name": "Delete files for a dataset.",
											"request": {
												"auth": {
													"type": "bearer",
													"bearer": [
														{
															"key": "token",
															"value": "{{readWrite}}",
															"type": "string"
														}
													]
												},
												"method": "DELETE",
												"header": [],
												"url": {
													"raw": "{{baseUrl}}/datasets/:owner/:id/files?name=52 rows",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"datasets",
														":owner",
														":id",
														"files"
													],
													"query": [
														{
															"key": "name",
															"value": "52 rows",
															"description": "(Required) "
														},
														{
															"key": "name",
															"value": "aute do ea Duis",
															"description": "(Required) ",
															"disabled": true
														}
													],
													"variable": [
														{
															"key": "owner",
															"value": "{{owner}}",
															"description": "(Required) "
														},
														{
															"key": "id",
															"value": "{{datasetid}}",
															"description": "(Required) "
														}
													]
												}
											},
											"response": [
												{
													"name": "Dataset file(s) have been successfully deleted.",
													"originalRequest": {
														"method": "DELETE",
														"header": [
															{
																"description": "Added as a part of security scheme: oauth2",
																"key": "Authorization",
																"value": "<token>"
															}
														],
														"url": {
															"raw": "{{baseUrl}}/datasets/:owner/:id/files?name=commodo deserunt&name=ali",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"datasets",
																":owner",
																":id",
																"files"
															],
															"query": [
																{
																	"key": "name",
																	"value": "commodo deserunt"
																},
																{
																	"key": "name",
																	"value": "ali"
																}
															],
															"variable": [
																{
																	"key": "owner"
																},
																{
																	"key": "id"
																}
															]
														}
													},
													"status": "OK",
													"code": 200,
													"_postman_previewlanguage": "json",
													"header": [
														{
															"key": "Content-Type",
															"value": "application/json"
														}
													],
													"cookie": [],
													"body": "{\n \"message\": \"voluptate culpa nulla esse\"\n}"
												},
												{
													"name": "Bad request",
													"originalRequest": {
														"method": "DELETE",
														"header": [
															{
																"description": "Added as a part of security scheme: oauth2",
																"key": "Authorization",
																"value": "<token>"
															}
														],
														"url": {
															"raw": "{{baseUrl}}/datasets/:owner/:id/files?name=commodo deserunt&name=ali",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"datasets",
																":owner",
																":id",
																"files"
															],
															"query": [
																{
																	"key": "name",
																	"value": "commodo deserunt"
																},
																{
																	"key": "name",
																	"value": "ali"
																}
															],
															"variable": [
																{
																	"key": "owner"
																},
																{
																	"key": "id"
																}
															]
														}
													},
													"status": "Bad Request",
													"code": 400,
													"_postman_previewlanguage": "json",
													"header": [
														{
															"key": "Content-Type",
															"value": "application/json"
														}
													],
													"cookie": [],
													"body": "{\n \"code\": 1519430,\n \"message\": \"enim\",\n \"details\": \"do\"\n}"
												},
												{
													"name": "Unauthorized",
													"originalRequest": {
														"method": "DELETE",
														"header": [
															{
																"description": "Added as a part of security scheme: oauth2",
																"key": "Authorization",
																"value": "<token>"
															}
														],
														"url": {
															"raw": "{{baseUrl}}/datasets/:owner/:id/files?name=commodo deserunt&name=ali",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"datasets",
																":owner",
																":id",
																"files"
															],
															"query": [
																{
																	"key": "name",
																	"value": "commodo deserunt"
																},
																{
																	"key": "name",
																	"value": "ali"
																}
															],
															"variable": [
																{
																	"key": "owner"
																},
																{
																	"key": "id"
																}
															]
														}
													},
													"status": "Unauthorized",
													"code": 401,
													"_postman_previewlanguage": "json",
													"header": [
														{
															"key": "Content-Type",
															"value": "application/json"
														}
													],
													"cookie": [],
													"body": "{\n \"code\": 1519430,\n \"message\": \"enim\",\n \"details\": \"do\"\n}"
												},
												{
													"name": "Forbidden",
													"originalRequest": {
														"method": "DELETE",
														"header": [
															{
																"description": "Added as a part of security scheme: oauth2",
																"key": "Authorization",
																"value": "<token>"
															}
														],
														"url": {
															"raw": "{{baseUrl}}/datasets/:owner/:id/files?name=commodo deserunt&name=ali",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"datasets",
																":owner",
																":id",
																"files"
															],
															"query": [
																{
																	"key": "name",
																	"value": "commodo deserunt"
																},
																{
																	"key": "name",
																	"value": "ali"
																}
															],
															"variable": [
																{
																	"key": "owner"
																},
																{
																	"key": "id"
																}
															]
														}
													},
													"status": "Forbidden",
													"code": 403,
													"_postman_previewlanguage": "json",
													"header": [
														{
															"key": "Content-Type",
															"value": "application/json"
														}
													],
													"cookie": [],
													"body": "{\n \"code\": 1519430,\n \"message\": \"enim\",\n \"details\": \"do\"\n}"
												},
												{
													"name": "Not found",
													"originalRequest": {
														"method": "DELETE",
														"header": [
															{
																"description": "Added as a part of security scheme: oauth2",
																"key": "Authorization",
																"value": "<token>"
															}
														],
														"url": {
															"raw": "{{baseUrl}}/datasets/:owner/:id/files?name=commodo deserunt&name=ali",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"datasets",
																":owner",
																":id",
																"files"
															],
															"query": [
																{
																	"key": "name",
																	"value": "commodo deserunt"
																},
																{
																	"key": "name",
																	"value": "ali"
																}
															],
															"variable": [
																{
																	"key": "owner"
																},
																{
																	"key": "id"
																}
															]
														}
													},
													"status": "Not Found",
													"code": 404,
													"_postman_previewlanguage": "json",
													"header": [
														{
															"key": "Content-Type",
															"value": "application/json"
														}
													],
													"cookie": [],
													"body": "{\n \"code\": 1519430,\n \"message\": \"enim\",\n \"details\": \"do\"\n}"
												},
												{
													"name": "Server error",
													"originalRequest": {
														"method": "DELETE",
														"header": [
															{
																"description": "Added as a part of security scheme: oauth2",
																"key": "Authorization",
																"value": "<token>"
															}
														],
														"url": {
															"raw": "{{baseUrl}}/datasets/:owner/:id/files?name=commodo deserunt&name=ali",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"datasets",
																":owner",
																":id",
																"files"
															],
															"query": [
																{
																	"key": "name",
																	"value": "commodo deserunt"
																},
																{
																	"key": "name",
																	"value": "ali"
																}
															],
															"variable": [
																{
																	"key": "owner"
																},
																{
																	"key": "id"
																}
															]
														}
													},
													"status": "Internal Server Error",
													"code": 500,
													"_postman_previewlanguage": "json",
													"header": [
														{
															"key": "Content-Type",
															"value": "application/json"
														}
													],
													"cookie": [],
													"body": "{\n \"code\": 1519430,\n \"message\": \"enim\",\n \"details\": \"do\"\n}"
												}
											]
										}
									]
								},
								{
									"name": "queries",
									"item": [
										{
											"name": "{query Id}",
											"item": [
												{
													"name": "Update a saved query for a dataset",
													"request": {
														"auth": {
															"type": "bearer",
															"bearer": [
																{
																	"key": "token",
																	"value": "{{readWrite}}",
																	"type": "string"
																}
															]
														},
														"method": "PUT",
														"header": [
															{
																"key": "Content-Type",
																"value": "application/json"
															}
														],
														"body": {
															"mode": "raw",
															"raw": "{\n    \"content\": \"select last_name from 50_rows\",\n    \"name\": \"firstname\",\n    \"published\": false\n}"
														},
														"url": {
															"raw": "{{baseUrl}}/datasets/:owner/:id/queries/:queryId",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"datasets",
																":owner",
																":id",
																"queries",
																":queryId"
															],
															"variable": [
																{
																	"key": "owner",
																	"value": "{{owner}}",
																	"description": "(Required) "
																},
																{
																	"key": "id",
																	"value": "{{datasetid}}",
																	"description": "(Required) "
																},
																{
																	"key": "queryId",
																	"value": "{{queryid}}",
																	"description": "(Required) "
																}
															]
														}
													},
													"response": [
														{
															"name": "Successfully updated saved query.",
															"originalRequest": {
																"method": "PUT",
																"header": [
																	{
																		"description": "Added as a part of security scheme: oauth2",
																		"key": "Authorization",
																		"value": "<token>"
																	}
																],
																"url": {
																	"raw": "{{baseUrl}}/datasets/:owner/:id/queries/:queryId",
																	"host": [
																		"{{baseUrl}}"
																	],
																	"path": [
																		"datasets",
																		":owner",
																		":id",
																		"queries",
																		":queryId"
																	],
																	"variable": [
																		{
																			"key": "owner"
																		},
																		{
																			"key": "id"
																		},
																		{
																			"key": "queryId"
																		}
																	]
																}
															},
															"status": "OK",
															"code": 200,
															"_postman_previewlanguage": "json",
															"header": [
																{
																	"key": "Content-Type",
																	"value": "application/json"
																}
															],
															"cookie": [],
															"body": "{\n \"id\": \"sint offi\",\n \"owner\": \"voluptate\",\n \"language\": \"SPARQL\",\n \"name\": \"ex anim in\",\n \"body\": \"consectetur\",\n \"version\": \"sed reprehenderit veniam commodo aliqua\",\n \"created\": \"aliqua mollit\",\n \"updated\": \"aliquip aliqua do irure eu\",\n \"parameters\": {}\n}"
														},
														{
															"name": "Bad request",
															"originalRequest": {
																"method": "PUT",
																"header": [
																	{
																		"description": "Added as a part of security scheme: oauth2",
																		"key": "Authorization",
																		"value": "<token>"
																	}
																],
																"url": {
																	"raw": "{{baseUrl}}/datasets/:owner/:id/queries/:queryId",
																	"host": [
																		"{{baseUrl}}"
																	],
																	"path": [
																		"datasets",
																		":owner",
																		":id",
																		"queries",
																		":queryId"
																	],
																	"variable": [
																		{
																			"key": "owner"
																		},
																		{
																			"key": "id"
																		},
																		{
																			"key": "queryId"
																		}
																	]
																}
															},
															"status": "Bad Request",
															"code": 400,
															"_postman_previewlanguage": "json",
															"header": [
																{
																	"key": "Content-Type",
																	"value": "application/json"
																}
															],
															"cookie": [],
															"body": "{\n \"code\": 1519430,\n \"message\": \"enim\",\n \"details\": \"do\"\n}"
														},
														{
															"name": "Unauthorized",
															"originalRequest": {
																"method": "PUT",
																"header": [
																	{
																		"description": "Added as a part of security scheme: oauth2",
																		"key": "Authorization",
																		"value": "<token>"
																	}
																],
																"url": {
																	"raw": "{{baseUrl}}/datasets/:owner/:id/queries/:queryId",
																	"host": [
																		"{{baseUrl}}"
																	],
																	"path": [
																		"datasets",
																		":owner",
																		":id",
																		"queries",
																		":queryId"
																	],
																	"variable": [
																		{
																			"key": "owner"
																		},
																		{
																			"key": "id"
																		},
																		{
																			"key": "queryId"
																		}
																	]
																}
															},
															"status": "Unauthorized",
															"code": 401,
															"_postman_previewlanguage": "json",
															"header": [
																{
																	"key": "Content-Type",
																	"value": "application/json"
																}
															],
															"cookie": [],
															"body": "{\n \"code\": 1519430,\n \"message\": \"enim\",\n \"details\": \"do\"\n}"
														},
														{
															"name": "Forbidden",
															"originalRequest": {
																"method": "PUT",
																"header": [
																	{
																		"description": "Added as a part of security scheme: oauth2",
																		"key": "Authorization",
																		"value": "<token>"
																	}
																],
																"url": {
																	"raw": "{{baseUrl}}/datasets/:owner/:id/queries/:queryId",
																	"host": [
																		"{{baseUrl}}"
																	],
																	"path": [
																		"datasets",
																		":owner",
																		":id",
																		"queries",
																		":queryId"
																	],
																	"variable": [
																		{
																			"key": "owner"
																		},
																		{
																			"key": "id"
																		},
																		{
																			"key": "queryId"
																		}
																	]
																}
															},
															"status": "Forbidden",
															"code": 403,
															"_postman_previewlanguage": "json",
															"header": [
																{
																	"key": "Content-Type",
																	"value": "application/json"
																}
															],
															"cookie": [],
															"body": "{\n \"code\": 1519430,\n \"message\": \"enim\",\n \"details\": \"do\"\n}"
														},
														{
															"name": "Not found",
															"originalRequest": {
																"method": "PUT",
																"header": [
																	{
																		"description": "Added as a part of security scheme: oauth2",
																		"key": "Authorization",
																		"value": "<token>"
																	}
																],
																"url": {
																	"raw": "{{baseUrl}}/datasets/:owner/:id/queries/:queryId",
																	"host": [
																		"{{baseUrl}}"
																	],
																	"path": [
																		"datasets",
																		":owner",
																		":id",
																		"queries",
																		":queryId"
																	],
																	"variable": [
																		{
																			"key": "owner"
																		},
																		{
																			"key": "id"
																		},
																		{
																			"key": "queryId"
																		}
																	]
																}
															},
															"status": "Not Found",
															"code": 404,
															"_postman_previewlanguage": "json",
															"header": [
																{
																	"key": "Content-Type",
																	"value": "application/json"
																}
															],
															"cookie": [],
															"body": "{\n \"code\": 1519430,\n \"message\": \"enim\",\n \"details\": \"do\"\n}"
														},
														{
															"name": "Server error",
															"originalRequest": {
																"method": "PUT",
																"header": [
																	{
																		"description": "Added as a part of security scheme: oauth2",
																		"key": "Authorization",
																		"value": "<token>"
																	}
																],
																"url": {
																	"raw": "{{baseUrl}}/datasets/:owner/:id/queries/:queryId",
																	"host": [
																		"{{baseUrl}}"
																	],
																	"path": [
																		"datasets",
																		":owner",
																		":id",
																		"queries",
																		":queryId"
																	],
																	"variable": [
																		{
																			"key": "owner"
																		},
																		{
																			"key": "id"
																		},
																		{
																			"key": "queryId"
																		}
																	]
																}
															},
															"status": "Internal Server Error",
															"code": 500,
															"_postman_previewlanguage": "json",
															"header": [
																{
																	"key": "Content-Type",
																	"value": "application/json"
																}
															],
															"cookie": [],
															"body": "{\n \"code\": 1519430,\n \"message\": \"enim\",\n \"details\": \"do\"\n}"
														}
													]
												},
												{
													"name": "Delete a saved query for a dataset",
													"request": {
														"auth": {
															"type": "bearer",
															"bearer": [
																{
																	"key": "token",
																	"value": "{{readWrite}}",
																	"type": "string"
																}
															]
														},
														"method": "DELETE",
														"header": [],
														"url": {
															"raw": "{{baseUrl}}/datasets/:owner/:id/queries/:queryId",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"datasets",
																":owner",
																":id",
																"queries",
																":queryId"
															],
															"variable": [
																{
																	"key": "owner",
																	"value": "{{owner}}",
																	"description": "(Required) "
																},
																{
																	"key": "id",
																	"value": "{{datasetid}}",
																	"description": "(Required) "
																},
																{
																	"key": "queryId",
																	"value": "{{queryid}}",
																	"description": "(Required) "
																}
															]
														}
													},
													"response": [
														{
															"name": "Successfully deleted saved query.",
															"originalRequest": {
																"method": "DELETE",
																"header": [
																	{
																		"description": "Added as a part of security scheme: oauth2",
																		"key": "Authorization",
																		"value": "<token>"
																	}
																],
																"url": {
																	"raw": "{{baseUrl}}/datasets/:owner/:id/queries/:queryId",
																	"host": [
																		"{{baseUrl}}"
																	],
																	"path": [
																		"datasets",
																		":owner",
																		":id",
																		"queries",
																		":queryId"
																	],
																	"variable": [
																		{
																			"key": "owner"
																		},
																		{
																			"key": "id"
																		},
																		{
																			"key": "queryId"
																		}
																	]
																}
															},
															"status": "OK",
															"code": 200,
															"_postman_previewlanguage": "json",
															"header": [
																{
																	"key": "Content-Type",
																	"value": "application/json"
																}
															],
															"cookie": [],
															"body": "{\n \"message\": \"voluptate culpa nulla esse\"\n}"
														},
														{
															"name": "Bad request",
															"originalRequest": {
																"method": "DELETE",
																"header": [
																	{
																		"description": "Added as a part of security scheme: oauth2",
																		"key": "Authorization",
																		"value": "<token>"
																	}
																],
																"url": {
																	"raw": "{{baseUrl}}/datasets/:owner/:id/queries/:queryId",
																	"host": [
																		"{{baseUrl}}"
																	],
																	"path": [
																		"datasets",
																		":owner",
																		":id",
																		"queries",
																		":queryId"
																	],
																	"variable": [
																		{
																			"key": "owner"
																		},
																		{
																			"key": "id"
																		},
																		{
																			"key": "queryId"
																		}
																	]
																}
															},
															"status": "Bad Request",
															"code": 400,
															"_postman_previewlanguage": "json",
															"header": [
																{
																	"key": "Content-Type",
																	"value": "application/json"
																}
															],
															"cookie": [],
															"body": "{\n \"code\": 1519430,\n \"message\": \"enim\",\n \"details\": \"do\"\n}"
														},
														{
															"name": "Unauthorized",
															"originalRequest": {
																"method": "DELETE",
																"header": [
																	{
																		"description": "Added as a part of security scheme: oauth2",
																		"key": "Authorization",
																		"value": "<token>"
																	}
																],
																"url": {
																	"raw": "{{baseUrl}}/datasets/:owner/:id/queries/:queryId",
																	"host": [
																		"{{baseUrl}}"
																	],
																	"path": [
																		"datasets",
																		":owner",
																		":id",
																		"queries",
																		":queryId"
																	],
																	"variable": [
																		{
																			"key": "owner"
																		},
																		{
																			"key": "id"
																		},
																		{
																			"key": "queryId"
																		}
																	]
																}
															},
															"status": "Unauthorized",
															"code": 401,
															"_postman_previewlanguage": "json",
															"header": [
																{
																	"key": "Content-Type",
																	"value": "application/json"
																}
															],
															"cookie": [],
															"body": "{\n \"code\": 1519430,\n \"message\": \"enim\",\n \"details\": \"do\"\n}"
														},
														{
															"name": "Forbidden",
															"originalRequest": {
																"method": "DELETE",
																"header": [
																	{
																		"description": "Added as a part of security scheme: oauth2",
																		"key": "Authorization",
																		"value": "<token>"
																	}
																],
																"url": {
																	"raw": "{{baseUrl}}/datasets/:owner/:id/queries/:queryId",
																	"host": [
																		"{{baseUrl}}"
																	],
																	"path": [
																		"datasets",
																		":owner",
																		":id",
																		"queries",
																		":queryId"
																	],
																	"variable": [
																		{
																			"key": "owner"
																		},
																		{
																			"key": "id"
																		},
																		{
																			"key": "queryId"
																		}
																	]
																}
															},
															"status": "Forbidden",
															"code": 403,
															"_postman_previewlanguage": "json",
															"header": [
																{
																	"key": "Content-Type",
																	"value": "application/json"
																}
															],
															"cookie": [],
															"body": "{\n \"code\": 1519430,\n \"message\": \"enim\",\n \"details\": \"do\"\n}"
														},
														{
															"name": "Not found",
															"originalRequest": {
																"method": "DELETE",
																"header": [
																	{
																		"description": "Added as a part of security scheme: oauth2",
																		"key": "Authorization",
																		"value": "<token>"
																	}
																],
																"url": {
																	"raw": "{{baseUrl}}/datasets/:owner/:id/queries/:queryId",
																	"host": [
																		"{{baseUrl}}"
																	],
																	"path": [
																		"datasets",
																		":owner",
																		":id",
																		"queries",
																		":queryId"
																	],
																	"variable": [
																		{
																			"key": "owner"
																		},
																		{
																			"key": "id"
																		},
																		{
																			"key": "queryId"
																		}
																	]
																}
															},
															"status": "Not Found",
															"code": 404,
															"_postman_previewlanguage": "json",
															"header": [
																{
																	"key": "Content-Type",
																	"value": "application/json"
																}
															],
															"cookie": [],
															"body": "{\n \"code\": 1519430,\n \"message\": \"enim\",\n \"details\": \"do\"\n}"
														},
														{
															"name": "Server error",
															"originalRequest": {
																"method": "DELETE",
																"header": [
																	{
																		"description": "Added as a part of security scheme: oauth2",
																		"key": "Authorization",
																		"value": "<token>"
																	}
																],
																"url": {
																	"raw": "{{baseUrl}}/datasets/:owner/:id/queries/:queryId",
																	"host": [
																		"{{baseUrl}}"
																	],
																	"path": [
																		"datasets",
																		":owner",
																		":id",
																		"queries",
																		":queryId"
																	],
																	"variable": [
																		{
																			"key": "owner"
																		},
																		{
																			"key": "id"
																		},
																		{
																			"key": "queryId"
																		}
																	]
																}
															},
															"status": "Internal Server Error",
															"code": 500,
															"_postman_previewlanguage": "json",
															"header": [
																{
																	"key": "Content-Type",
																	"value": "application/json"
																}
															],
															"cookie": [],
															"body": "{\n \"code\": 1519430,\n \"message\": \"enim\",\n \"details\": \"do\"\n}"
														}
													]
												}
											]
										},
										{
											"name": "Retrieve queries saved in a dataset.",
											"request": {
												"auth": {
													"type": "bearer",
													"bearer": [
														{
															"key": "token",
															"value": "{{readWrite}}",
															"type": "string"
														}
													]
												},
												"method": "GET",
												"header": [],
												"url": {
													"raw": "{{baseUrl}}/datasets/:owner/:id/queries",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"datasets",
														":owner",
														":id",
														"queries"
													],
													"query": [
														{
															"key": "limit",
															"value": "adipisicing elit ullamco",
															"disabled": true
														},
														{
															"key": "next",
															"value": "adipisicing elit ullamco",
															"disabled": true
														}
													],
													"variable": [
														{
															"key": "owner",
															"value": "{{owner}}",
															"description": "(Required) "
														},
														{
															"key": "id",
															"value": "{{datasetid}}",
															"description": "(Required) "
														}
													]
												}
											},
											"response": [
												{
													"name": "Successfully retrieved queries saved in a dataset.",
													"originalRequest": {
														"method": "GET",
														"header": [
															{
																"description": "Added as a part of security scheme: oauth2",
																"key": "Authorization",
																"value": "<token>"
															}
														],
														"url": {
															"raw": "{{baseUrl}}/datasets/:owner/:id/queries?limit=adipisicing elit ullamco&next=adipisicing elit ullamco",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"datasets",
																":owner",
																":id",
																"queries"
															],
															"query": [
																{
																	"key": "limit",
																	"value": "adipisicing elit ullamco"
																},
																{
																	"key": "next",
																	"value": "adipisicing elit ullamco"
																}
															],
															"variable": [
																{
																	"key": "owner"
																},
																{
																	"key": "id"
																}
															]
														}
													},
													"status": "OK",
													"code": 200,
													"_postman_previewlanguage": "json",
													"header": [
														{
															"key": "Content-Type",
															"value": "application/json"
														}
													],
													"cookie": [],
													"body": "{\n \"count\": 61039546,\n \"records\": [\n  {\n   \"id\": \"consect\",\n   \"owner\": \"ullamco dolor ut\",\n   \"language\": \"SPARQL\",\n   \"name\": \"sed officia\",\n   \"body\": \"elit labore nostrud consectetur\",\n   \"version\": \"velit\",\n   \"created\": \"Lorem adipisicing nisi velit\",\n   \"updated\": \"minim eiusmod nulla\",\n   \"parameters\": {}\n  },\n  {\n   \"id\": \"ullamco eu\",\n   \"owner\": \"officia non nisi labore qui\",\n   \"language\": \"SPARQL\",\n   \"name\": \"enim velit qui consequat\",\n   \"body\": \"eiusmod esse quis elit\",\n   \"version\": \"enim\",\n   \"created\": \"ad ea aute\",\n   \"updated\": \"esse sunt dolor qui in\",\n   \"parameters\": {}\n  }\n ],\n \"nextPageToken\": \"ex sit aute id\"\n}"
												},
												{
													"name": "Bad request",
													"originalRequest": {
														"method": "GET",
														"header": [
															{
																"description": "Added as a part of security scheme: oauth2",
																"key": "Authorization",
																"value": "<token>"
															}
														],
														"url": {
															"raw": "{{baseUrl}}/datasets/:owner/:id/queries?limit=adipisicing elit ullamco&next=adipisicing elit ullamco",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"datasets",
																":owner",
																":id",
																"queries"
															],
															"query": [
																{
																	"key": "limit",
																	"value": "adipisicing elit ullamco"
																},
																{
																	"key": "next",
																	"value": "adipisicing elit ullamco"
																}
															],
															"variable": [
																{
																	"key": "owner"
																},
																{
																	"key": "id"
																}
															]
														}
													},
													"status": "Bad Request",
													"code": 400,
													"_postman_previewlanguage": "json",
													"header": [
														{
															"key": "Content-Type",
															"value": "application/json"
														}
													],
													"cookie": [],
													"body": "{\n \"code\": 1519430,\n \"message\": \"enim\",\n \"details\": \"do\"\n}"
												},
												{
													"name": "Unauthorized",
													"originalRequest": {
														"method": "GET",
														"header": [
															{
																"description": "Added as a part of security scheme: oauth2",
																"key": "Authorization",
																"value": "<token>"
															}
														],
														"url": {
															"raw": "{{baseUrl}}/datasets/:owner/:id/queries?limit=adipisicing elit ullamco&next=adipisicing elit ullamco",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"datasets",
																":owner",
																":id",
																"queries"
															],
															"query": [
																{
																	"key": "limit",
																	"value": "adipisicing elit ullamco"
																},
																{
																	"key": "next",
																	"value": "adipisicing elit ullamco"
																}
															],
															"variable": [
																{
																	"key": "owner"
																},
																{
																	"key": "id"
																}
															]
														}
													},
													"status": "Unauthorized",
													"code": 401,
													"_postman_previewlanguage": "json",
													"header": [
														{
															"key": "Content-Type",
															"value": "application/json"
														}
													],
													"cookie": [],
													"body": "{\n \"code\": 1519430,\n \"message\": \"enim\",\n \"details\": \"do\"\n}"
												},
												{
													"name": "Forbidden",
													"originalRequest": {
														"method": "GET",
														"header": [
															{
																"description": "Added as a part of security scheme: oauth2",
																"key": "Authorization",
																"value": "<token>"
															}
														],
														"url": {
															"raw": "{{baseUrl}}/datasets/:owner/:id/queries?limit=adipisicing elit ullamco&next=adipisicing elit ullamco",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"datasets",
																":owner",
																":id",
																"queries"
															],
															"query": [
																{
																	"key": "limit",
																	"value": "adipisicing elit ullamco"
																},
																{
																	"key": "next",
																	"value": "adipisicing elit ullamco"
																}
															],
															"variable": [
																{
																	"key": "owner"
																},
																{
																	"key": "id"
																}
															]
														}
													},
													"status": "Forbidden",
													"code": 403,
													"_postman_previewlanguage": "json",
													"header": [
														{
															"key": "Content-Type",
															"value": "application/json"
														}
													],
													"cookie": [],
													"body": "{\n \"code\": 1519430,\n \"message\": \"enim\",\n \"details\": \"do\"\n}"
												},
												{
													"name": "Not found",
													"originalRequest": {
														"method": "GET",
														"header": [
															{
																"description": "Added as a part of security scheme: oauth2",
																"key": "Authorization",
																"value": "<token>"
															}
														],
														"url": {
															"raw": "{{baseUrl}}/datasets/:owner/:id/queries?limit=adipisicing elit ullamco&next=adipisicing elit ullamco",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"datasets",
																":owner",
																":id",
																"queries"
															],
															"query": [
																{
																	"key": "limit",
																	"value": "adipisicing elit ullamco"
																},
																{
																	"key": "next",
																	"value": "adipisicing elit ullamco"
																}
															],
															"variable": [
																{
																	"key": "owner"
																},
																{
																	"key": "id"
																}
															]
														}
													},
													"status": "Not Found",
													"code": 404,
													"_postman_previewlanguage": "json",
													"header": [
														{
															"key": "Content-Type",
															"value": "application/json"
														}
													],
													"cookie": [],
													"body": "{\n \"code\": 1519430,\n \"message\": \"enim\",\n \"details\": \"do\"\n}"
												},
												{
													"name": "Server error",
													"originalRequest": {
														"method": "GET",
														"header": [
															{
																"description": "Added as a part of security scheme: oauth2",
																"key": "Authorization",
																"value": "<token>"
															}
														],
														"url": {
															"raw": "{{baseUrl}}/datasets/:owner/:id/queries?limit=adipisicing elit ullamco&next=adipisicing elit ullamco",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"datasets",
																":owner",
																":id",
																"queries"
															],
															"query": [
																{
																	"key": "limit",
																	"value": "adipisicing elit ullamco"
																},
																{
																	"key": "next",
																	"value": "adipisicing elit ullamco"
																}
															],
															"variable": [
																{
																	"key": "owner"
																},
																{
																	"key": "id"
																}
															]
														}
													},
													"status": "Internal Server Error",
													"code": 500,
													"_postman_previewlanguage": "json",
													"header": [
														{
															"key": "Content-Type",
															"value": "application/json"
														}
													],
													"cookie": [],
													"body": "{\n \"code\": 1519430,\n \"message\": \"enim\",\n \"details\": \"do\"\n}"
												}
											]
										},
										{
											"name": "Create a saved query for a dataset",
											"request": {
												"auth": {
													"type": "bearer",
													"bearer": [
														{
															"key": "token",
															"value": "{{readWrite}}",
															"type": "string"
														}
													]
												},
												"method": "POST",
												"header": [
													{
														"key": "Content-Type",
														"value": "application/json"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\n    \"content\": \"select first_name from 50_rows\",\n    \"language\": \"SQL\",\n    \"name\": \"firstname\",\n    \"published\": true\n}"
												},
												"url": {
													"raw": "{{baseUrl}}/datasets/:owner/:id/queries",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"datasets",
														":owner",
														":id",
														"queries"
													],
													"variable": [
														{
															"key": "owner",
															"value": "{{owner}}",
															"description": "(Required) "
														},
														{
															"key": "id",
															"value": "{{datasetid}}",
															"description": "(Required) "
														}
													]
												}
											},
											"response": [
												{
													"name": "Successfully created saved query.",
													"originalRequest": {
														"method": "POST",
														"header": [
															{
																"description": "Added as a part of security scheme: oauth2",
																"key": "Authorization",
																"value": "<token>"
															}
														],
														"url": {
															"raw": "{{baseUrl}}/datasets/:owner/:id/queries",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"datasets",
																":owner",
																":id",
																"queries"
															],
															"variable": [
																{
																	"key": "owner"
																},
																{
																	"key": "id"
																}
															]
														}
													},
													"status": "OK",
													"code": 200,
													"_postman_previewlanguage": "json",
													"header": [
														{
															"key": "Content-Type",
															"value": "application/json"
														}
													],
													"cookie": [],
													"body": "{\n \"id\": \"sint offi\",\n \"owner\": \"voluptate\",\n \"language\": \"SPARQL\",\n \"name\": \"ex anim in\",\n \"body\": \"consectetur\",\n \"version\": \"sed reprehenderit veniam commodo aliqua\",\n \"created\": \"aliqua mollit\",\n \"updated\": \"aliquip aliqua do irure eu\",\n \"parameters\": {}\n}"
												},
												{
													"name": "Bad request",
													"originalRequest": {
														"method": "POST",
														"header": [
															{
																"description": "Added as a part of security scheme: oauth2",
																"key": "Authorization",
																"value": "<token>"
															}
														],
														"url": {
															"raw": "{{baseUrl}}/datasets/:owner/:id/queries",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"datasets",
																":owner",
																":id",
																"queries"
															],
															"variable": [
																{
																	"key": "owner"
																},
																{
																	"key": "id"
																}
															]
														}
													},
													"status": "Bad Request",
													"code": 400,
													"_postman_previewlanguage": "json",
													"header": [
														{
															"key": "Content-Type",
															"value": "application/json"
														}
													],
													"cookie": [],
													"body": "{\n \"code\": 1519430,\n \"message\": \"enim\",\n \"details\": \"do\"\n}"
												},
												{
													"name": "Unauthorized",
													"originalRequest": {
														"method": "POST",
														"header": [
															{
																"description": "Added as a part of security scheme: oauth2",
																"key": "Authorization",
																"value": "<token>"
															}
														],
														"url": {
															"raw": "{{baseUrl}}/datasets/:owner/:id/queries",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"datasets",
																":owner",
																":id",
																"queries"
															],
															"variable": [
																{
																	"key": "owner"
																},
																{
																	"key": "id"
																}
															]
														}
													},
													"status": "Unauthorized",
													"code": 401,
													"_postman_previewlanguage": "json",
													"header": [
														{
															"key": "Content-Type",
															"value": "application/json"
														}
													],
													"cookie": [],
													"body": "{\n \"code\": 1519430,\n \"message\": \"enim\",\n \"details\": \"do\"\n}"
												},
												{
													"name": "Forbidden",
													"originalRequest": {
														"method": "POST",
														"header": [
															{
																"description": "Added as a part of security scheme: oauth2",
																"key": "Authorization",
																"value": "<token>"
															}
														],
														"url": {
															"raw": "{{baseUrl}}/datasets/:owner/:id/queries",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"datasets",
																":owner",
																":id",
																"queries"
															],
															"variable": [
																{
																	"key": "owner"
																},
																{
																	"key": "id"
																}
															]
														}
													},
													"status": "Forbidden",
													"code": 403,
													"_postman_previewlanguage": "json",
													"header": [
														{
															"key": "Content-Type",
															"value": "application/json"
														}
													],
													"cookie": [],
													"body": "{\n \"code\": 1519430,\n \"message\": \"enim\",\n \"details\": \"do\"\n}"
												},
												{
													"name": "Not found",
													"originalRequest": {
														"method": "POST",
														"header": [
															{
																"description": "Added as a part of security scheme: oauth2",
																"key": "Authorization",
																"value": "<token>"
															}
														],
														"url": {
															"raw": "{{baseUrl}}/datasets/:owner/:id/queries",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"datasets",
																":owner",
																":id",
																"queries"
															],
															"variable": [
																{
																	"key": "owner"
																},
																{
																	"key": "id"
																}
															]
														}
													},
													"status": "Not Found",
													"code": 404,
													"_postman_previewlanguage": "json",
													"header": [
														{
															"key": "Content-Type",
															"value": "application/json"
														}
													],
													"cookie": [],
													"body": "{\n \"code\": 1519430,\n \"message\": \"enim\",\n \"details\": \"do\"\n}"
												},
												{
													"name": "Server error",
													"originalRequest": {
														"method": "POST",
														"header": [
															{
																"description": "Added as a part of security scheme: oauth2",
																"key": "Authorization",
																"value": "<token>"
															}
														],
														"url": {
															"raw": "{{baseUrl}}/datasets/:owner/:id/queries",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"datasets",
																":owner",
																":id",
																"queries"
															],
															"variable": [
																{
																	"key": "owner"
																},
																{
																	"key": "id"
																}
															]
														}
													},
													"status": "Internal Server Error",
													"code": 500,
													"_postman_previewlanguage": "json",
													"header": [
														{
															"key": "Content-Type",
															"value": "application/json"
														}
													],
													"cookie": [],
													"body": "{\n \"code\": 1519430,\n \"message\": \"enim\",\n \"details\": \"do\"\n}"
												}
											]
										}
									]
								},
								{
									"name": "sync",
									"item": [
										{
											"name": "Fetch latest files from source and update dataset — via GET, for convenience.",
											"request": {
												"auth": {
													"type": "bearer",
													"bearer": [
														{
															"key": "token",
															"value": "{{readWrite}}",
															"type": "string"
														}
													]
												},
												"method": "GET",
												"header": [],
												"url": {
													"raw": "{{baseUrl}}/datasets/:owner/:id/sync",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"datasets",
														":owner",
														":id",
														"sync"
													],
													"variable": [
														{
															"key": "owner",
															"value": "{{owner}}",
															"description": "(Required) "
														},
														{
															"key": "id",
															"value": "{{datasetid}}",
															"description": "(Required) "
														}
													]
												}
											},
											"response": [
												{
													"name": "Sync started.",
													"originalRequest": {
														"method": "GET",
														"header": [
															{
																"description": "Added as a part of security scheme: oauth2",
																"key": "Authorization",
																"value": "<token>"
															}
														],
														"url": {
															"raw": "{{baseUrl}}/datasets/:owner/:id/sync",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"datasets",
																":owner",
																":id",
																"sync"
															],
															"variable": [
																{
																	"key": "owner"
																},
																{
																	"key": "id"
																}
															]
														}
													},
													"status": "OK",
													"code": 200,
													"_postman_previewlanguage": "json",
													"header": [
														{
															"key": "Content-Type",
															"value": "application/json"
														}
													],
													"cookie": [],
													"body": "{\n \"message\": \"voluptate culpa nulla esse\"\n}"
												},
												{
													"name": "Bad request",
													"originalRequest": {
														"method": "GET",
														"header": [
															{
																"description": "Added as a part of security scheme: oauth2",
																"key": "Authorization",
																"value": "<token>"
															}
														],
														"url": {
															"raw": "{{baseUrl}}/datasets/:owner/:id/sync",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"datasets",
																":owner",
																":id",
																"sync"
															],
															"variable": [
																{
																	"key": "owner"
																},
																{
																	"key": "id"
																}
															]
														}
													},
													"status": "Bad Request",
													"code": 400,
													"_postman_previewlanguage": "json",
													"header": [
														{
															"key": "Content-Type",
															"value": "application/json"
														}
													],
													"cookie": [],
													"body": "{\n \"code\": 1519430,\n \"message\": \"enim\",\n \"details\": \"do\"\n}"
												},
												{
													"name": "Unauthorized",
													"originalRequest": {
														"method": "GET",
														"header": [
															{
																"description": "Added as a part of security scheme: oauth2",
																"key": "Authorization",
																"value": "<token>"
															}
														],
														"url": {
															"raw": "{{baseUrl}}/datasets/:owner/:id/sync",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"datasets",
																":owner",
																":id",
																"sync"
															],
															"variable": [
																{
																	"key": "owner"
																},
																{
																	"key": "id"
																}
															]
														}
													},
													"status": "Unauthorized",
													"code": 401,
													"_postman_previewlanguage": "json",
													"header": [
														{
															"key": "Content-Type",
															"value": "application/json"
														}
													],
													"cookie": [],
													"body": "{\n \"code\": 1519430,\n \"message\": \"enim\",\n \"details\": \"do\"\n}"
												},
												{
													"name": "Forbidden",
													"originalRequest": {
														"method": "GET",
														"header": [
															{
																"description": "Added as a part of security scheme: oauth2",
																"key": "Authorization",
																"value": "<token>"
															}
														],
														"url": {
															"raw": "{{baseUrl}}/datasets/:owner/:id/sync",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"datasets",
																":owner",
																":id",
																"sync"
															],
															"variable": [
																{
																	"key": "owner"
																},
																{
																	"key": "id"
																}
															]
														}
													},
													"status": "Forbidden",
													"code": 403,
													"_postman_previewlanguage": "json",
													"header": [
														{
															"key": "Content-Type",
															"value": "application/json"
														}
													],
													"cookie": [],
													"body": "{\n \"code\": 1519430,\n \"message\": \"enim\",\n \"details\": \"do\"\n}"
												},
												{
													"name": "Not found",
													"originalRequest": {
														"method": "GET",
														"header": [
															{
																"description": "Added as a part of security scheme: oauth2",
																"key": "Authorization",
																"value": "<token>"
															}
														],
														"url": {
															"raw": "{{baseUrl}}/datasets/:owner/:id/sync",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"datasets",
																":owner",
																":id",
																"sync"
															],
															"variable": [
																{
																	"key": "owner"
																},
																{
																	"key": "id"
																}
															]
														}
													},
													"status": "Not Found",
													"code": 404,
													"_postman_previewlanguage": "json",
													"header": [
														{
															"key": "Content-Type",
															"value": "application/json"
														}
													],
													"cookie": [],
													"body": "{\n \"code\": 1519430,\n \"message\": \"enim\",\n \"details\": \"do\"\n}"
												},
												{
													"name": "Too many requests",
													"originalRequest": {
														"method": "GET",
														"header": [
															{
																"description": "Added as a part of security scheme: oauth2",
																"key": "Authorization",
																"value": "<token>"
															}
														],
														"url": {
															"raw": "{{baseUrl}}/datasets/:owner/:id/sync",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"datasets",
																":owner",
																":id",
																"sync"
															],
															"variable": [
																{
																	"key": "owner"
																},
																{
																	"key": "id"
																}
															]
														}
													},
													"status": "Too Many Requests",
													"code": 429,
													"_postman_previewlanguage": "json",
													"header": [
														{
															"key": "Content-Type",
															"value": "application/json"
														}
													],
													"cookie": [],
													"body": "{\n \"code\": 1519430,\n \"message\": \"enim\",\n \"details\": \"do\"\n}"
												},
												{
													"name": "Server error",
													"originalRequest": {
														"method": "GET",
														"header": [
															{
																"description": "Added as a part of security scheme: oauth2",
																"key": "Authorization",
																"value": "<token>"
															}
														],
														"url": {
															"raw": "{{baseUrl}}/datasets/:owner/:id/sync",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"datasets",
																":owner",
																":id",
																"sync"
															],
															"variable": [
																{
																	"key": "owner"
																},
																{
																	"key": "id"
																}
															]
														}
													},
													"status": "Internal Server Error",
													"code": 500,
													"_postman_previewlanguage": "json",
													"header": [
														{
															"key": "Content-Type",
															"value": "application/json"
														}
													],
													"cookie": [],
													"body": "{\n \"code\": 1519430,\n \"message\": \"enim\",\n \"details\": \"do\"\n}"
												}
											]
										},
										{
											"name": "Fetch latest files from source and update dataset.",
											"request": {
												"auth": {
													"type": "bearer",
													"bearer": [
														{
															"key": "token",
															"value": "{{readWrite}}",
															"type": "string"
														}
													]
												},
												"method": "POST",
												"header": [],
												"url": {
													"raw": "{{baseUrl}}/datasets/:owner/:id/sync",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"datasets",
														":owner",
														":id",
														"sync"
													],
													"variable": [
														{
															"key": "owner",
															"value": "{{owner}}",
															"description": "(Required) "
														},
														{
															"key": "id",
															"value": "{{datasetid}}",
															"description": "(Required) "
														}
													]
												}
											},
											"response": [
												{
													"name": "Sync started.",
													"originalRequest": {
														"method": "POST",
														"header": [
															{
																"description": "Added as a part of security scheme: oauth2",
																"key": "Authorization",
																"value": "<token>"
															}
														],
														"url": {
															"raw": "{{baseUrl}}/datasets/:owner/:id/sync",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"datasets",
																":owner",
																":id",
																"sync"
															],
															"variable": [
																{
																	"key": "owner"
																},
																{
																	"key": "id"
																}
															]
														}
													},
													"status": "OK",
													"code": 200,
													"_postman_previewlanguage": "json",
													"header": [
														{
															"key": "Content-Type",
															"value": "application/json"
														}
													],
													"cookie": [],
													"body": "{\n \"message\": \"voluptate culpa nulla esse\"\n}"
												},
												{
													"name": "Bad request",
													"originalRequest": {
														"method": "POST",
														"header": [
															{
																"description": "Added as a part of security scheme: oauth2",
																"key": "Authorization",
																"value": "<token>"
															}
														],
														"url": {
															"raw": "{{baseUrl}}/datasets/:owner/:id/sync",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"datasets",
																":owner",
																":id",
																"sync"
															],
															"variable": [
																{
																	"key": "owner"
																},
																{
																	"key": "id"
																}
															]
														}
													},
													"status": "Bad Request",
													"code": 400,
													"_postman_previewlanguage": "json",
													"header": [
														{
															"key": "Content-Type",
															"value": "application/json"
														}
													],
													"cookie": [],
													"body": "{\n \"code\": 1519430,\n \"message\": \"enim\",\n \"details\": \"do\"\n}"
												},
												{
													"name": "Unauthorized",
													"originalRequest": {
														"method": "POST",
														"header": [
															{
																"description": "Added as a part of security scheme: oauth2",
																"key": "Authorization",
																"value": "<token>"
															}
														],
														"url": {
															"raw": "{{baseUrl}}/datasets/:owner/:id/sync",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"datasets",
																":owner",
																":id",
																"sync"
															],
															"variable": [
																{
																	"key": "owner"
																},
																{
																	"key": "id"
																}
															]
														}
													},
													"status": "Unauthorized",
													"code": 401,
													"_postman_previewlanguage": "json",
													"header": [
														{
															"key": "Content-Type",
															"value": "application/json"
														}
													],
													"cookie": [],
													"body": "{\n \"code\": 1519430,\n \"message\": \"enim\",\n \"details\": \"do\"\n}"
												},
												{
													"name": "Forbidden",
													"originalRequest": {
														"method": "POST",
														"header": [
															{
																"description": "Added as a part of security scheme: oauth2",
																"key": "Authorization",
																"value": "<token>"
															}
														],
														"url": {
															"raw": "{{baseUrl}}/datasets/:owner/:id/sync",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"datasets",
																":owner",
																":id",
																"sync"
															],
															"variable": [
																{
																	"key": "owner"
																},
																{
																	"key": "id"
																}
															]
														}
													},
													"status": "Forbidden",
													"code": 403,
													"_postman_previewlanguage": "json",
													"header": [
														{
															"key": "Content-Type",
															"value": "application/json"
														}
													],
													"cookie": [],
													"body": "{\n \"code\": 1519430,\n \"message\": \"enim\",\n \"details\": \"do\"\n}"
												},
												{
													"name": "Not found",
													"originalRequest": {
														"method": "POST",
														"header": [
															{
																"description": "Added as a part of security scheme: oauth2",
																"key": "Authorization",
																"value": "<token>"
															}
														],
														"url": {
															"raw": "{{baseUrl}}/datasets/:owner/:id/sync",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"datasets",
																":owner",
																":id",
																"sync"
															],
															"variable": [
																{
																	"key": "owner"
																},
																{
																	"key": "id"
																}
															]
														}
													},
													"status": "Not Found",
													"code": 404,
													"_postman_previewlanguage": "json",
													"header": [
														{
															"key": "Content-Type",
															"value": "application/json"
														}
													],
													"cookie": [],
													"body": "{\n \"code\": 1519430,\n \"message\": \"enim\",\n \"details\": \"do\"\n}"
												},
												{
													"name": "Too many requests",
													"originalRequest": {
														"method": "POST",
														"header": [
															{
																"description": "Added as a part of security scheme: oauth2",
																"key": "Authorization",
																"value": "<token>"
															}
														],
														"url": {
															"raw": "{{baseUrl}}/datasets/:owner/:id/sync",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"datasets",
																":owner",
																":id",
																"sync"
															],
															"variable": [
																{
																	"key": "owner"
																},
																{
																	"key": "id"
																}
															]
														}
													},
													"status": "Too Many Requests",
													"code": 429,
													"_postman_previewlanguage": "json",
													"header": [
														{
															"key": "Content-Type",
															"value": "application/json"
														}
													],
													"cookie": [],
													"body": "{\n \"code\": 1519430,\n \"message\": \"enim\",\n \"details\": \"do\"\n}"
												},
												{
													"name": "Server error",
													"originalRequest": {
														"method": "POST",
														"header": [
															{
																"description": "Added as a part of security scheme: oauth2",
																"key": "Authorization",
																"value": "<token>"
															}
														],
														"url": {
															"raw": "{{baseUrl}}/datasets/:owner/:id/sync",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"datasets",
																":owner",
																":id",
																"sync"
															],
															"variable": [
																{
																	"key": "owner"
																},
																{
																	"key": "id"
																}
															]
														}
													},
													"status": "Internal Server Error",
													"code": 500,
													"_postman_previewlanguage": "json",
													"header": [
														{
															"key": "Content-Type",
															"value": "application/json"
														}
													],
													"cookie": [],
													"body": "{\n \"code\": 1519430,\n \"message\": \"enim\",\n \"details\": \"do\"\n}"
												}
											]
										}
									]
								},
								{
									"name": "v/{version Id}",
									"item": [
										{
											"name": "dois/{doi}",
											"item": [
												{
													"name": "Create dataset version DOI",
													"request": {
														"auth": {
															"type": "oauth2"
														},
														"method": "PUT",
														"header": [],
														"url": {
															"raw": "{{baseUrl}}/datasets/:owner/:id/v/:versionId/dois/:doi",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"datasets",
																":owner",
																":id",
																"v",
																":versionId",
																"dois",
																":doi"
															],
															"variable": [
																{
																	"key": "owner",
																	"value": "adipisicing elit ullamco",
																	"description": "(Required) "
																},
																{
																	"key": "id",
																	"value": "adipisicing elit ullamco",
																	"description": "(Required) "
																},
																{
																	"key": "versionId",
																	"value": "adipisicing elit ullamco",
																	"description": "(Required) "
																},
																{
																	"key": "doi",
																	"value": "adipisicing elit ullamco",
																	"description": "(Required) "
																}
															]
														}
													},
													"response": [
														{
															"name": "DOI successfully added to dataset version.",
															"originalRequest": {
																"method": "PUT",
																"header": [
																	{
																		"description": "Added as a part of security scheme: oauth2",
																		"key": "Authorization",
																		"value": "<token>"
																	}
																],
																"url": {
																	"raw": "{{baseUrl}}/datasets/:owner/:id/v/:versionId/dois/:doi",
																	"host": [
																		"{{baseUrl}}"
																	],
																	"path": [
																		"datasets",
																		":owner",
																		":id",
																		"v",
																		":versionId",
																		"dois",
																		":doi"
																	],
																	"variable": [
																		{
																			"key": "owner"
																		},
																		{
																			"key": "id"
																		},
																		{
																			"key": "versionId"
																		},
																		{
																			"key": "doi"
																		}
																	]
																}
															},
															"status": "OK",
															"code": 200,
															"_postman_previewlanguage": "json",
															"header": [
																{
																	"key": "Content-Type",
																	"value": "application/json"
																}
															],
															"cookie": [],
															"body": "{\n \"message\": \"voluptate culpa nulla esse\"\n}"
														},
														{
															"name": "Bad request",
															"originalRequest": {
																"method": "PUT",
																"header": [
																	{
																		"description": "Added as a part of security scheme: oauth2",
																		"key": "Authorization",
																		"value": "<token>"
																	}
																],
																"url": {
																	"raw": "{{baseUrl}}/datasets/:owner/:id/v/:versionId/dois/:doi",
																	"host": [
																		"{{baseUrl}}"
																	],
																	"path": [
																		"datasets",
																		":owner",
																		":id",
																		"v",
																		":versionId",
																		"dois",
																		":doi"
																	],
																	"variable": [
																		{
																			"key": "owner"
																		},
																		{
																			"key": "id"
																		},
																		{
																			"key": "versionId"
																		},
																		{
																			"key": "doi"
																		}
																	]
																}
															},
															"status": "Bad Request",
															"code": 400,
															"_postman_previewlanguage": "json",
															"header": [
																{
																	"key": "Content-Type",
																	"value": "application/json"
																}
															],
															"cookie": [],
															"body": "{\n \"code\": 1519430,\n \"message\": \"enim\",\n \"details\": \"do\"\n}"
														},
														{
															"name": "Unauthorized",
															"originalRequest": {
																"method": "PUT",
																"header": [
																	{
																		"description": "Added as a part of security scheme: oauth2",
																		"key": "Authorization",
																		"value": "<token>"
																	}
																],
																"url": {
																	"raw": "{{baseUrl}}/datasets/:owner/:id/v/:versionId/dois/:doi",
																	"host": [
																		"{{baseUrl}}"
																	],
																	"path": [
																		"datasets",
																		":owner",
																		":id",
																		"v",
																		":versionId",
																		"dois",
																		":doi"
																	],
																	"variable": [
																		{
																			"key": "owner"
																		},
																		{
																			"key": "id"
																		},
																		{
																			"key": "versionId"
																		},
																		{
																			"key": "doi"
																		}
																	]
																}
															},
															"status": "Unauthorized",
															"code": 401,
															"_postman_previewlanguage": "json",
															"header": [
																{
																	"key": "Content-Type",
																	"value": "application/json"
																}
															],
															"cookie": [],
															"body": "{\n \"code\": 1519430,\n \"message\": \"enim\",\n \"details\": \"do\"\n}"
														},
														{
															"name": "Forbidden",
															"originalRequest": {
																"method": "PUT",
																"header": [
																	{
																		"description": "Added as a part of security scheme: oauth2",
																		"key": "Authorization",
																		"value": "<token>"
																	}
																],
																"url": {
																	"raw": "{{baseUrl}}/datasets/:owner/:id/v/:versionId/dois/:doi",
																	"host": [
																		"{{baseUrl}}"
																	],
																	"path": [
																		"datasets",
																		":owner",
																		":id",
																		"v",
																		":versionId",
																		"dois",
																		":doi"
																	],
																	"variable": [
																		{
																			"key": "owner"
																		},
																		{
																			"key": "id"
																		},
																		{
																			"key": "versionId"
																		},
																		{
																			"key": "doi"
																		}
																	]
																}
															},
															"status": "Forbidden",
															"code": 403,
															"_postman_previewlanguage": "json",
															"header": [
																{
																	"key": "Content-Type",
																	"value": "application/json"
																}
															],
															"cookie": [],
															"body": "{\n \"code\": 1519430,\n \"message\": \"enim\",\n \"details\": \"do\"\n}"
														},
														{
															"name": "Not found",
															"originalRequest": {
																"method": "PUT",
																"header": [
																	{
																		"description": "Added as a part of security scheme: oauth2",
																		"key": "Authorization",
																		"value": "<token>"
																	}
																],
																"url": {
																	"raw": "{{baseUrl}}/datasets/:owner/:id/v/:versionId/dois/:doi",
																	"host": [
																		"{{baseUrl}}"
																	],
																	"path": [
																		"datasets",
																		":owner",
																		":id",
																		"v",
																		":versionId",
																		"dois",
																		":doi"
																	],
																	"variable": [
																		{
																			"key": "owner"
																		},
																		{
																			"key": "id"
																		},
																		{
																			"key": "versionId"
																		},
																		{
																			"key": "doi"
																		}
																	]
																}
															},
															"status": "Not Found",
															"code": 404,
															"_postman_previewlanguage": "json",
															"header": [
																{
																	"key": "Content-Type",
																	"value": "application/json"
																}
															],
															"cookie": [],
															"body": "{\n \"code\": 1519430,\n \"message\": \"enim\",\n \"details\": \"do\"\n}"
														},
														{
															"name": "Server error",
															"originalRequest": {
																"method": "PUT",
																"header": [
																	{
																		"description": "Added as a part of security scheme: oauth2",
																		"key": "Authorization",
																		"value": "<token>"
																	}
																],
																"url": {
																	"raw": "{{baseUrl}}/datasets/:owner/:id/v/:versionId/dois/:doi",
																	"host": [
																		"{{baseUrl}}"
																	],
																	"path": [
																		"datasets",
																		":owner",
																		":id",
																		"v",
																		":versionId",
																		"dois",
																		":doi"
																	],
																	"variable": [
																		{
																			"key": "owner"
																		},
																		{
																			"key": "id"
																		},
																		{
																			"key": "versionId"
																		},
																		{
																			"key": "doi"
																		}
																	]
																}
															},
															"status": "Internal Server Error",
															"code": 500,
															"_postman_previewlanguage": "json",
															"header": [
																{
																	"key": "Content-Type",
																	"value": "application/json"
																}
															],
															"cookie": [],
															"body": "{\n \"code\": 1519430,\n \"message\": \"enim\",\n \"details\": \"do\"\n}"
														}
													]
												},
												{
													"name": "Delete dataset version DOI",
													"request": {
														"auth": {
															"type": "oauth2"
														},
														"method": "DELETE",
														"header": [],
														"url": {
															"raw": "{{baseUrl}}/datasets/:owner/:id/v/:versionId/dois/:doi",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"datasets",
																":owner",
																":id",
																"v",
																":versionId",
																"dois",
																":doi"
															],
															"variable": [
																{
																	"key": "owner",
																	"value": "adipisicing elit ullamco",
																	"description": "(Required) "
																},
																{
																	"key": "id",
																	"value": "adipisicing elit ullamco",
																	"description": "(Required) "
																},
																{
																	"key": "versionId",
																	"value": "adipisicing elit ullamco",
																	"description": "(Required) "
																},
																{
																	"key": "doi",
																	"value": "adipisicing elit ullamco",
																	"description": "(Required) "
																}
															]
														}
													},
													"response": [
														{
															"name": "DOI successfully removed from dataset version.",
															"originalRequest": {
																"method": "DELETE",
																"header": [
																	{
																		"description": "Added as a part of security scheme: oauth2",
																		"key": "Authorization",
																		"value": "<token>"
																	}
																],
																"url": {
																	"raw": "{{baseUrl}}/datasets/:owner/:id/v/:versionId/dois/:doi",
																	"host": [
																		"{{baseUrl}}"
																	],
																	"path": [
																		"datasets",
																		":owner",
																		":id",
																		"v",
																		":versionId",
																		"dois",
																		":doi"
																	],
																	"variable": [
																		{
																			"key": "owner"
																		},
																		{
																			"key": "id"
																		},
																		{
																			"key": "versionId"
																		},
																		{
																			"key": "doi"
																		}
																	]
																}
															},
															"status": "OK",
															"code": 200,
															"_postman_previewlanguage": "json",
															"header": [
																{
																	"key": "Content-Type",
																	"value": "application/json"
																}
															],
															"cookie": [],
															"body": "{\n \"message\": \"voluptate culpa nulla esse\"\n}"
														},
														{
															"name": "Bad request",
															"originalRequest": {
																"method": "DELETE",
																"header": [
																	{
																		"description": "Added as a part of security scheme: oauth2",
																		"key": "Authorization",
																		"value": "<token>"
																	}
																],
																"url": {
																	"raw": "{{baseUrl}}/datasets/:owner/:id/v/:versionId/dois/:doi",
																	"host": [
																		"{{baseUrl}}"
																	],
																	"path": [
																		"datasets",
																		":owner",
																		":id",
																		"v",
																		":versionId",
																		"dois",
																		":doi"
																	],
																	"variable": [
																		{
																			"key": "owner"
																		},
																		{
																			"key": "id"
																		},
																		{
																			"key": "versionId"
																		},
																		{
																			"key": "doi"
																		}
																	]
																}
															},
															"status": "Bad Request",
															"code": 400,
															"_postman_previewlanguage": "json",
															"header": [
																{
																	"key": "Content-Type",
																	"value": "application/json"
																}
															],
															"cookie": [],
															"body": "{\n \"code\": 1519430,\n \"message\": \"enim\",\n \"details\": \"do\"\n}"
														},
														{
															"name": "Unauthorized",
															"originalRequest": {
																"method": "DELETE",
																"header": [
																	{
																		"description": "Added as a part of security scheme: oauth2",
																		"key": "Authorization",
																		"value": "<token>"
																	}
																],
																"url": {
																	"raw": "{{baseUrl}}/datasets/:owner/:id/v/:versionId/dois/:doi",
																	"host": [
																		"{{baseUrl}}"
																	],
																	"path": [
																		"datasets",
																		":owner",
																		":id",
																		"v",
																		":versionId",
																		"dois",
																		":doi"
																	],
																	"variable": [
																		{
																			"key": "owner"
																		},
																		{
																			"key": "id"
																		},
																		{
																			"key": "versionId"
																		},
																		{
																			"key": "doi"
																		}
																	]
																}
															},
															"status": "Unauthorized",
															"code": 401,
															"_postman_previewlanguage": "json",
															"header": [
																{
																	"key": "Content-Type",
																	"value": "application/json"
																}
															],
															"cookie": [],
															"body": "{\n \"code\": 1519430,\n \"message\": \"enim\",\n \"details\": \"do\"\n}"
														},
														{
															"name": "Forbidden",
															"originalRequest": {
																"method": "DELETE",
																"header": [
																	{
																		"description": "Added as a part of security scheme: oauth2",
																		"key": "Authorization",
																		"value": "<token>"
																	}
																],
																"url": {
																	"raw": "{{baseUrl}}/datasets/:owner/:id/v/:versionId/dois/:doi",
																	"host": [
																		"{{baseUrl}}"
																	],
																	"path": [
																		"datasets",
																		":owner",
																		":id",
																		"v",
																		":versionId",
																		"dois",
																		":doi"
																	],
																	"variable": [
																		{
																			"key": "owner"
																		},
																		{
																			"key": "id"
																		},
																		{
																			"key": "versionId"
																		},
																		{
																			"key": "doi"
																		}
																	]
																}
															},
															"status": "Forbidden",
															"code": 403,
															"_postman_previewlanguage": "json",
															"header": [
																{
																	"key": "Content-Type",
																	"value": "application/json"
																}
															],
															"cookie": [],
															"body": "{\n \"code\": 1519430,\n \"message\": \"enim\",\n \"details\": \"do\"\n}"
														},
														{
															"name": "Not found",
															"originalRequest": {
																"method": "DELETE",
																"header": [
																	{
																		"description": "Added as a part of security scheme: oauth2",
																		"key": "Authorization",
																		"value": "<token>"
																	}
																],
																"url": {
																	"raw": "{{baseUrl}}/datasets/:owner/:id/v/:versionId/dois/:doi",
																	"host": [
																		"{{baseUrl}}"
																	],
																	"path": [
																		"datasets",
																		":owner",
																		":id",
																		"v",
																		":versionId",
																		"dois",
																		":doi"
																	],
																	"variable": [
																		{
																			"key": "owner"
																		},
																		{
																			"key": "id"
																		},
																		{
																			"key": "versionId"
																		},
																		{
																			"key": "doi"
																		}
																	]
																}
															},
															"status": "Not Found",
															"code": 404,
															"_postman_previewlanguage": "json",
															"header": [
																{
																	"key": "Content-Type",
																	"value": "application/json"
																}
															],
															"cookie": [],
															"body": "{\n \"code\": 1519430,\n \"message\": \"enim\",\n \"details\": \"do\"\n}"
														},
														{
															"name": "Server error",
															"originalRequest": {
																"method": "DELETE",
																"header": [
																	{
																		"description": "Added as a part of security scheme: oauth2",
																		"key": "Authorization",
																		"value": "<token>"
																	}
																],
																"url": {
																	"raw": "{{baseUrl}}/datasets/:owner/:id/v/:versionId/dois/:doi",
																	"host": [
																		"{{baseUrl}}"
																	],
																	"path": [
																		"datasets",
																		":owner",
																		":id",
																		"v",
																		":versionId",
																		"dois",
																		":doi"
																	],
																	"variable": [
																		{
																			"key": "owner"
																		},
																		{
																			"key": "id"
																		},
																		{
																			"key": "versionId"
																		},
																		{
																			"key": "doi"
																		}
																	]
																}
															},
															"status": "Internal Server Error",
															"code": 500,
															"_postman_previewlanguage": "json",
															"header": [
																{
																	"key": "Content-Type",
																	"value": "application/json"
																}
															],
															"cookie": [],
															"body": "{\n \"code\": 1519430,\n \"message\": \"enim\",\n \"details\": \"do\"\n}"
														}
													]
												}
											]
										},
										{
											"name": "Retrieve a dataset by version.",
											"request": {
												"auth": {
													"type": "bearer",
													"bearer": [
														{
															"key": "token",
															"value": "{{readWrite}}",
															"type": "string"
														}
													]
												},
												"method": "GET",
												"header": [],
												"url": {
													"raw": "{{baseUrl}}/datasets/:owner/:id/v/:versionId",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"datasets",
														":owner",
														":id",
														"v",
														":versionId"
													],
													"variable": [
														{
															"key": "owner",
															"value": "{{owner}}",
															"description": "(Required) "
														},
														{
															"key": "id",
															"value": "{{datasetid}}",
															"description": "(Required) "
														},
														{
															"key": "versionId",
															"value": "{{datasetVersion}}",
															"description": "(Required) "
														}
													]
												}
											},
											"response": [
												{
													"name": "Successfully retrieved dataset version",
													"originalRequest": {
														"method": "GET",
														"header": [
															{
																"description": "Added as a part of security scheme: oauth2",
																"key": "Authorization",
																"value": "<token>"
															}
														],
														"url": {
															"raw": "{{baseUrl}}/datasets/:owner/:id/v/:versionId",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"datasets",
																":owner",
																":id",
																"v",
																":versionId"
															],
															"variable": [
																{
																	"key": "owner"
																},
																{
																	"key": "id"
																},
																{
																	"key": "versionId"
																}
															]
														}
													},
													"status": "OK",
													"code": 200,
													"_postman_previewlanguage": "json",
													"header": [
														{
															"key": "Content-Type",
															"value": "application/json"
														}
													],
													"cookie": [],
													"body": "{\n \"accessLevel\": \"ADMIN\",\n \"created\": \"non occaecat in\",\n \"id\": \"Excepteur id\",\n \"isProject\": false,\n \"owner\": \"sed aliqua\",\n \"status\": \"NEW\",\n \"title\": \"ullamco\",\n \"updated\": \"laboris elit et culpa\",\n \"version\": \"exercitation irure\",\n \"visibility\": \"PRIVATE\",\n \"description\": \"occaecat\",\n \"summary\": \"dolore voluptate in\",\n \"tags\": [\n  \"culpa\",\n  \"ad\"\n ],\n \"dois\": [\n  {\n   \"created\": \"fugiat cupidatat\",\n   \"doi\": \"laboru\"\n  },\n  {\n   \"created\": \"commodo do\",\n   \"doi\": \"magna velit\"\n  }\n ],\n \"license\": \"Other\",\n \"files\": [\n  {\n   \"created\": \"anim proident\",\n   \"name\": \"e\",\n   \"updated\": \"cillum dolor\",\n   \"sizeInBytes\": -40159781,\n   \"source\": {\n    \"syncStatus\": {\n     \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    \"url\": {\n     \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    \"method\": {\n     \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    \"requestHeaders\": {\n     \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    \"requestEntity\": {\n     \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    \"oauthToken\": {\n     \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    \"credentials\": {\n     \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    \"authorization\": {\n     \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    \"databaseSource\": {\n     \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    \"dwccSpec\": {\n     \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    \"viewRequest\": {\n     \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    \"databaseMetadataSpec\": {\n     \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    \"dataTables\": {\n     \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    \"tableSpec\": {\n     \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    \"expandArchive\": {\n     \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    \"syncSummary\": {\n     \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    \"lastSyncStart\": {\n     \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    \"lastSyncSuccess\": {\n     \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    \"lastSyncFailure\": {\n     \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    }\n   },\n   \"description\": \"ex voluptate\",\n   \"labels\": [\n    \"occaecat sint\",\n    \"ullamco fugiat dolore adipisicing sit\"\n   ]\n  },\n  {\n   \"created\": \"in\",\n   \"name\": \"yd~;e,v)\",\n   \"updated\": \"consectetur veniam mollit adipis\",\n   \"sizeInBytes\": -41163706,\n   \"source\": {\n    \"syncStatus\": {\n     \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    \"url\": {\n     \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    \"method\": {\n     \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    \"requestHeaders\": {\n     \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    \"requestEntity\": {\n     \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    \"oauthToken\": {\n     \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    \"credentials\": {\n     \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    \"authorization\": {\n     \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    \"databaseSource\": {\n     \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    \"dwccSpec\": {\n     \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    \"viewRequest\": {\n     \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    \"databaseMetadataSpec\": {\n     \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    \"dataTables\": {\n     \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    \"tableSpec\": {\n     \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    \"expandArchive\": {\n     \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    \"syncSummary\": {\n     \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    \"lastSyncStart\": {\n     \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    \"lastSyncSuccess\": {\n     \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    \"lastSyncFailure\": {\n     \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    }\n   },\n   \"description\": \"laboris do\",\n   \"labels\": [\n    \"magna quis\",\n    \"dolor labore\"\n   ]\n  }\n ],\n \"properties\": {},\n \"assetStatus\": {\n  \"assetStatusLabel\": \"Lorem veniam reprehenderit mollit\",\n  \"dispositionLabel\": \"enim esse\"\n },\n \"versionDois\": [\n  {\n   \"created\": \"Excepteur Ut proident\",\n   \"doi\": \"magna exercitation\"\n  },\n  {\n   \"created\": \"minim Ut irure ut\",\n   \"doi\": \"non ipsum aliqua cupidatat\"\n  }\n ]\n}"
												},
												{
													"name": "Bad request",
													"originalRequest": {
														"method": "GET",
														"header": [
															{
																"description": "Added as a part of security scheme: oauth2",
																"key": "Authorization",
																"value": "<token>"
															}
														],
														"url": {
															"raw": "{{baseUrl}}/datasets/:owner/:id/v/:versionId",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"datasets",
																":owner",
																":id",
																"v",
																":versionId"
															],
															"variable": [
																{
																	"key": "owner"
																},
																{
																	"key": "id"
																},
																{
																	"key": "versionId"
																}
															]
														}
													},
													"status": "Bad Request",
													"code": 400,
													"_postman_previewlanguage": "json",
													"header": [
														{
															"key": "Content-Type",
															"value": "application/json"
														}
													],
													"cookie": [],
													"body": "{\n \"code\": 1519430,\n \"message\": \"enim\",\n \"details\": \"do\"\n}"
												},
												{
													"name": "Unauthorized",
													"originalRequest": {
														"method": "GET",
														"header": [
															{
																"description": "Added as a part of security scheme: oauth2",
																"key": "Authorization",
																"value": "<token>"
															}
														],
														"url": {
															"raw": "{{baseUrl}}/datasets/:owner/:id/v/:versionId",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"datasets",
																":owner",
																":id",
																"v",
																":versionId"
															],
															"variable": [
																{
																	"key": "owner"
																},
																{
																	"key": "id"
																},
																{
																	"key": "versionId"
																}
															]
														}
													},
													"status": "Unauthorized",
													"code": 401,
													"_postman_previewlanguage": "json",
													"header": [
														{
															"key": "Content-Type",
															"value": "application/json"
														}
													],
													"cookie": [],
													"body": "{\n \"code\": 1519430,\n \"message\": \"enim\",\n \"details\": \"do\"\n}"
												},
												{
													"name": "Forbidden",
													"originalRequest": {
														"method": "GET",
														"header": [
															{
																"description": "Added as a part of security scheme: oauth2",
																"key": "Authorization",
																"value": "<token>"
															}
														],
														"url": {
															"raw": "{{baseUrl}}/datasets/:owner/:id/v/:versionId",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"datasets",
																":owner",
																":id",
																"v",
																":versionId"
															],
															"variable": [
																{
																	"key": "owner"
																},
																{
																	"key": "id"
																},
																{
																	"key": "versionId"
																}
															]
														}
													},
													"status": "Forbidden",
													"code": 403,
													"_postman_previewlanguage": "json",
													"header": [
														{
															"key": "Content-Type",
															"value": "application/json"
														}
													],
													"cookie": [],
													"body": "{\n \"code\": 1519430,\n \"message\": \"enim\",\n \"details\": \"do\"\n}"
												},
												{
													"name": "Not found",
													"originalRequest": {
														"method": "GET",
														"header": [
															{
																"description": "Added as a part of security scheme: oauth2",
																"key": "Authorization",
																"value": "<token>"
															}
														],
														"url": {
															"raw": "{{baseUrl}}/datasets/:owner/:id/v/:versionId",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"datasets",
																":owner",
																":id",
																"v",
																":versionId"
															],
															"variable": [
																{
																	"key": "owner"
																},
																{
																	"key": "id"
																},
																{
																	"key": "versionId"
																}
															]
														}
													},
													"status": "Not Found",
													"code": 404,
													"_postman_previewlanguage": "json",
													"header": [
														{
															"key": "Content-Type",
															"value": "application/json"
														}
													],
													"cookie": [],
													"body": "{\n \"code\": 1519430,\n \"message\": \"enim\",\n \"details\": \"do\"\n}"
												},
												{
													"name": "Server error",
													"originalRequest": {
														"method": "GET",
														"header": [
															{
																"description": "Added as a part of security scheme: oauth2",
																"key": "Authorization",
																"value": "<token>"
															}
														],
														"url": {
															"raw": "{{baseUrl}}/datasets/:owner/:id/v/:versionId",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"datasets",
																":owner",
																":id",
																"v",
																":versionId"
															],
															"variable": [
																{
																	"key": "owner"
																},
																{
																	"key": "id"
																},
																{
																	"key": "versionId"
																}
															]
														}
													},
													"status": "Internal Server Error",
													"code": 500,
													"_postman_previewlanguage": "json",
													"header": [
														{
															"key": "Content-Type",
															"value": "application/json"
														}
													],
													"cookie": [],
													"body": "{\n \"code\": 1519430,\n \"message\": \"enim\",\n \"details\": \"do\"\n}"
												}
											]
										}
									]
								},
								{
									"name": "Retrieve a dataset.",
									"request": {
										"auth": {
											"type": "bearer",
											"bearer": [
												{
													"key": "token",
													"value": "{{readWrite}}",
													"type": "string"
												}
											]
										},
										"method": "GET",
										"header": [],
										"url": {
											"raw": "{{baseUrl}}/datasets/:owner/:id",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"datasets",
												":owner",
												":id"
											],
											"variable": [
												{
													"key": "owner",
													"value": "rick-liao",
													"description": "(Required) "
												},
												{
													"key": "id",
													"value": "random-dataset",
													"description": "(Required) "
												}
											]
										}
									},
									"response": [
										{
											"name": "Successfully retrieved dataset",
											"originalRequest": {
												"method": "GET",
												"header": [
													{
														"description": "Added as a part of security scheme: oauth2",
														"key": "Authorization",
														"value": "<token>"
													}
												],
												"url": {
													"raw": "{{baseUrl}}/datasets/:owner/:id",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"datasets",
														":owner",
														":id"
													],
													"variable": [
														{
															"key": "owner"
														},
														{
															"key": "id"
														}
													]
												}
											},
											"status": "OK",
											"code": 200,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"body": "{\n \"accessLevel\": \"ADMIN\",\n \"created\": \"non occaecat in\",\n \"id\": \"Excepteur id\",\n \"isProject\": false,\n \"owner\": \"sed aliqua\",\n \"status\": \"NEW\",\n \"title\": \"ullamco\",\n \"updated\": \"laboris elit et culpa\",\n \"version\": \"exercitation irure\",\n \"visibility\": \"PRIVATE\",\n \"description\": \"occaecat\",\n \"summary\": \"dolore voluptate in\",\n \"tags\": [\n  \"culpa\",\n  \"ad\"\n ],\n \"dois\": [\n  {\n   \"created\": \"fugiat cupidatat\",\n   \"doi\": \"laboru\"\n  },\n  {\n   \"created\": \"commodo do\",\n   \"doi\": \"magna velit\"\n  }\n ],\n \"license\": \"Other\",\n \"files\": [\n  {\n   \"created\": \"anim proident\",\n   \"name\": \"e\",\n   \"updated\": \"cillum dolor\",\n   \"sizeInBytes\": -40159781,\n   \"source\": {\n    \"syncStatus\": {\n     \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    \"url\": {\n     \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    \"method\": {\n     \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    \"requestHeaders\": {\n     \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    \"requestEntity\": {\n     \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    \"oauthToken\": {\n     \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    \"credentials\": {\n     \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    \"authorization\": {\n     \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    \"databaseSource\": {\n     \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    \"dwccSpec\": {\n     \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    \"viewRequest\": {\n     \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    \"databaseMetadataSpec\": {\n     \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    \"dataTables\": {\n     \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    \"tableSpec\": {\n     \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    \"expandArchive\": {\n     \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    \"syncSummary\": {\n     \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    \"lastSyncStart\": {\n     \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    \"lastSyncSuccess\": {\n     \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    \"lastSyncFailure\": {\n     \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    }\n   },\n   \"description\": \"ex voluptate\",\n   \"labels\": [\n    \"occaecat sint\",\n    \"ullamco fugiat dolore adipisicing sit\"\n   ]\n  },\n  {\n   \"created\": \"in\",\n   \"name\": \"yd~;e,v)\",\n   \"updated\": \"consectetur veniam mollit adipis\",\n   \"sizeInBytes\": -41163706,\n   \"source\": {\n    \"syncStatus\": {\n     \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    \"url\": {\n     \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    \"method\": {\n     \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    \"requestHeaders\": {\n     \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    \"requestEntity\": {\n     \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    \"oauthToken\": {\n     \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    \"credentials\": {\n     \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    \"authorization\": {\n     \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    \"databaseSource\": {\n     \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    \"dwccSpec\": {\n     \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    \"viewRequest\": {\n     \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    \"databaseMetadataSpec\": {\n     \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    \"dataTables\": {\n     \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    \"tableSpec\": {\n     \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    \"expandArchive\": {\n     \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    \"syncSummary\": {\n     \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    \"lastSyncStart\": {\n     \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    \"lastSyncSuccess\": {\n     \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    \"lastSyncFailure\": {\n     \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    }\n   },\n   \"description\": \"laboris do\",\n   \"labels\": [\n    \"magna quis\",\n    \"dolor labore\"\n   ]\n  }\n ],\n \"properties\": {},\n \"assetStatus\": {\n  \"assetStatusLabel\": \"Lorem veniam reprehenderit mollit\",\n  \"dispositionLabel\": \"enim esse\"\n },\n \"versionDois\": [\n  {\n   \"created\": \"Excepteur Ut proident\",\n   \"doi\": \"magna exercitation\"\n  },\n  {\n   \"created\": \"minim Ut irure ut\",\n   \"doi\": \"non ipsum aliqua cupidatat\"\n  }\n ]\n}"
										},
										{
											"name": "Bad request",
											"originalRequest": {
												"method": "GET",
												"header": [
													{
														"description": "Added as a part of security scheme: oauth2",
														"key": "Authorization",
														"value": "<token>"
													}
												],
												"url": {
													"raw": "{{baseUrl}}/datasets/:owner/:id",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"datasets",
														":owner",
														":id"
													],
													"variable": [
														{
															"key": "owner"
														},
														{
															"key": "id"
														}
													]
												}
											},
											"status": "Bad Request",
											"code": 400,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"body": "{\n \"code\": 1519430,\n \"message\": \"enim\",\n \"details\": \"do\"\n}"
										},
										{
											"name": "Unauthorized",
											"originalRequest": {
												"method": "GET",
												"header": [
													{
														"description": "Added as a part of security scheme: oauth2",
														"key": "Authorization",
														"value": "<token>"
													}
												],
												"url": {
													"raw": "{{baseUrl}}/datasets/:owner/:id",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"datasets",
														":owner",
														":id"
													],
													"variable": [
														{
															"key": "owner"
														},
														{
															"key": "id"
														}
													]
												}
											},
											"status": "Unauthorized",
											"code": 401,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"body": "{\n \"code\": 1519430,\n \"message\": \"enim\",\n \"details\": \"do\"\n}"
										},
										{
											"name": "Forbidden",
											"originalRequest": {
												"method": "GET",
												"header": [
													{
														"description": "Added as a part of security scheme: oauth2",
														"key": "Authorization",
														"value": "<token>"
													}
												],
												"url": {
													"raw": "{{baseUrl}}/datasets/:owner/:id",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"datasets",
														":owner",
														":id"
													],
													"variable": [
														{
															"key": "owner"
														},
														{
															"key": "id"
														}
													]
												}
											},
											"status": "Forbidden",
											"code": 403,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"body": "{\n \"code\": 1519430,\n \"message\": \"enim\",\n \"details\": \"do\"\n}"
										},
										{
											"name": "Not found",
											"originalRequest": {
												"method": "GET",
												"header": [
													{
														"description": "Added as a part of security scheme: oauth2",
														"key": "Authorization",
														"value": "<token>"
													}
												],
												"url": {
													"raw": "{{baseUrl}}/datasets/:owner/:id",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"datasets",
														":owner",
														":id"
													],
													"variable": [
														{
															"key": "owner"
														},
														{
															"key": "id"
														}
													]
												}
											},
											"status": "Not Found",
											"code": 404,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"body": "{\n \"code\": 1519430,\n \"message\": \"enim\",\n \"details\": \"do\"\n}"
										},
										{
											"name": "Server error",
											"originalRequest": {
												"method": "GET",
												"header": [
													{
														"description": "Added as a part of security scheme: oauth2",
														"key": "Authorization",
														"value": "<token>"
													}
												],
												"url": {
													"raw": "{{baseUrl}}/datasets/:owner/:id",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"datasets",
														":owner",
														":id"
													],
													"variable": [
														{
															"key": "owner"
														},
														{
															"key": "id"
														}
													]
												}
											},
											"status": "Internal Server Error",
											"code": 500,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"body": "{\n \"code\": 1519430,\n \"message\": \"enim\",\n \"details\": \"do\"\n}"
										}
									]
								},
								{
									"name": "Replace an existing dataset or create a new dataset",
									"request": {
										"auth": {
											"type": "bearer",
											"bearer": [
												{
													"key": "token",
													"value": "{{readWrite}}",
													"type": "string"
												}
											]
										},
										"method": "PUT",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/json"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n    \"title\": \"Random dataset\",\n    \"visibility\": \"OPEN\",\n    \"description\": \"501 rows\",\n    \"summary\": \"I have 50 rows\",\n    \"tags\": [\n        \"deprecated\"\n    ],\n    \"license\": \"OSODL\",\n    \"files\":[\n        {\n            \"name\": \"50 rows\",\n            \"description\": \"made the fix\",\n            \"labels\": [\"raw data\"],\n            \"source\": {\n                \"url\": \"https://file-examples-com.github.io/uploads/2017/02/file_example_XLS_50.xls\",\n                \"method\": \"GET\"\n            }\n        }\n    ]\n}"
										},
										"url": {
											"raw": "{{baseUrl}}/datasets/:owner/:id",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"datasets",
												":owner",
												":id"
											],
											"variable": [
												{
													"key": "owner",
													"value": "{{owner}}",
													"description": "(Required) "
												},
												{
													"key": "id",
													"value": "{{datasetid}}",
													"description": "(Required) "
												}
											]
										}
									},
									"response": [
										{
											"name": "Dataset replaced successfully.",
											"originalRequest": {
												"method": "PUT",
												"header": [
													{
														"description": "Added as a part of security scheme: oauth2",
														"key": "Authorization",
														"value": "<token>"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\n    \"title\": \"fugiat commodo\",\n    \"visibility\": \"OPEN\",\n    \"description\": \"ipsum commodo in Duis anim\",\n    \"summary\": \"laborum reprehenderit Ut in\",\n    \"tags\": [\n        \"in ea\",\n        \"reprehenderit exercitation cupidatat ea\"\n    ],\n    \"license\": \"CDLA-Sharing-1.0\",\n    \"files\": [\n        {\n            \"name\": \"bQk$ :RKE\",\n            \"source\": {\n                \"url\": {\n                    \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n                },\n                \"method\": {\n                    \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n                },\n                \"requestHeaders\": {\n                    \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n                },\n                \"requestEntity\": {\n                    \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n                },\n                \"oauthToken\": {\n                    \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n                },\n                \"credentials\": {\n                    \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n                },\n                \"authorization\": {\n                    \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n                },\n                \"databaseSource\": {\n                    \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n                },\n                \"dwccSpec\": {\n                    \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n                },\n                \"viewRequest\": {\n                    \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n                },\n                \"databaseMetadataSpec\": {\n                    \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n                },\n                \"dataTables\": {\n                    \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n                },\n                \"tableSpec\": {\n                    \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n                },\n                \"expandArchive\": {\n                    \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n                }\n            },\n            \"description\": \"esse dolore culpa\",\n            \"labels\": [\n                \"ut sed dolor\",\n                \"dolor\"\n            ]\n        },\n        {\n            \"name\": \"z@HCTZ-eV\\\\6\",\n            \"source\": {\n                \"url\": {\n                    \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n                },\n                \"method\": {\n                    \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n                },\n                \"requestHeaders\": {\n                    \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n                },\n                \"requestEntity\": {\n                    \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n                },\n                \"oauthToken\": {\n                    \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n                },\n                \"credentials\": {\n                    \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n                },\n                \"authorization\": {\n                    \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n                },\n                \"databaseSource\": {\n                    \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n                },\n                \"dwccSpec\": {\n                    \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n                },\n                \"viewRequest\": {\n                    \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n                },\n                \"databaseMetadataSpec\": {\n                    \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n                },\n                \"dataTables\": {\n                    \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n                },\n                \"tableSpec\": {\n                    \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n                },\n                \"expandArchive\": {\n                    \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n                }\n            },\n            \"description\": \"in id\",\n            \"labels\": [\n                \"ad cillum id\",\n                \"reprehenderit nulla\"\n            ]\n        }\n    ],\n    \"assetStatusIri\": \"aliquip magna adipisicing\",\n    \"properties\": {}\n}"
												},
												"url": {
													"raw": "{{baseUrl}}/datasets/:owner/:id",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"datasets",
														":owner",
														":id"
													],
													"variable": [
														{
															"key": "owner"
														},
														{
															"key": "id"
														}
													]
												}
											},
											"status": "OK",
											"code": 200,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"body": "{\n \"message\": \"voluptate culpa nulla esse\"\n}"
										},
										{
											"name": "Bad request",
											"originalRequest": {
												"method": "PUT",
												"header": [
													{
														"description": "Added as a part of security scheme: oauth2",
														"key": "Authorization",
														"value": "<token>"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\n    \"title\": \"fugiat commodo\",\n    \"visibility\": \"OPEN\",\n    \"description\": \"ipsum commodo in Duis anim\",\n    \"summary\": \"laborum reprehenderit Ut in\",\n    \"tags\": [\n        \"in ea\",\n        \"reprehenderit exercitation cupidatat ea\"\n    ],\n    \"license\": \"CDLA-Sharing-1.0\",\n    \"files\": [\n        {\n            \"name\": \"bQk$ :RKE\",\n            \"source\": {\n                \"url\": {\n                    \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n                },\n                \"method\": {\n                    \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n                },\n                \"requestHeaders\": {\n                    \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n                },\n                \"requestEntity\": {\n                    \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n                },\n                \"oauthToken\": {\n                    \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n                },\n                \"credentials\": {\n                    \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n                },\n                \"authorization\": {\n                    \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n                },\n                \"databaseSource\": {\n                    \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n                },\n                \"dwccSpec\": {\n                    \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n                },\n                \"viewRequest\": {\n                    \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n                },\n                \"databaseMetadataSpec\": {\n                    \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n                },\n                \"dataTables\": {\n                    \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n                },\n                \"tableSpec\": {\n                    \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n                },\n                \"expandArchive\": {\n                    \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n                }\n            },\n            \"description\": \"esse dolore culpa\",\n            \"labels\": [\n                \"ut sed dolor\",\n                \"dolor\"\n            ]\n        },\n        {\n            \"name\": \"z@HCTZ-eV\\\\6\",\n            \"source\": {\n                \"url\": {\n                    \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n                },\n                \"method\": {\n                    \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n                },\n                \"requestHeaders\": {\n                    \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n                },\n                \"requestEntity\": {\n                    \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n                },\n                \"oauthToken\": {\n                    \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n                },\n                \"credentials\": {\n                    \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n                },\n                \"authorization\": {\n                    \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n                },\n                \"databaseSource\": {\n                    \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n                },\n                \"dwccSpec\": {\n                    \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n                },\n                \"viewRequest\": {\n                    \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n                },\n                \"databaseMetadataSpec\": {\n                    \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n                },\n                \"dataTables\": {\n                    \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n                },\n                \"tableSpec\": {\n                    \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n                },\n                \"expandArchive\": {\n                    \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n                }\n            },\n            \"description\": \"in id\",\n            \"labels\": [\n                \"ad cillum id\",\n                \"reprehenderit nulla\"\n            ]\n        }\n    ],\n    \"assetStatusIri\": \"aliquip magna adipisicing\",\n    \"properties\": {}\n}"
												},
												"url": {
													"raw": "{{baseUrl}}/datasets/:owner/:id",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"datasets",
														":owner",
														":id"
													],
													"variable": [
														{
															"key": "owner"
														},
														{
															"key": "id"
														}
													]
												}
											},
											"status": "Bad Request",
											"code": 400,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"body": "{\n \"code\": 1519430,\n \"message\": \"enim\",\n \"details\": \"do\"\n}"
										},
										{
											"name": "Unauthorized",
											"originalRequest": {
												"method": "PUT",
												"header": [
													{
														"description": "Added as a part of security scheme: oauth2",
														"key": "Authorization",
														"value": "<token>"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\n    \"title\": \"fugiat commodo\",\n    \"visibility\": \"OPEN\",\n    \"description\": \"ipsum commodo in Duis anim\",\n    \"summary\": \"laborum reprehenderit Ut in\",\n    \"tags\": [\n        \"in ea\",\n        \"reprehenderit exercitation cupidatat ea\"\n    ],\n    \"license\": \"CDLA-Sharing-1.0\",\n    \"files\": [\n        {\n            \"name\": \"bQk$ :RKE\",\n            \"source\": {\n                \"url\": {\n                    \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n                },\n                \"method\": {\n                    \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n                },\n                \"requestHeaders\": {\n                    \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n                },\n                \"requestEntity\": {\n                    \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n                },\n                \"oauthToken\": {\n                    \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n                },\n                \"credentials\": {\n                    \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n                },\n                \"authorization\": {\n                    \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n                },\n                \"databaseSource\": {\n                    \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n                },\n                \"dwccSpec\": {\n                    \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n                },\n                \"viewRequest\": {\n                    \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n                },\n                \"databaseMetadataSpec\": {\n                    \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n                },\n                \"dataTables\": {\n                    \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n                },\n                \"tableSpec\": {\n                    \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n                },\n                \"expandArchive\": {\n                    \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n                }\n            },\n            \"description\": \"esse dolore culpa\",\n            \"labels\": [\n                \"ut sed dolor\",\n                \"dolor\"\n            ]\n        },\n        {\n            \"name\": \"z@HCTZ-eV\\\\6\",\n            \"source\": {\n                \"url\": {\n                    \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n                },\n                \"method\": {\n                    \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n                },\n                \"requestHeaders\": {\n                    \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n                },\n                \"requestEntity\": {\n                    \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n                },\n                \"oauthToken\": {\n                    \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n                },\n                \"credentials\": {\n                    \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n                },\n                \"authorization\": {\n                    \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n                },\n                \"databaseSource\": {\n                    \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n                },\n                \"dwccSpec\": {\n                    \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n                },\n                \"viewRequest\": {\n                    \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n                },\n                \"databaseMetadataSpec\": {\n                    \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n                },\n                \"dataTables\": {\n                    \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n                },\n                \"tableSpec\": {\n                    \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n                },\n                \"expandArchive\": {\n                    \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n                }\n            },\n            \"description\": \"in id\",\n            \"labels\": [\n                \"ad cillum id\",\n                \"reprehenderit nulla\"\n            ]\n        }\n    ],\n    \"assetStatusIri\": \"aliquip magna adipisicing\",\n    \"properties\": {}\n}"
												},
												"url": {
													"raw": "{{baseUrl}}/datasets/:owner/:id",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"datasets",
														":owner",
														":id"
													],
													"variable": [
														{
															"key": "owner"
														},
														{
															"key": "id"
														}
													]
												}
											},
											"status": "Unauthorized",
											"code": 401,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"body": "{\n \"code\": 1519430,\n \"message\": \"enim\",\n \"details\": \"do\"\n}"
										},
										{
											"name": "Forbidden",
											"originalRequest": {
												"method": "PUT",
												"header": [
													{
														"description": "Added as a part of security scheme: oauth2",
														"key": "Authorization",
														"value": "<token>"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\n    \"title\": \"fugiat commodo\",\n    \"visibility\": \"OPEN\",\n    \"description\": \"ipsum commodo in Duis anim\",\n    \"summary\": \"laborum reprehenderit Ut in\",\n    \"tags\": [\n        \"in ea\",\n        \"reprehenderit exercitation cupidatat ea\"\n    ],\n    \"license\": \"CDLA-Sharing-1.0\",\n    \"files\": [\n        {\n            \"name\": \"bQk$ :RKE\",\n            \"source\": {\n                \"url\": {\n                    \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n                },\n                \"method\": {\n                    \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n                },\n                \"requestHeaders\": {\n                    \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n                },\n                \"requestEntity\": {\n                    \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n                },\n                \"oauthToken\": {\n                    \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n                },\n                \"credentials\": {\n                    \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n                },\n                \"authorization\": {\n                    \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n                },\n                \"databaseSource\": {\n                    \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n                },\n                \"dwccSpec\": {\n                    \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n                },\n                \"viewRequest\": {\n                    \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n                },\n                \"databaseMetadataSpec\": {\n                    \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n                },\n                \"dataTables\": {\n                    \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n                },\n                \"tableSpec\": {\n                    \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n                },\n                \"expandArchive\": {\n                    \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n                }\n            },\n            \"description\": \"esse dolore culpa\",\n            \"labels\": [\n                \"ut sed dolor\",\n                \"dolor\"\n            ]\n        },\n        {\n            \"name\": \"z@HCTZ-eV\\\\6\",\n            \"source\": {\n                \"url\": {\n                    \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n                },\n                \"method\": {\n                    \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n                },\n                \"requestHeaders\": {\n                    \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n                },\n                \"requestEntity\": {\n                    \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n                },\n                \"oauthToken\": {\n                    \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n                },\n                \"credentials\": {\n                    \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n                },\n                \"authorization\": {\n                    \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n                },\n                \"databaseSource\": {\n                    \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n                },\n                \"dwccSpec\": {\n                    \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n                },\n                \"viewRequest\": {\n                    \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n                },\n                \"databaseMetadataSpec\": {\n                    \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n                },\n                \"dataTables\": {\n                    \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n                },\n                \"tableSpec\": {\n                    \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n                },\n                \"expandArchive\": {\n                    \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n                }\n            },\n            \"description\": \"in id\",\n            \"labels\": [\n                \"ad cillum id\",\n                \"reprehenderit nulla\"\n            ]\n        }\n    ],\n    \"assetStatusIri\": \"aliquip magna adipisicing\",\n    \"properties\": {}\n}"
												},
												"url": {
													"raw": "{{baseUrl}}/datasets/:owner/:id",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"datasets",
														":owner",
														":id"
													],
													"variable": [
														{
															"key": "owner"
														},
														{
															"key": "id"
														}
													]
												}
											},
											"status": "Forbidden",
											"code": 403,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"body": "{\n \"code\": 1519430,\n \"message\": \"enim\",\n \"details\": \"do\"\n}"
										},
										{
											"name": "Not found",
											"originalRequest": {
												"method": "PUT",
												"header": [
													{
														"description": "Added as a part of security scheme: oauth2",
														"key": "Authorization",
														"value": "<token>"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\n    \"title\": \"fugiat commodo\",\n    \"visibility\": \"OPEN\",\n    \"description\": \"ipsum commodo in Duis anim\",\n    \"summary\": \"laborum reprehenderit Ut in\",\n    \"tags\": [\n        \"in ea\",\n        \"reprehenderit exercitation cupidatat ea\"\n    ],\n    \"license\": \"CDLA-Sharing-1.0\",\n    \"files\": [\n        {\n            \"name\": \"bQk$ :RKE\",\n            \"source\": {\n                \"url\": {\n                    \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n                },\n                \"method\": {\n                    \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n                },\n                \"requestHeaders\": {\n                    \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n                },\n                \"requestEntity\": {\n                    \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n                },\n                \"oauthToken\": {\n                    \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n                },\n                \"credentials\": {\n                    \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n                },\n                \"authorization\": {\n                    \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n                },\n                \"databaseSource\": {\n                    \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n                },\n                \"dwccSpec\": {\n                    \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n                },\n                \"viewRequest\": {\n                    \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n                },\n                \"databaseMetadataSpec\": {\n                    \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n                },\n                \"dataTables\": {\n                    \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n                },\n                \"tableSpec\": {\n                    \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n                },\n                \"expandArchive\": {\n                    \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n                }\n            },\n            \"description\": \"esse dolore culpa\",\n            \"labels\": [\n                \"ut sed dolor\",\n                \"dolor\"\n            ]\n        },\n        {\n            \"name\": \"z@HCTZ-eV\\\\6\",\n            \"source\": {\n                \"url\": {\n                    \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n                },\n                \"method\": {\n                    \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n                },\n                \"requestHeaders\": {\n                    \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n                },\n                \"requestEntity\": {\n                    \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n                },\n                \"oauthToken\": {\n                    \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n                },\n                \"credentials\": {\n                    \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n                },\n                \"authorization\": {\n                    \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n                },\n                \"databaseSource\": {\n                    \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n                },\n                \"dwccSpec\": {\n                    \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n                },\n                \"viewRequest\": {\n                    \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n                },\n                \"databaseMetadataSpec\": {\n                    \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n                },\n                \"dataTables\": {\n                    \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n                },\n                \"tableSpec\": {\n                    \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n                },\n                \"expandArchive\": {\n                    \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n                }\n            },\n            \"description\": \"in id\",\n            \"labels\": [\n                \"ad cillum id\",\n                \"reprehenderit nulla\"\n            ]\n        }\n    ],\n    \"assetStatusIri\": \"aliquip magna adipisicing\",\n    \"properties\": {}\n}"
												},
												"url": {
													"raw": "{{baseUrl}}/datasets/:owner/:id",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"datasets",
														":owner",
														":id"
													],
													"variable": [
														{
															"key": "owner"
														},
														{
															"key": "id"
														}
													]
												}
											},
											"status": "Not Found",
											"code": 404,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"body": "{\n \"code\": 1519430,\n \"message\": \"enim\",\n \"details\": \"do\"\n}"
										},
										{
											"name": "Bad request",
											"originalRequest": {
												"method": "PUT",
												"header": [
													{
														"description": "Added as a part of security scheme: oauth2",
														"key": "Authorization",
														"value": "<token>"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\n    \"title\": \"fugiat commodo\",\n    \"visibility\": \"OPEN\",\n    \"description\": \"ipsum commodo in Duis anim\",\n    \"summary\": \"laborum reprehenderit Ut in\",\n    \"tags\": [\n        \"in ea\",\n        \"reprehenderit exercitation cupidatat ea\"\n    ],\n    \"license\": \"CDLA-Sharing-1.0\",\n    \"files\": [\n        {\n            \"name\": \"bQk$ :RKE\",\n            \"source\": {\n                \"url\": {\n                    \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n                },\n                \"method\": {\n                    \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n                },\n                \"requestHeaders\": {\n                    \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n                },\n                \"requestEntity\": {\n                    \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n                },\n                \"oauthToken\": {\n                    \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n                },\n                \"credentials\": {\n                    \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n                },\n                \"authorization\": {\n                    \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n                },\n                \"databaseSource\": {\n                    \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n                },\n                \"dwccSpec\": {\n                    \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n                },\n                \"viewRequest\": {\n                    \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n                },\n                \"databaseMetadataSpec\": {\n                    \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n                },\n                \"dataTables\": {\n                    \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n                },\n                \"tableSpec\": {\n                    \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n                },\n                \"expandArchive\": {\n                    \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n                }\n            },\n            \"description\": \"esse dolore culpa\",\n            \"labels\": [\n                \"ut sed dolor\",\n                \"dolor\"\n            ]\n        },\n        {\n            \"name\": \"z@HCTZ-eV\\\\6\",\n            \"source\": {\n                \"url\": {\n                    \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n                },\n                \"method\": {\n                    \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n                },\n                \"requestHeaders\": {\n                    \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n                },\n                \"requestEntity\": {\n                    \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n                },\n                \"oauthToken\": {\n                    \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n                },\n                \"credentials\": {\n                    \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n                },\n                \"authorization\": {\n                    \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n                },\n                \"databaseSource\": {\n                    \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n                },\n                \"dwccSpec\": {\n                    \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n                },\n                \"viewRequest\": {\n                    \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n                },\n                \"databaseMetadataSpec\": {\n                    \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n                },\n                \"dataTables\": {\n                    \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n                },\n                \"tableSpec\": {\n                    \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n                },\n                \"expandArchive\": {\n                    \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n                }\n            },\n            \"description\": \"in id\",\n            \"labels\": [\n                \"ad cillum id\",\n                \"reprehenderit nulla\"\n            ]\n        }\n    ],\n    \"assetStatusIri\": \"aliquip magna adipisicing\",\n    \"properties\": {}\n}"
												},
												"url": {
													"raw": "{{baseUrl}}/datasets/:owner/:id",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"datasets",
														":owner",
														":id"
													],
													"variable": [
														{
															"key": "owner"
														},
														{
															"key": "id"
														}
													]
												}
											},
											"status": "Unprocessable Entity (WebDAV) (RFC 4918)",
											"code": 422,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"body": "{\n \"code\": 1519430,\n \"message\": \"enim\",\n \"details\": \"do\"\n}"
										},
										{
											"name": "Server error",
											"originalRequest": {
												"method": "PUT",
												"header": [
													{
														"description": "Added as a part of security scheme: oauth2",
														"key": "Authorization",
														"value": "<token>"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\n    \"title\": \"fugiat commodo\",\n    \"visibility\": \"OPEN\",\n    \"description\": \"ipsum commodo in Duis anim\",\n    \"summary\": \"laborum reprehenderit Ut in\",\n    \"tags\": [\n        \"in ea\",\n        \"reprehenderit exercitation cupidatat ea\"\n    ],\n    \"license\": \"CDLA-Sharing-1.0\",\n    \"files\": [\n        {\n            \"name\": \"bQk$ :RKE\",\n            \"source\": {\n                \"url\": {\n                    \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n                },\n                \"method\": {\n                    \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n                },\n                \"requestHeaders\": {\n                    \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n                },\n                \"requestEntity\": {\n                    \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n                },\n                \"oauthToken\": {\n                    \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n                },\n                \"credentials\": {\n                    \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n                },\n                \"authorization\": {\n                    \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n                },\n                \"databaseSource\": {\n                    \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n                },\n                \"dwccSpec\": {\n                    \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n                },\n                \"viewRequest\": {\n                    \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n                },\n                \"databaseMetadataSpec\": {\n                    \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n                },\n                \"dataTables\": {\n                    \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n                },\n                \"tableSpec\": {\n                    \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n                },\n                \"expandArchive\": {\n                    \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n                }\n            },\n            \"description\": \"esse dolore culpa\",\n            \"labels\": [\n                \"ut sed dolor\",\n                \"dolor\"\n            ]\n        },\n        {\n            \"name\": \"z@HCTZ-eV\\\\6\",\n            \"source\": {\n                \"url\": {\n                    \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n                },\n                \"method\": {\n                    \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n                },\n                \"requestHeaders\": {\n                    \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n                },\n                \"requestEntity\": {\n                    \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n                },\n                \"oauthToken\": {\n                    \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n                },\n                \"credentials\": {\n                    \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n                },\n                \"authorization\": {\n                    \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n                },\n                \"databaseSource\": {\n                    \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n                },\n                \"dwccSpec\": {\n                    \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n                },\n                \"viewRequest\": {\n                    \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n                },\n                \"databaseMetadataSpec\": {\n                    \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n                },\n                \"dataTables\": {\n                    \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n                },\n                \"tableSpec\": {\n                    \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n                },\n                \"expandArchive\": {\n                    \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n                }\n            },\n            \"description\": \"in id\",\n            \"labels\": [\n                \"ad cillum id\",\n                \"reprehenderit nulla\"\n            ]\n        }\n    ],\n    \"assetStatusIri\": \"aliquip magna adipisicing\",\n    \"properties\": {}\n}"
												},
												"url": {
													"raw": "{{baseUrl}}/datasets/:owner/:id",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"datasets",
														":owner",
														":id"
													],
													"variable": [
														{
															"key": "owner"
														},
														{
															"key": "id"
														}
													]
												}
											},
											"status": "Internal Server Error",
											"code": 500,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"body": "{\n \"code\": 1519430,\n \"message\": \"enim\",\n \"details\": \"do\"\n}"
										}
									]
								},
								{
									"name": "Delete a dataset.",
									"request": {
										"auth": {
											"type": "bearer",
											"bearer": [
												{
													"key": "token",
													"value": "{{readWrite}}",
													"type": "string"
												}
											]
										},
										"method": "DELETE",
										"header": [],
										"url": {
											"raw": "{{baseUrl}}/datasets/:owner/:id",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"datasets",
												":owner",
												":id"
											],
											"variable": [
												{
													"key": "owner",
													"value": "{{owner}}",
													"description": "(Required) "
												},
												{
													"key": "id",
													"value": "{{datasetid}}",
													"description": "(Required) "
												}
											]
										}
									},
									"response": [
										{
											"name": "Dataset has been successfully deleted.",
											"originalRequest": {
												"method": "DELETE",
												"header": [
													{
														"description": "Added as a part of security scheme: oauth2",
														"key": "Authorization",
														"value": "<token>"
													}
												],
												"url": {
													"raw": "{{baseUrl}}/datasets/:owner/:id",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"datasets",
														":owner",
														":id"
													],
													"variable": [
														{
															"key": "owner"
														},
														{
															"key": "id"
														}
													]
												}
											},
											"status": "OK",
											"code": 200,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"body": "{\n \"message\": \"voluptate culpa nulla esse\"\n}"
										},
										{
											"name": "Bad request",
											"originalRequest": {
												"method": "DELETE",
												"header": [
													{
														"description": "Added as a part of security scheme: oauth2",
														"key": "Authorization",
														"value": "<token>"
													}
												],
												"url": {
													"raw": "{{baseUrl}}/datasets/:owner/:id",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"datasets",
														":owner",
														":id"
													],
													"variable": [
														{
															"key": "owner"
														},
														{
															"key": "id"
														}
													]
												}
											},
											"status": "Bad Request",
											"code": 400,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"body": "{\n \"code\": 1519430,\n \"message\": \"enim\",\n \"details\": \"do\"\n}"
										},
										{
											"name": "Unauthorized",
											"originalRequest": {
												"method": "DELETE",
												"header": [
													{
														"description": "Added as a part of security scheme: oauth2",
														"key": "Authorization",
														"value": "<token>"
													}
												],
												"url": {
													"raw": "{{baseUrl}}/datasets/:owner/:id",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"datasets",
														":owner",
														":id"
													],
													"variable": [
														{
															"key": "owner"
														},
														{
															"key": "id"
														}
													]
												}
											},
											"status": "Unauthorized",
											"code": 401,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"body": "{\n \"code\": 1519430,\n \"message\": \"enim\",\n \"details\": \"do\"\n}"
										},
										{
											"name": "Forbidden",
											"originalRequest": {
												"method": "DELETE",
												"header": [
													{
														"description": "Added as a part of security scheme: oauth2",
														"key": "Authorization",
														"value": "<token>"
													}
												],
												"url": {
													"raw": "{{baseUrl}}/datasets/:owner/:id",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"datasets",
														":owner",
														":id"
													],
													"variable": [
														{
															"key": "owner"
														},
														{
															"key": "id"
														}
													]
												}
											},
											"status": "Forbidden",
											"code": 403,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"body": "{\n \"code\": 1519430,\n \"message\": \"enim\",\n \"details\": \"do\"\n}"
										},
										{
											"name": "Not found",
											"originalRequest": {
												"method": "DELETE",
												"header": [
													{
														"description": "Added as a part of security scheme: oauth2",
														"key": "Authorization",
														"value": "<token>"
													}
												],
												"url": {
													"raw": "{{baseUrl}}/datasets/:owner/:id",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"datasets",
														":owner",
														":id"
													],
													"variable": [
														{
															"key": "owner"
														},
														{
															"key": "id"
														}
													]
												}
											},
											"status": "Not Found",
											"code": 404,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"body": "{\n \"code\": 1519430,\n \"message\": \"enim\",\n \"details\": \"do\"\n}"
										},
										{
											"name": "Server error",
											"originalRequest": {
												"method": "DELETE",
												"header": [
													{
														"description": "Added as a part of security scheme: oauth2",
														"key": "Authorization",
														"value": "<token>"
													}
												],
												"url": {
													"raw": "{{baseUrl}}/datasets/:owner/:id",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"datasets",
														":owner",
														":id"
													],
													"variable": [
														{
															"key": "owner"
														},
														{
															"key": "id"
														}
													]
												}
											},
											"status": "Internal Server Error",
											"code": 500,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"body": "{\n \"code\": 1519430,\n \"message\": \"enim\",\n \"details\": \"do\"\n}"
										}
									]
								},
								{
									"name": "Update an existing dataset.",
									"request": {
										"auth": {
											"type": "bearer",
											"bearer": [
												{
													"key": "token",
													"value": "{{readWrite}}",
													"type": "string"
												}
											]
										},
										"method": "PATCH",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/json"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n    \"title\": \"Random dataset\",\n    \"visibility\": \"OPEN\",\n    \"description\": \"50 rows\",\n    \"summary\": \"I have 50 rows\",\n    \"tags\": [\n        \"deprecated\"\n    ],\n    \"license\": \"OSODL\",\n    \"files\":[\n        {\n            \"name\": \"50 rows\",\n            \"description\": \"made the fix\",\n            \"labels\": [\"raw data\"],\n            \"source\": {\n                \"url\": \"https://file-examples-com.github.io/uploads/2017/02/file_example_XLS_50.xls\",\n                \"method\": \"GET\"\n            }\n        }\n    ]\n}"
										},
										"url": {
											"raw": "{{baseUrl}}/datasets/:owner/:id",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"datasets",
												":owner",
												":id"
											],
											"variable": [
												{
													"key": "owner",
													"value": "{{owner}}",
													"description": "(Required) "
												},
												{
													"key": "id",
													"value": "{{datasetid}}",
													"description": "(Required) "
												}
											]
										}
									},
									"response": [
										{
											"name": "Dataset updated successfully.",
											"originalRequest": {
												"method": "PATCH",
												"header": [
													{
														"description": "Added as a part of security scheme: oauth2",
														"key": "Authorization",
														"value": "<token>"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\n    \"title\": \"d\",\n    \"visibility\": \"PRIVATE\",\n    \"autoSyncInterval\": \"NEVER\",\n    \"description\": \"quis dolore\",\n    \"summary\": \"reprehenderit\",\n    \"tags\": [\n        \"occaecat Lorem officia et\",\n        \"Ut\"\n    ],\n    \"license\": \"CC-BY 3.0\",\n    \"files\": [\n        {\n            \"name\": \"% 7h&)\",\n            \"source\": {\n                \"url\": {\n                    \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n                },\n                \"method\": {\n                    \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n                },\n                \"requestHeaders\": {\n                    \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n                },\n                \"requestEntity\": {\n                    \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n                },\n                \"oauthToken\": {\n                    \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n                },\n                \"credentials\": {\n                    \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n                },\n                \"authorization\": {\n                    \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n                },\n                \"databaseSource\": {\n                    \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n                },\n                \"dwccSpec\": {\n                    \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n                },\n                \"viewRequest\": {\n                    \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n                },\n                \"databaseMetadataSpec\": {\n                    \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n                },\n                \"dataTables\": {\n                    \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n                },\n                \"tableSpec\": {\n                    \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n                },\n                \"expandArchive\": {\n                    \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n                }\n            },\n            \"description\": \"irure fugiat voluptate\",\n            \"labels\": [\n                \"in\",\n                \"inc\"\n            ]\n        },\n        {\n            \"name\": \"E=m?5ceA\",\n            \"source\": {\n                \"url\": {\n                    \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n                },\n                \"method\": {\n                    \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n                },\n                \"requestHeaders\": {\n                    \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n                },\n                \"requestEntity\": {\n                    \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n                },\n                \"oauthToken\": {\n                    \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n                },\n                \"credentials\": {\n                    \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n                },\n                \"authorization\": {\n                    \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n                },\n                \"databaseSource\": {\n                    \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n                },\n                \"dwccSpec\": {\n                    \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n                },\n                \"viewRequest\": {\n                    \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n                },\n                \"databaseMetadataSpec\": {\n                    \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n                },\n                \"dataTables\": {\n                    \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n                },\n                \"tableSpec\": {\n                    \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n                },\n                \"expandArchive\": {\n                    \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n                }\n            },\n            \"description\": \"ullamco sed dolore sunt \",\n            \"labels\": [\n                \"ad\",\n                \"adipisicing commodo dolor aliquip\"\n            ]\n        }\n    ],\n    \"assetStatusIri\": \"est cupidatat aute\",\n    \"properties\": {}\n}"
												},
												"url": {
													"raw": "{{baseUrl}}/datasets/:owner/:id",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"datasets",
														":owner",
														":id"
													],
													"variable": [
														{
															"key": "owner"
														},
														{
															"key": "id"
														}
													]
												}
											},
											"status": "OK",
											"code": 200,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"body": "{\n \"message\": \"voluptate culpa nulla esse\"\n}"
										},
										{
											"name": "Bad request",
											"originalRequest": {
												"method": "PATCH",
												"header": [
													{
														"description": "Added as a part of security scheme: oauth2",
														"key": "Authorization",
														"value": "<token>"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\n    \"title\": \"d\",\n    \"visibility\": \"PRIVATE\",\n    \"autoSyncInterval\": \"NEVER\",\n    \"description\": \"quis dolore\",\n    \"summary\": \"reprehenderit\",\n    \"tags\": [\n        \"occaecat Lorem officia et\",\n        \"Ut\"\n    ],\n    \"license\": \"CC-BY 3.0\",\n    \"files\": [\n        {\n            \"name\": \"% 7h&)\",\n            \"source\": {\n                \"url\": {\n                    \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n                },\n                \"method\": {\n                    \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n                },\n                \"requestHeaders\": {\n                    \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n                },\n                \"requestEntity\": {\n                    \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n                },\n                \"oauthToken\": {\n                    \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n                },\n                \"credentials\": {\n                    \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n                },\n                \"authorization\": {\n                    \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n                },\n                \"databaseSource\": {\n                    \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n                },\n                \"dwccSpec\": {\n                    \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n                },\n                \"viewRequest\": {\n                    \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n                },\n                \"databaseMetadataSpec\": {\n                    \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n                },\n                \"dataTables\": {\n                    \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n                },\n                \"tableSpec\": {\n                    \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n                },\n                \"expandArchive\": {\n                    \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n                }\n            },\n            \"description\": \"irure fugiat voluptate\",\n            \"labels\": [\n                \"in\",\n                \"inc\"\n            ]\n        },\n        {\n            \"name\": \"E=m?5ceA\",\n            \"source\": {\n                \"url\": {\n                    \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n                },\n                \"method\": {\n                    \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n                },\n                \"requestHeaders\": {\n                    \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n                },\n                \"requestEntity\": {\n                    \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n                },\n                \"oauthToken\": {\n                    \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n                },\n                \"credentials\": {\n                    \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n                },\n                \"authorization\": {\n                    \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n                },\n                \"databaseSource\": {\n                    \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n                },\n                \"dwccSpec\": {\n                    \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n                },\n                \"viewRequest\": {\n                    \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n                },\n                \"databaseMetadataSpec\": {\n                    \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n                },\n                \"dataTables\": {\n                    \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n                },\n                \"tableSpec\": {\n                    \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n                },\n                \"expandArchive\": {\n                    \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n                }\n            },\n            \"description\": \"ullamco sed dolore sunt \",\n            \"labels\": [\n                \"ad\",\n                \"adipisicing commodo dolor aliquip\"\n            ]\n        }\n    ],\n    \"assetStatusIri\": \"est cupidatat aute\",\n    \"properties\": {}\n}"
												},
												"url": {
													"raw": "{{baseUrl}}/datasets/:owner/:id",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"datasets",
														":owner",
														":id"
													],
													"variable": [
														{
															"key": "owner"
														},
														{
															"key": "id"
														}
													]
												}
											},
											"status": "Bad Request",
											"code": 400,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"body": "{\n \"code\": 1519430,\n \"message\": \"enim\",\n \"details\": \"do\"\n}"
										},
										{
											"name": "Unauthorized",
											"originalRequest": {
												"method": "PATCH",
												"header": [
													{
														"description": "Added as a part of security scheme: oauth2",
														"key": "Authorization",
														"value": "<token>"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\n    \"title\": \"d\",\n    \"visibility\": \"PRIVATE\",\n    \"autoSyncInterval\": \"NEVER\",\n    \"description\": \"quis dolore\",\n    \"summary\": \"reprehenderit\",\n    \"tags\": [\n        \"occaecat Lorem officia et\",\n        \"Ut\"\n    ],\n    \"license\": \"CC-BY 3.0\",\n    \"files\": [\n        {\n            \"name\": \"% 7h&)\",\n            \"source\": {\n                \"url\": {\n                    \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n                },\n                \"method\": {\n                    \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n                },\n                \"requestHeaders\": {\n                    \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n                },\n                \"requestEntity\": {\n                    \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n                },\n                \"oauthToken\": {\n                    \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n                },\n                \"credentials\": {\n                    \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n                },\n                \"authorization\": {\n                    \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n                },\n                \"databaseSource\": {\n                    \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n                },\n                \"dwccSpec\": {\n                    \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n                },\n                \"viewRequest\": {\n                    \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n                },\n                \"databaseMetadataSpec\": {\n                    \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n                },\n                \"dataTables\": {\n                    \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n                },\n                \"tableSpec\": {\n                    \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n                },\n                \"expandArchive\": {\n                    \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n                }\n            },\n            \"description\": \"irure fugiat voluptate\",\n            \"labels\": [\n                \"in\",\n                \"inc\"\n            ]\n        },\n        {\n            \"name\": \"E=m?5ceA\",\n            \"source\": {\n                \"url\": {\n                    \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n                },\n                \"method\": {\n                    \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n                },\n                \"requestHeaders\": {\n                    \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n                },\n                \"requestEntity\": {\n                    \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n                },\n                \"oauthToken\": {\n                    \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n                },\n                \"credentials\": {\n                    \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n                },\n                \"authorization\": {\n                    \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n                },\n                \"databaseSource\": {\n                    \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n                },\n                \"dwccSpec\": {\n                    \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n                },\n                \"viewRequest\": {\n                    \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n                },\n                \"databaseMetadataSpec\": {\n                    \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n                },\n                \"dataTables\": {\n                    \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n                },\n                \"tableSpec\": {\n                    \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n                },\n                \"expandArchive\": {\n                    \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n                }\n            },\n            \"description\": \"ullamco sed dolore sunt \",\n            \"labels\": [\n                \"ad\",\n                \"adipisicing commodo dolor aliquip\"\n            ]\n        }\n    ],\n    \"assetStatusIri\": \"est cupidatat aute\",\n    \"properties\": {}\n}"
												},
												"url": {
													"raw": "{{baseUrl}}/datasets/:owner/:id",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"datasets",
														":owner",
														":id"
													],
													"variable": [
														{
															"key": "owner"
														},
														{
															"key": "id"
														}
													]
												}
											},
											"status": "Unauthorized",
											"code": 401,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"body": "{\n \"code\": 1519430,\n \"message\": \"enim\",\n \"details\": \"do\"\n}"
										},
										{
											"name": "Forbidden",
											"originalRequest": {
												"method": "PATCH",
												"header": [
													{
														"description": "Added as a part of security scheme: oauth2",
														"key": "Authorization",
														"value": "<token>"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\n    \"title\": \"d\",\n    \"visibility\": \"PRIVATE\",\n    \"autoSyncInterval\": \"NEVER\",\n    \"description\": \"quis dolore\",\n    \"summary\": \"reprehenderit\",\n    \"tags\": [\n        \"occaecat Lorem officia et\",\n        \"Ut\"\n    ],\n    \"license\": \"CC-BY 3.0\",\n    \"files\": [\n        {\n            \"name\": \"% 7h&)\",\n            \"source\": {\n                \"url\": {\n                    \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n                },\n                \"method\": {\n                    \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n                },\n                \"requestHeaders\": {\n                    \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n                },\n                \"requestEntity\": {\n                    \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n                },\n                \"oauthToken\": {\n                    \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n                },\n                \"credentials\": {\n                    \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n                },\n                \"authorization\": {\n                    \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n                },\n                \"databaseSource\": {\n                    \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n                },\n                \"dwccSpec\": {\n                    \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n                },\n                \"viewRequest\": {\n                    \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n                },\n                \"databaseMetadataSpec\": {\n                    \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n                },\n                \"dataTables\": {\n                    \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n                },\n                \"tableSpec\": {\n                    \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n                },\n                \"expandArchive\": {\n                    \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n                }\n            },\n            \"description\": \"irure fugiat voluptate\",\n            \"labels\": [\n                \"in\",\n                \"inc\"\n            ]\n        },\n        {\n            \"name\": \"E=m?5ceA\",\n            \"source\": {\n                \"url\": {\n                    \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n                },\n                \"method\": {\n                    \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n                },\n                \"requestHeaders\": {\n                    \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n                },\n                \"requestEntity\": {\n                    \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n                },\n                \"oauthToken\": {\n                    \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n                },\n                \"credentials\": {\n                    \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n                },\n                \"authorization\": {\n                    \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n                },\n                \"databaseSource\": {\n                    \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n                },\n                \"dwccSpec\": {\n                    \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n                },\n                \"viewRequest\": {\n                    \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n                },\n                \"databaseMetadataSpec\": {\n                    \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n                },\n                \"dataTables\": {\n                    \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n                },\n                \"tableSpec\": {\n                    \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n                },\n                \"expandArchive\": {\n                    \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n                }\n            },\n            \"description\": \"ullamco sed dolore sunt \",\n            \"labels\": [\n                \"ad\",\n                \"adipisicing commodo dolor aliquip\"\n            ]\n        }\n    ],\n    \"assetStatusIri\": \"est cupidatat aute\",\n    \"properties\": {}\n}"
												},
												"url": {
													"raw": "{{baseUrl}}/datasets/:owner/:id",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"datasets",
														":owner",
														":id"
													],
													"variable": [
														{
															"key": "owner"
														},
														{
															"key": "id"
														}
													]
												}
											},
											"status": "Forbidden",
											"code": 403,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"body": "{\n \"code\": 1519430,\n \"message\": \"enim\",\n \"details\": \"do\"\n}"
										},
										{
											"name": "Not found",
											"originalRequest": {
												"method": "PATCH",
												"header": [
													{
														"description": "Added as a part of security scheme: oauth2",
														"key": "Authorization",
														"value": "<token>"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\n    \"title\": \"d\",\n    \"visibility\": \"PRIVATE\",\n    \"autoSyncInterval\": \"NEVER\",\n    \"description\": \"quis dolore\",\n    \"summary\": \"reprehenderit\",\n    \"tags\": [\n        \"occaecat Lorem officia et\",\n        \"Ut\"\n    ],\n    \"license\": \"CC-BY 3.0\",\n    \"files\": [\n        {\n            \"name\": \"% 7h&)\",\n            \"source\": {\n                \"url\": {\n                    \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n                },\n                \"method\": {\n                    \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n                },\n                \"requestHeaders\": {\n                    \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n                },\n                \"requestEntity\": {\n                    \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n                },\n                \"oauthToken\": {\n                    \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n                },\n                \"credentials\": {\n                    \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n                },\n                \"authorization\": {\n                    \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n                },\n                \"databaseSource\": {\n                    \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n                },\n                \"dwccSpec\": {\n                    \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n                },\n                \"viewRequest\": {\n                    \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n                },\n                \"databaseMetadataSpec\": {\n                    \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n                },\n                \"dataTables\": {\n                    \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n                },\n                \"tableSpec\": {\n                    \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n                },\n                \"expandArchive\": {\n                    \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n                }\n            },\n            \"description\": \"irure fugiat voluptate\",\n            \"labels\": [\n                \"in\",\n                \"inc\"\n            ]\n        },\n        {\n            \"name\": \"E=m?5ceA\",\n            \"source\": {\n                \"url\": {\n                    \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n                },\n                \"method\": {\n                    \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n                },\n                \"requestHeaders\": {\n                    \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n                },\n                \"requestEntity\": {\n                    \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n                },\n                \"oauthToken\": {\n                    \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n                },\n                \"credentials\": {\n                    \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n                },\n                \"authorization\": {\n                    \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n                },\n                \"databaseSource\": {\n                    \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n                },\n                \"dwccSpec\": {\n                    \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n                },\n                \"viewRequest\": {\n                    \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n                },\n                \"databaseMetadataSpec\": {\n                    \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n                },\n                \"dataTables\": {\n                    \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n                },\n                \"tableSpec\": {\n                    \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n                },\n                \"expandArchive\": {\n                    \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n                }\n            },\n            \"description\": \"ullamco sed dolore sunt \",\n            \"labels\": [\n                \"ad\",\n                \"adipisicing commodo dolor aliquip\"\n            ]\n        }\n    ],\n    \"assetStatusIri\": \"est cupidatat aute\",\n    \"properties\": {}\n}"
												},
												"url": {
													"raw": "{{baseUrl}}/datasets/:owner/:id",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"datasets",
														":owner",
														":id"
													],
													"variable": [
														{
															"key": "owner"
														},
														{
															"key": "id"
														}
													]
												}
											},
											"status": "Not Found",
											"code": 404,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"body": "{\n \"code\": 1519430,\n \"message\": \"enim\",\n \"details\": \"do\"\n}"
										},
										{
											"name": "Bad request",
											"originalRequest": {
												"method": "PATCH",
												"header": [
													{
														"description": "Added as a part of security scheme: oauth2",
														"key": "Authorization",
														"value": "<token>"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\n    \"title\": \"d\",\n    \"visibility\": \"PRIVATE\",\n    \"autoSyncInterval\": \"NEVER\",\n    \"description\": \"quis dolore\",\n    \"summary\": \"reprehenderit\",\n    \"tags\": [\n        \"occaecat Lorem officia et\",\n        \"Ut\"\n    ],\n    \"license\": \"CC-BY 3.0\",\n    \"files\": [\n        {\n            \"name\": \"% 7h&)\",\n            \"source\": {\n                \"url\": {\n                    \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n                },\n                \"method\": {\n                    \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n                },\n                \"requestHeaders\": {\n                    \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n                },\n                \"requestEntity\": {\n                    \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n                },\n                \"oauthToken\": {\n                    \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n                },\n                \"credentials\": {\n                    \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n                },\n                \"authorization\": {\n                    \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n                },\n                \"databaseSource\": {\n                    \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n                },\n                \"dwccSpec\": {\n                    \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n                },\n                \"viewRequest\": {\n                    \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n                },\n                \"databaseMetadataSpec\": {\n                    \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n                },\n                \"dataTables\": {\n                    \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n                },\n                \"tableSpec\": {\n                    \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n                },\n                \"expandArchive\": {\n                    \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n                }\n            },\n            \"description\": \"irure fugiat voluptate\",\n            \"labels\": [\n                \"in\",\n                \"inc\"\n            ]\n        },\n        {\n            \"name\": \"E=m?5ceA\",\n            \"source\": {\n                \"url\": {\n                    \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n                },\n                \"method\": {\n                    \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n                },\n                \"requestHeaders\": {\n                    \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n                },\n                \"requestEntity\": {\n                    \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n                },\n                \"oauthToken\": {\n                    \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n                },\n                \"credentials\": {\n                    \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n                },\n                \"authorization\": {\n                    \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n                },\n                \"databaseSource\": {\n                    \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n                },\n                \"dwccSpec\": {\n                    \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n                },\n                \"viewRequest\": {\n                    \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n                },\n                \"databaseMetadataSpec\": {\n                    \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n                },\n                \"dataTables\": {\n                    \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n                },\n                \"tableSpec\": {\n                    \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n                },\n                \"expandArchive\": {\n                    \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n                }\n            },\n            \"description\": \"ullamco sed dolore sunt \",\n            \"labels\": [\n                \"ad\",\n                \"adipisicing commodo dolor aliquip\"\n            ]\n        }\n    ],\n    \"assetStatusIri\": \"est cupidatat aute\",\n    \"properties\": {}\n}"
												},
												"url": {
													"raw": "{{baseUrl}}/datasets/:owner/:id",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"datasets",
														":owner",
														":id"
													],
													"variable": [
														{
															"key": "owner"
														},
														{
															"key": "id"
														}
													]
												}
											},
											"status": "Unprocessable Entity (WebDAV) (RFC 4918)",
											"code": 422,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"body": "{\n \"code\": 1519430,\n \"message\": \"enim\",\n \"details\": \"do\"\n}"
										},
										{
											"name": "Server error",
											"originalRequest": {
												"method": "PATCH",
												"header": [
													{
														"description": "Added as a part of security scheme: oauth2",
														"key": "Authorization",
														"value": "<token>"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\n    \"title\": \"d\",\n    \"visibility\": \"PRIVATE\",\n    \"autoSyncInterval\": \"NEVER\",\n    \"description\": \"quis dolore\",\n    \"summary\": \"reprehenderit\",\n    \"tags\": [\n        \"occaecat Lorem officia et\",\n        \"Ut\"\n    ],\n    \"license\": \"CC-BY 3.0\",\n    \"files\": [\n        {\n            \"name\": \"% 7h&)\",\n            \"source\": {\n                \"url\": {\n                    \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n                },\n                \"method\": {\n                    \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n                },\n                \"requestHeaders\": {\n                    \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n                },\n                \"requestEntity\": {\n                    \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n                },\n                \"oauthToken\": {\n                    \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n                },\n                \"credentials\": {\n                    \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n                },\n                \"authorization\": {\n                    \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n                },\n                \"databaseSource\": {\n                    \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n                },\n                \"dwccSpec\": {\n                    \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n                },\n                \"viewRequest\": {\n                    \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n                },\n                \"databaseMetadataSpec\": {\n                    \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n                },\n                \"dataTables\": {\n                    \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n                },\n                \"tableSpec\": {\n                    \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n                },\n                \"expandArchive\": {\n                    \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n                }\n            },\n            \"description\": \"irure fugiat voluptate\",\n            \"labels\": [\n                \"in\",\n                \"inc\"\n            ]\n        },\n        {\n            \"name\": \"E=m?5ceA\",\n            \"source\": {\n                \"url\": {\n                    \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n                },\n                \"method\": {\n                    \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n                },\n                \"requestHeaders\": {\n                    \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n                },\n                \"requestEntity\": {\n                    \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n                },\n                \"oauthToken\": {\n                    \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n                },\n                \"credentials\": {\n                    \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n                },\n                \"authorization\": {\n                    \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n                },\n                \"databaseSource\": {\n                    \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n                },\n                \"dwccSpec\": {\n                    \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n                },\n                \"viewRequest\": {\n                    \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n                },\n                \"databaseMetadataSpec\": {\n                    \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n                },\n                \"dataTables\": {\n                    \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n                },\n                \"tableSpec\": {\n                    \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n                },\n                \"expandArchive\": {\n                    \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n                }\n            },\n            \"description\": \"ullamco sed dolore sunt \",\n            \"labels\": [\n                \"ad\",\n                \"adipisicing commodo dolor aliquip\"\n            ]\n        }\n    ],\n    \"assetStatusIri\": \"est cupidatat aute\",\n    \"properties\": {}\n}"
												},
												"url": {
													"raw": "{{baseUrl}}/datasets/:owner/:id",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"datasets",
														":owner",
														":id"
													],
													"variable": [
														{
															"key": "owner"
														},
														{
															"key": "id"
														}
													]
												}
											},
											"status": "Internal Server Error",
											"code": 500,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"body": "{\n \"code\": 1519430,\n \"message\": \"enim\",\n \"details\": \"do\"\n}"
										}
									]
								},
								{
									"name": "Add or update tables for a dataset.",
									"request": {
										"auth": {
											"type": "bearer",
											"bearer": [
												{
													"key": "token",
													"value": "{{entAdmin}}",
													"type": "string"
												}
											]
										},
										"method": "POST",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/json"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n    \"tables\": [\n        {\n            \"name\": \"50 row table\",\n            \"source\": {\n                \"url\": \"https://file-examples-com.github.io/uploads/2017/02/file_example_XLS_50.xls\",\n                \"method\": \"GET\"\n            },\n            \"description\": \"a table with 50 rows\",\n            \"labels\": [\n                \"raw data\"\n            ]\n        }\n    ]\n}"
										},
										"url": {
											"raw": "{{baseUrl}}/datasets/:owner/:id/tables",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"datasets",
												":owner",
												":id",
												"tables"
											],
											"variable": [
												{
													"key": "owner",
													"value": "{{owner}}",
													"description": "(Required) "
												},
												{
													"key": "id",
													"value": "{{datasetid}}",
													"description": "(Required) "
												}
											]
										}
									},
									"response": [
										{
											"name": "Dataset successfully updated with new sources. Sync in progress.",
											"originalRequest": {
												"method": "POST",
												"header": [
													{
														"description": "Added as a part of security scheme: oauth2",
														"key": "Authorization",
														"value": "<token>"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\n    \"tables\": [\n        {\n            \"name\": \"63B~{bl$\",\n            \"source\": {\n                \"url\": {\n                    \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n                },\n                \"method\": {\n                    \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n                },\n                \"requestHeaders\": {\n                    \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n                },\n                \"requestEntity\": {\n                    \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n                },\n                \"oauthToken\": {\n                    \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n                },\n                \"credentials\": {\n                    \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n                },\n                \"authorization\": {\n                    \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n                },\n                \"databaseSource\": {\n                    \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n                },\n                \"dwccSpec\": {\n                    \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n                },\n                \"viewRequest\": {\n                    \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n                },\n                \"databaseMetadataSpec\": {\n                    \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n                },\n                \"dataTables\": {\n                    \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n                },\n                \"tableSpec\": {\n                    \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n                },\n                \"expandArchive\": {\n                    \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n                }\n            },\n            \"description\": \"sed\",\n            \"labels\": [\n                \"Duis amet do Ut\",\n                \"cillum\"\n            ]\n        },\n        {\n            \"name\": \"cAi[d}!{uSS\",\n            \"source\": {\n                \"url\": {\n                    \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n                },\n                \"method\": {\n                    \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n                },\n                \"requestHeaders\": {\n                    \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n                },\n                \"requestEntity\": {\n                    \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n                },\n                \"oauthToken\": {\n                    \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n                },\n                \"credentials\": {\n                    \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n                },\n                \"authorization\": {\n                    \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n                },\n                \"databaseSource\": {\n                    \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n                },\n                \"dwccSpec\": {\n                    \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n                },\n                \"viewRequest\": {\n                    \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n                },\n                \"databaseMetadataSpec\": {\n                    \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n                },\n                \"dataTables\": {\n                    \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n                },\n                \"tableSpec\": {\n                    \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n                },\n                \"expandArchive\": {\n                    \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n                }\n            },\n            \"description\": \"proident qui adipisicing in voluptate\",\n            \"labels\": [\n                \"culpa id\",\n                \"ea Excepteur sit elit\"\n            ]\n        }\n    ]\n}"
												},
												"url": {
													"raw": "{{baseUrl}}/datasets/:owner/:id/tables",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"datasets",
														":owner",
														":id",
														"tables"
													],
													"variable": [
														{
															"key": "owner"
														},
														{
															"key": "id"
														}
													]
												}
											},
											"status": "OK",
											"code": 200,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"body": "{\n \"message\": \"voluptate culpa nulla esse\"\n}"
										},
										{
											"name": "Bad request",
											"originalRequest": {
												"method": "POST",
												"header": [
													{
														"description": "Added as a part of security scheme: oauth2",
														"key": "Authorization",
														"value": "<token>"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\n    \"tables\": [\n        {\n            \"name\": \"63B~{bl$\",\n            \"source\": {\n                \"url\": {\n                    \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n                },\n                \"method\": {\n                    \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n                },\n                \"requestHeaders\": {\n                    \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n                },\n                \"requestEntity\": {\n                    \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n                },\n                \"oauthToken\": {\n                    \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n                },\n                \"credentials\": {\n                    \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n                },\n                \"authorization\": {\n                    \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n                },\n                \"databaseSource\": {\n                    \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n                },\n                \"dwccSpec\": {\n                    \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n                },\n                \"viewRequest\": {\n                    \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n                },\n                \"databaseMetadataSpec\": {\n                    \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n                },\n                \"dataTables\": {\n                    \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n                },\n                \"tableSpec\": {\n                    \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n                },\n                \"expandArchive\": {\n                    \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n                }\n            },\n            \"description\": \"sed\",\n            \"labels\": [\n                \"Duis amet do Ut\",\n                \"cillum\"\n            ]\n        },\n        {\n            \"name\": \"cAi[d}!{uSS\",\n            \"source\": {\n                \"url\": {\n                    \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n                },\n                \"method\": {\n                    \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n                },\n                \"requestHeaders\": {\n                    \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n                },\n                \"requestEntity\": {\n                    \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n                },\n                \"oauthToken\": {\n                    \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n                },\n                \"credentials\": {\n                    \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n                },\n                \"authorization\": {\n                    \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n                },\n                \"databaseSource\": {\n                    \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n                },\n                \"dwccSpec\": {\n                    \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n                },\n                \"viewRequest\": {\n                    \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n                },\n                \"databaseMetadataSpec\": {\n                    \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n                },\n                \"dataTables\": {\n                    \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n                },\n                \"tableSpec\": {\n                    \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n                },\n                \"expandArchive\": {\n                    \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n                }\n            },\n            \"description\": \"proident qui adipisicing in voluptate\",\n            \"labels\": [\n                \"culpa id\",\n                \"ea Excepteur sit elit\"\n            ]\n        }\n    ]\n}"
												},
												"url": {
													"raw": "{{baseUrl}}/datasets/:owner/:id/tables",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"datasets",
														":owner",
														":id",
														"tables"
													],
													"variable": [
														{
															"key": "owner"
														},
														{
															"key": "id"
														}
													]
												}
											},
											"status": "Bad Request",
											"code": 400,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"body": "{\n \"code\": 1519430,\n \"message\": \"enim\",\n \"details\": \"do\"\n}"
										},
										{
											"name": "Unauthorized",
											"originalRequest": {
												"method": "POST",
												"header": [
													{
														"description": "Added as a part of security scheme: oauth2",
														"key": "Authorization",
														"value": "<token>"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\n    \"tables\": [\n        {\n            \"name\": \"63B~{bl$\",\n            \"source\": {\n                \"url\": {\n                    \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n                },\n                \"method\": {\n                    \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n                },\n                \"requestHeaders\": {\n                    \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n                },\n                \"requestEntity\": {\n                    \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n                },\n                \"oauthToken\": {\n                    \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n                },\n                \"credentials\": {\n                    \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n                },\n                \"authorization\": {\n                    \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n                },\n                \"databaseSource\": {\n                    \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n                },\n                \"dwccSpec\": {\n                    \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n                },\n                \"viewRequest\": {\n                    \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n                },\n                \"databaseMetadataSpec\": {\n                    \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n                },\n                \"dataTables\": {\n                    \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n                },\n                \"tableSpec\": {\n                    \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n                },\n                \"expandArchive\": {\n                    \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n                }\n            },\n            \"description\": \"sed\",\n            \"labels\": [\n                \"Duis amet do Ut\",\n                \"cillum\"\n            ]\n        },\n        {\n            \"name\": \"cAi[d}!{uSS\",\n            \"source\": {\n                \"url\": {\n                    \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n                },\n                \"method\": {\n                    \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n                },\n                \"requestHeaders\": {\n                    \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n                },\n                \"requestEntity\": {\n                    \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n                },\n                \"oauthToken\": {\n                    \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n                },\n                \"credentials\": {\n                    \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n                },\n                \"authorization\": {\n                    \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n                },\n                \"databaseSource\": {\n                    \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n                },\n                \"dwccSpec\": {\n                    \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n                },\n                \"viewRequest\": {\n                    \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n                },\n                \"databaseMetadataSpec\": {\n                    \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n                },\n                \"dataTables\": {\n                    \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n                },\n                \"tableSpec\": {\n                    \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n                },\n                \"expandArchive\": {\n                    \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n                }\n            },\n            \"description\": \"proident qui adipisicing in voluptate\",\n            \"labels\": [\n                \"culpa id\",\n                \"ea Excepteur sit elit\"\n            ]\n        }\n    ]\n}"
												},
												"url": {
													"raw": "{{baseUrl}}/datasets/:owner/:id/tables",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"datasets",
														":owner",
														":id",
														"tables"
													],
													"variable": [
														{
															"key": "owner"
														},
														{
															"key": "id"
														}
													]
												}
											},
											"status": "Unauthorized",
											"code": 401,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"body": "{\n \"code\": 1519430,\n \"message\": \"enim\",\n \"details\": \"do\"\n}"
										},
										{
											"name": "Forbidden",
											"originalRequest": {
												"method": "POST",
												"header": [
													{
														"description": "Added as a part of security scheme: oauth2",
														"key": "Authorization",
														"value": "<token>"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\n    \"tables\": [\n        {\n            \"name\": \"63B~{bl$\",\n            \"source\": {\n                \"url\": {\n                    \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n                },\n                \"method\": {\n                    \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n                },\n                \"requestHeaders\": {\n                    \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n                },\n                \"requestEntity\": {\n                    \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n                },\n                \"oauthToken\": {\n                    \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n                },\n                \"credentials\": {\n                    \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n                },\n                \"authorization\": {\n                    \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n                },\n                \"databaseSource\": {\n                    \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n                },\n                \"dwccSpec\": {\n                    \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n                },\n                \"viewRequest\": {\n                    \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n                },\n                \"databaseMetadataSpec\": {\n                    \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n                },\n                \"dataTables\": {\n                    \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n                },\n                \"tableSpec\": {\n                    \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n                },\n                \"expandArchive\": {\n                    \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n                }\n            },\n            \"description\": \"sed\",\n            \"labels\": [\n                \"Duis amet do Ut\",\n                \"cillum\"\n            ]\n        },\n        {\n            \"name\": \"cAi[d}!{uSS\",\n            \"source\": {\n                \"url\": {\n                    \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n                },\n                \"method\": {\n                    \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n                },\n                \"requestHeaders\": {\n                    \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n                },\n                \"requestEntity\": {\n                    \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n                },\n                \"oauthToken\": {\n                    \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n                },\n                \"credentials\": {\n                    \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n                },\n                \"authorization\": {\n                    \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n                },\n                \"databaseSource\": {\n                    \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n                },\n                \"dwccSpec\": {\n                    \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n                },\n                \"viewRequest\": {\n                    \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n                },\n                \"databaseMetadataSpec\": {\n                    \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n                },\n                \"dataTables\": {\n                    \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n                },\n                \"tableSpec\": {\n                    \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n                },\n                \"expandArchive\": {\n                    \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n                }\n            },\n            \"description\": \"proident qui adipisicing in voluptate\",\n            \"labels\": [\n                \"culpa id\",\n                \"ea Excepteur sit elit\"\n            ]\n        }\n    ]\n}"
												},
												"url": {
													"raw": "{{baseUrl}}/datasets/:owner/:id/tables",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"datasets",
														":owner",
														":id",
														"tables"
													],
													"variable": [
														{
															"key": "owner"
														},
														{
															"key": "id"
														}
													]
												}
											},
											"status": "Forbidden",
											"code": 403,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"body": "{\n \"code\": 1519430,\n \"message\": \"enim\",\n \"details\": \"do\"\n}"
										},
										{
											"name": "Not found",
											"originalRequest": {
												"method": "POST",
												"header": [
													{
														"description": "Added as a part of security scheme: oauth2",
														"key": "Authorization",
														"value": "<token>"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\n    \"tables\": [\n        {\n            \"name\": \"63B~{bl$\",\n            \"source\": {\n                \"url\": {\n                    \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n                },\n                \"method\": {\n                    \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n                },\n                \"requestHeaders\": {\n                    \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n                },\n                \"requestEntity\": {\n                    \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n                },\n                \"oauthToken\": {\n                    \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n                },\n                \"credentials\": {\n                    \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n                },\n                \"authorization\": {\n                    \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n                },\n                \"databaseSource\": {\n                    \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n                },\n                \"dwccSpec\": {\n                    \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n                },\n                \"viewRequest\": {\n                    \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n                },\n                \"databaseMetadataSpec\": {\n                    \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n                },\n                \"dataTables\": {\n                    \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n                },\n                \"tableSpec\": {\n                    \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n                },\n                \"expandArchive\": {\n                    \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n                }\n            },\n            \"description\": \"sed\",\n            \"labels\": [\n                \"Duis amet do Ut\",\n                \"cillum\"\n            ]\n        },\n        {\n            \"name\": \"cAi[d}!{uSS\",\n            \"source\": {\n                \"url\": {\n                    \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n                },\n                \"method\": {\n                    \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n                },\n                \"requestHeaders\": {\n                    \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n                },\n                \"requestEntity\": {\n                    \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n                },\n                \"oauthToken\": {\n                    \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n                },\n                \"credentials\": {\n                    \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n                },\n                \"authorization\": {\n                    \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n                },\n                \"databaseSource\": {\n                    \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n                },\n                \"dwccSpec\": {\n                    \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n                },\n                \"viewRequest\": {\n                    \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n                },\n                \"databaseMetadataSpec\": {\n                    \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n                },\n                \"dataTables\": {\n                    \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n                },\n                \"tableSpec\": {\n                    \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n                },\n                \"expandArchive\": {\n                    \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n                }\n            },\n            \"description\": \"proident qui adipisicing in voluptate\",\n            \"labels\": [\n                \"culpa id\",\n                \"ea Excepteur sit elit\"\n            ]\n        }\n    ]\n}"
												},
												"url": {
													"raw": "{{baseUrl}}/datasets/:owner/:id/tables",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"datasets",
														":owner",
														":id",
														"tables"
													],
													"variable": [
														{
															"key": "owner"
														},
														{
															"key": "id"
														}
													]
												}
											},
											"status": "Not Found",
											"code": 404,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"body": "{\n \"code\": 1519430,\n \"message\": \"enim\",\n \"details\": \"do\"\n}"
										},
										{
											"name": "Bad request",
											"originalRequest": {
												"method": "POST",
												"header": [
													{
														"description": "Added as a part of security scheme: oauth2",
														"key": "Authorization",
														"value": "<token>"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\n    \"tables\": [\n        {\n            \"name\": \"63B~{bl$\",\n            \"source\": {\n                \"url\": {\n                    \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n                },\n                \"method\": {\n                    \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n                },\n                \"requestHeaders\": {\n                    \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n                },\n                \"requestEntity\": {\n                    \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n                },\n                \"oauthToken\": {\n                    \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n                },\n                \"credentials\": {\n                    \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n                },\n                \"authorization\": {\n                    \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n                },\n                \"databaseSource\": {\n                    \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n                },\n                \"dwccSpec\": {\n                    \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n                },\n                \"viewRequest\": {\n                    \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n                },\n                \"databaseMetadataSpec\": {\n                    \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n                },\n                \"dataTables\": {\n                    \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n                },\n                \"tableSpec\": {\n                    \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n                },\n                \"expandArchive\": {\n                    \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n                }\n            },\n            \"description\": \"sed\",\n            \"labels\": [\n                \"Duis amet do Ut\",\n                \"cillum\"\n            ]\n        },\n        {\n            \"name\": \"cAi[d}!{uSS\",\n            \"source\": {\n                \"url\": {\n                    \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n                },\n                \"method\": {\n                    \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n                },\n                \"requestHeaders\": {\n                    \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n                },\n                \"requestEntity\": {\n                    \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n                },\n                \"oauthToken\": {\n                    \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n                },\n                \"credentials\": {\n                    \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n                },\n                \"authorization\": {\n                    \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n                },\n                \"databaseSource\": {\n                    \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n                },\n                \"dwccSpec\": {\n                    \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n                },\n                \"viewRequest\": {\n                    \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n                },\n                \"databaseMetadataSpec\": {\n                    \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n                },\n                \"dataTables\": {\n                    \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n                },\n                \"tableSpec\": {\n                    \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n                },\n                \"expandArchive\": {\n                    \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n                }\n            },\n            \"description\": \"proident qui adipisicing in voluptate\",\n            \"labels\": [\n                \"culpa id\",\n                \"ea Excepteur sit elit\"\n            ]\n        }\n    ]\n}"
												},
												"url": {
													"raw": "{{baseUrl}}/datasets/:owner/:id/tables",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"datasets",
														":owner",
														":id",
														"tables"
													],
													"variable": [
														{
															"key": "owner"
														},
														{
															"key": "id"
														}
													]
												}
											},
											"status": "Unprocessable Entity (WebDAV) (RFC 4918)",
											"code": 422,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"body": "{\n \"code\": 1519430,\n \"message\": \"enim\",\n \"details\": \"do\"\n}"
										},
										{
											"name": "Server error",
											"originalRequest": {
												"method": "POST",
												"header": [
													{
														"description": "Added as a part of security scheme: oauth2",
														"key": "Authorization",
														"value": "<token>"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\n    \"tables\": [\n        {\n            \"name\": \"63B~{bl$\",\n            \"source\": {\n                \"url\": {\n                    \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n                },\n                \"method\": {\n                    \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n                },\n                \"requestHeaders\": {\n                    \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n                },\n                \"requestEntity\": {\n                    \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n                },\n                \"oauthToken\": {\n                    \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n                },\n                \"credentials\": {\n                    \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n                },\n                \"authorization\": {\n                    \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n                },\n                \"databaseSource\": {\n                    \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n                },\n                \"dwccSpec\": {\n                    \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n                },\n                \"viewRequest\": {\n                    \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n                },\n                \"databaseMetadataSpec\": {\n                    \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n                },\n                \"dataTables\": {\n                    \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n                },\n                \"tableSpec\": {\n                    \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n                },\n                \"expandArchive\": {\n                    \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n                }\n            },\n            \"description\": \"sed\",\n            \"labels\": [\n                \"Duis amet do Ut\",\n                \"cillum\"\n            ]\n        },\n        {\n            \"name\": \"cAi[d}!{uSS\",\n            \"source\": {\n                \"url\": {\n                    \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n                },\n                \"method\": {\n                    \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n                },\n                \"requestHeaders\": {\n                    \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n                },\n                \"requestEntity\": {\n                    \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n                },\n                \"oauthToken\": {\n                    \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n                },\n                \"credentials\": {\n                    \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n                },\n                \"authorization\": {\n                    \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n                },\n                \"databaseSource\": {\n                    \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n                },\n                \"dwccSpec\": {\n                    \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n                },\n                \"viewRequest\": {\n                    \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n                },\n                \"databaseMetadataSpec\": {\n                    \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n                },\n                \"dataTables\": {\n                    \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n                },\n                \"tableSpec\": {\n                    \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n                },\n                \"expandArchive\": {\n                    \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n                }\n            },\n            \"description\": \"proident qui adipisicing in voluptate\",\n            \"labels\": [\n                \"culpa id\",\n                \"ea Excepteur sit elit\"\n            ]\n        }\n    ]\n}"
												},
												"url": {
													"raw": "{{baseUrl}}/datasets/:owner/:id/tables",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"datasets",
														":owner",
														":id",
														"tables"
													],
													"variable": [
														{
															"key": "owner"
														},
														{
															"key": "id"
														}
													]
												}
											},
											"status": "Internal Server Error",
											"code": 500,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"body": "{\n \"code\": 1519430,\n \"message\": \"enim\",\n \"details\": \"do\"\n}"
										}
									]
								}
							]
						},
						{
							"name": "Gets datasets by owner.",
							"request": {
								"auth": {
									"type": "bearer",
									"bearer": [
										{
											"key": "token",
											"value": "{{readWrite}}",
											"type": "string"
										}
									]
								},
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{baseUrl}}/datasets/:owner",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"datasets",
										":owner"
									],
									"query": [
										{
											"key": "fields",
											"value": "adipisicing elit ullamco",
											"disabled": true
										},
										{
											"key": "limit",
											"value": "adipisicing elit ullamco",
											"disabled": true
										},
										{
											"key": "next",
											"value": "adipisicing elit ullamco",
											"disabled": true
										}
									],
									"variable": [
										{
											"key": "owner",
											"value": "{{owner}}",
											"description": "(Required) "
										}
									]
								}
							},
							"response": [
								{
									"name": "Successfully retrieved dataset",
									"originalRequest": {
										"method": "GET",
										"header": [
											{
												"description": "Added as a part of security scheme: oauth2",
												"key": "Authorization",
												"value": "<token>"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/datasets/:owner?fields=adipisicing elit ullamco&limit=adipisicing elit ullamco&next=adipisicing elit ullamco",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"datasets",
												":owner"
											],
											"query": [
												{
													"key": "fields",
													"value": "adipisicing elit ullamco"
												},
												{
													"key": "limit",
													"value": "adipisicing elit ullamco"
												},
												{
													"key": "next",
													"value": "adipisicing elit ullamco"
												}
											],
											"variable": [
												{
													"key": "owner"
												}
											]
										}
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n \"count\": 42361237,\n \"records\": [\n  {\n   \"accessLevel\": \"NONE\",\n   \"created\": \"in labore esse\",\n   \"id\": \"incididunt ipsum\",\n   \"isProject\": false,\n   \"owner\": \"Excepteur enim culpa\",\n   \"status\": \"INPROGRESS\",\n   \"title\": \"adipisicing ipsum\",\n   \"updated\": \"dolor cillum\",\n   \"version\": \"sit Ut consequat deserunt\",\n   \"visibility\": \"OPEN\",\n   \"description\": \"veniam voluptate enim magna\",\n   \"summary\": \"reprehenderit tempor\",\n   \"tags\": [\n    \"est do Ut enim\",\n    \"aute est sit dolor\"\n   ],\n   \"dois\": [\n    {\n     \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    {\n     \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    }\n   ],\n   \"license\": \"CC-0\",\n   \"files\": [\n    {\n     \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    {\n     \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    }\n   ],\n   \"properties\": {},\n   \"assetStatus\": {\n    \"assetStatusLabel\": {\n     \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    \"dispositionLabel\": {\n     \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    }\n   },\n   \"versionDois\": [\n    {\n     \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    {\n     \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    }\n   ]\n  },\n  {\n   \"accessLevel\": \"WRITE\",\n   \"created\": \"velit \",\n   \"id\": \"mollit cillum qui quis\",\n   \"isProject\": false,\n   \"owner\": \"dolor\",\n   \"status\": \"INPROGRESS\",\n   \"title\": \"mollit voluptate consectetur\",\n   \"updated\": \"dolor sint\",\n   \"version\": \"ad ea quis\",\n   \"visibility\": \"PRIVATE\",\n   \"description\": \"dolore\",\n   \"summary\": \"aute exercitation do laborum\",\n   \"tags\": [\n    \"aliqua tempor dolore\",\n    \"ad sit\"\n   ],\n   \"dois\": [\n    {\n     \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    {\n     \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    }\n   ],\n   \"license\": \"OGL-Canada\",\n   \"files\": [\n    {\n     \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    {\n     \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    }\n   ],\n   \"properties\": {},\n   \"assetStatus\": {\n    \"assetStatusLabel\": {\n     \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    \"dispositionLabel\": {\n     \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    }\n   },\n   \"versionDois\": [\n    {\n     \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    {\n     \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    }\n   ]\n  }\n ],\n \"nextPageToken\": \"eu ipsum\"\n}"
								},
								{
									"name": "Bad request",
									"originalRequest": {
										"method": "GET",
										"header": [
											{
												"description": "Added as a part of security scheme: oauth2",
												"key": "Authorization",
												"value": "<token>"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/datasets/:owner?fields=adipisicing elit ullamco&limit=adipisicing elit ullamco&next=adipisicing elit ullamco",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"datasets",
												":owner"
											],
											"query": [
												{
													"key": "fields",
													"value": "adipisicing elit ullamco"
												},
												{
													"key": "limit",
													"value": "adipisicing elit ullamco"
												},
												{
													"key": "next",
													"value": "adipisicing elit ullamco"
												}
											],
											"variable": [
												{
													"key": "owner"
												}
											]
										}
									},
									"status": "Bad Request",
									"code": 400,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n \"code\": 1519430,\n \"message\": \"enim\",\n \"details\": \"do\"\n}"
								},
								{
									"name": "Unauthorized",
									"originalRequest": {
										"method": "GET",
										"header": [
											{
												"description": "Added as a part of security scheme: oauth2",
												"key": "Authorization",
												"value": "<token>"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/datasets/:owner?fields=adipisicing elit ullamco&limit=adipisicing elit ullamco&next=adipisicing elit ullamco",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"datasets",
												":owner"
											],
											"query": [
												{
													"key": "fields",
													"value": "adipisicing elit ullamco"
												},
												{
													"key": "limit",
													"value": "adipisicing elit ullamco"
												},
												{
													"key": "next",
													"value": "adipisicing elit ullamco"
												}
											],
											"variable": [
												{
													"key": "owner"
												}
											]
										}
									},
									"status": "Unauthorized",
									"code": 401,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n \"code\": 1519430,\n \"message\": \"enim\",\n \"details\": \"do\"\n}"
								},
								{
									"name": "Forbidden",
									"originalRequest": {
										"method": "GET",
										"header": [
											{
												"description": "Added as a part of security scheme: oauth2",
												"key": "Authorization",
												"value": "<token>"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/datasets/:owner?fields=adipisicing elit ullamco&limit=adipisicing elit ullamco&next=adipisicing elit ullamco",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"datasets",
												":owner"
											],
											"query": [
												{
													"key": "fields",
													"value": "adipisicing elit ullamco"
												},
												{
													"key": "limit",
													"value": "adipisicing elit ullamco"
												},
												{
													"key": "next",
													"value": "adipisicing elit ullamco"
												}
											],
											"variable": [
												{
													"key": "owner"
												}
											]
										}
									},
									"status": "Forbidden",
									"code": 403,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n \"code\": 1519430,\n \"message\": \"enim\",\n \"details\": \"do\"\n}"
								},
								{
									"name": "Not found",
									"originalRequest": {
										"method": "GET",
										"header": [
											{
												"description": "Added as a part of security scheme: oauth2",
												"key": "Authorization",
												"value": "<token>"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/datasets/:owner?fields=adipisicing elit ullamco&limit=adipisicing elit ullamco&next=adipisicing elit ullamco",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"datasets",
												":owner"
											],
											"query": [
												{
													"key": "fields",
													"value": "adipisicing elit ullamco"
												},
												{
													"key": "limit",
													"value": "adipisicing elit ullamco"
												},
												{
													"key": "next",
													"value": "adipisicing elit ullamco"
												}
											],
											"variable": [
												{
													"key": "owner"
												}
											]
										}
									},
									"status": "Not Found",
									"code": 404,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n \"code\": 1519430,\n \"message\": \"enim\",\n \"details\": \"do\"\n}"
								},
								{
									"name": "Server error",
									"originalRequest": {
										"method": "GET",
										"header": [
											{
												"description": "Added as a part of security scheme: oauth2",
												"key": "Authorization",
												"value": "<token>"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/datasets/:owner?fields=adipisicing elit ullamco&limit=adipisicing elit ullamco&next=adipisicing elit ullamco",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"datasets",
												":owner"
											],
											"query": [
												{
													"key": "fields",
													"value": "adipisicing elit ullamco"
												},
												{
													"key": "limit",
													"value": "adipisicing elit ullamco"
												},
												{
													"key": "next",
													"value": "adipisicing elit ullamco"
												}
											],
											"variable": [
												{
													"key": "owner"
												}
											]
										}
									},
									"status": "Internal Server Error",
									"code": 500,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n \"code\": 1519430,\n \"message\": \"enim\",\n \"details\": \"do\"\n}"
								}
							]
						},
						{
							"name": "Create a new dataset.",
							"request": {
								"auth": {
									"type": "bearer",
									"bearer": [
										{
											"key": "token",
											"value": "{{readWrite}}",
											"type": "string"
										}
									]
								},
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"title\": \"one dataset\",\n    \"visibility\": \"OPEN\",\n    \"description\": \"50 rows\",\n    \"summary\": \"I have 50 rows\",\n    \"tags\": [\n        \"report\",\n        \"testing\"\n    ],\n    \"license\": \"OSODL\",\n    \"files\":[\n        {\n            \"name\": \"50 rows\",\n            \"description\": \"made the fix\",\n            \"labels\": [\"raw data\"],\n            \"source\": {\n                \"url\": \"https://file-examples-com.github.io/uploads/2017/02/file_example_XLS_50.xls\",\n                \"method\": \"GET\"\n            }\n        }\n    ],\n    \"autoSyncInterval\": \"DAILY\"\n}"
								},
								"url": {
									"raw": "{{baseUrl}}/datasets/:owner",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"datasets",
										":owner"
									],
									"variable": [
										{
											"key": "owner",
											"value": "{{org}}",
											"description": "(Required) "
										}
									]
								}
							},
							"response": [
								{
									"name": "Dataset created successfully.",
									"originalRequest": {
										"method": "POST",
										"header": [
											{
												"description": "Added as a part of security scheme: oauth2",
												"key": "Authorization",
												"value": "<token>"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n    \"title\": \"Excepteur ullamco\",\n    \"visibility\": \"PRIVATE\",\n    \"description\": \"commodo ex\",\n    \"summary\": \"adipisicing nisi nulla\",\n    \"tags\": [\n        \"irure \",\n        \"dolor tempor deserunt\"\n    ],\n    \"license\": \"CC-BY 3.0 IGO\",\n    \"files\": [\n        {\n            \"name\": \"RtN|fN\",\n            \"source\": {\n                \"url\": {\n                    \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n                },\n                \"method\": {\n                    \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n                },\n                \"requestHeaders\": {\n                    \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n                },\n                \"requestEntity\": {\n                    \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n                },\n                \"oauthToken\": {\n                    \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n                },\n                \"credentials\": {\n                    \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n                },\n                \"authorization\": {\n                    \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n                },\n                \"databaseSource\": {\n                    \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n                },\n                \"dwccSpec\": {\n                    \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n                },\n                \"viewRequest\": {\n                    \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n                },\n                \"databaseMetadataSpec\": {\n                    \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n                },\n                \"dataTables\": {\n                    \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n                },\n                \"tableSpec\": {\n                    \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n                },\n                \"expandArchive\": {\n                    \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n                }\n            },\n            \"description\": \"commodo cillum\",\n            \"labels\": [\n                \"labore est\",\n                \"cillum conseq\"\n            ]\n        },\n        {\n            \"name\": \"K\",\n            \"source\": {\n                \"url\": {\n                    \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n                },\n                \"method\": {\n                    \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n                },\n                \"requestHeaders\": {\n                    \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n                },\n                \"requestEntity\": {\n                    \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n                },\n                \"oauthToken\": {\n                    \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n                },\n                \"credentials\": {\n                    \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n                },\n                \"authorization\": {\n                    \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n                },\n                \"databaseSource\": {\n                    \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n                },\n                \"dwccSpec\": {\n                    \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n                },\n                \"viewRequest\": {\n                    \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n                },\n                \"databaseMetadataSpec\": {\n                    \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n                },\n                \"dataTables\": {\n                    \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n                },\n                \"tableSpec\": {\n                    \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n                },\n                \"expandArchive\": {\n                    \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n                }\n            },\n            \"description\": \"tempor in\",\n            \"labels\": [\n                \"ullamco in sint laboris\",\n                \"eu dolor\"\n            ]\n        }\n    ],\n    \"assetStatusIri\": \"amet aliqua\",\n    \"properties\": {},\n    \"autoSyncInterval\": \"NEVER\"\n}"
										},
										"url": {
											"raw": "{{baseUrl}}/datasets/:owner",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"datasets",
												":owner"
											],
											"variable": [
												{
													"key": "owner"
												}
											]
										}
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n \"uri\": \"http://A.sfQ-gVx.2oEMnKdGnZwvPKe1go1ZBeMhzDIKRr\",\n \"message\": \"nisi nulla quis veniam\"\n}"
								},
								{
									"name": "Bad request",
									"originalRequest": {
										"method": "POST",
										"header": [
											{
												"description": "Added as a part of security scheme: oauth2",
												"key": "Authorization",
												"value": "<token>"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n    \"title\": \"Excepteur ullamco\",\n    \"visibility\": \"PRIVATE\",\n    \"description\": \"commodo ex\",\n    \"summary\": \"adipisicing nisi nulla\",\n    \"tags\": [\n        \"irure \",\n        \"dolor tempor deserunt\"\n    ],\n    \"license\": \"CC-BY 3.0 IGO\",\n    \"files\": [\n        {\n            \"name\": \"RtN|fN\",\n            \"source\": {\n                \"url\": {\n                    \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n                },\n                \"method\": {\n                    \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n                },\n                \"requestHeaders\": {\n                    \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n                },\n                \"requestEntity\": {\n                    \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n                },\n                \"oauthToken\": {\n                    \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n                },\n                \"credentials\": {\n                    \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n                },\n                \"authorization\": {\n                    \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n                },\n                \"databaseSource\": {\n                    \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n                },\n                \"dwccSpec\": {\n                    \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n                },\n                \"viewRequest\": {\n                    \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n                },\n                \"databaseMetadataSpec\": {\n                    \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n                },\n                \"dataTables\": {\n                    \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n                },\n                \"tableSpec\": {\n                    \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n                },\n                \"expandArchive\": {\n                    \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n                }\n            },\n            \"description\": \"commodo cillum\",\n            \"labels\": [\n                \"labore est\",\n                \"cillum conseq\"\n            ]\n        },\n        {\n            \"name\": \"K\",\n            \"source\": {\n                \"url\": {\n                    \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n                },\n                \"method\": {\n                    \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n                },\n                \"requestHeaders\": {\n                    \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n                },\n                \"requestEntity\": {\n                    \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n                },\n                \"oauthToken\": {\n                    \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n                },\n                \"credentials\": {\n                    \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n                },\n                \"authorization\": {\n                    \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n                },\n                \"databaseSource\": {\n                    \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n                },\n                \"dwccSpec\": {\n                    \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n                },\n                \"viewRequest\": {\n                    \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n                },\n                \"databaseMetadataSpec\": {\n                    \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n                },\n                \"dataTables\": {\n                    \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n                },\n                \"tableSpec\": {\n                    \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n                },\n                \"expandArchive\": {\n                    \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n                }\n            },\n            \"description\": \"tempor in\",\n            \"labels\": [\n                \"ullamco in sint laboris\",\n                \"eu dolor\"\n            ]\n        }\n    ],\n    \"assetStatusIri\": \"amet aliqua\",\n    \"properties\": {},\n    \"autoSyncInterval\": \"NEVER\"\n}"
										},
										"url": {
											"raw": "{{baseUrl}}/datasets/:owner",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"datasets",
												":owner"
											],
											"variable": [
												{
													"key": "owner"
												}
											]
										}
									},
									"status": "Bad Request",
									"code": 400,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n \"code\": 1519430,\n \"message\": \"enim\",\n \"details\": \"do\"\n}"
								},
								{
									"name": "Unauthorized",
									"originalRequest": {
										"method": "POST",
										"header": [
											{
												"description": "Added as a part of security scheme: oauth2",
												"key": "Authorization",
												"value": "<token>"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n    \"title\": \"Excepteur ullamco\",\n    \"visibility\": \"PRIVATE\",\n    \"description\": \"commodo ex\",\n    \"summary\": \"adipisicing nisi nulla\",\n    \"tags\": [\n        \"irure \",\n        \"dolor tempor deserunt\"\n    ],\n    \"license\": \"CC-BY 3.0 IGO\",\n    \"files\": [\n        {\n            \"name\": \"RtN|fN\",\n            \"source\": {\n                \"url\": {\n                    \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n                },\n                \"method\": {\n                    \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n                },\n                \"requestHeaders\": {\n                    \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n                },\n                \"requestEntity\": {\n                    \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n                },\n                \"oauthToken\": {\n                    \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n                },\n                \"credentials\": {\n                    \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n                },\n                \"authorization\": {\n                    \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n                },\n                \"databaseSource\": {\n                    \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n                },\n                \"dwccSpec\": {\n                    \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n                },\n                \"viewRequest\": {\n                    \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n                },\n                \"databaseMetadataSpec\": {\n                    \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n                },\n                \"dataTables\": {\n                    \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n                },\n                \"tableSpec\": {\n                    \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n                },\n                \"expandArchive\": {\n                    \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n                }\n            },\n            \"description\": \"commodo cillum\",\n            \"labels\": [\n                \"labore est\",\n                \"cillum conseq\"\n            ]\n        },\n        {\n            \"name\": \"K\",\n            \"source\": {\n                \"url\": {\n                    \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n                },\n                \"method\": {\n                    \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n                },\n                \"requestHeaders\": {\n                    \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n                },\n                \"requestEntity\": {\n                    \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n                },\n                \"oauthToken\": {\n                    \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n                },\n                \"credentials\": {\n                    \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n                },\n                \"authorization\": {\n                    \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n                },\n                \"databaseSource\": {\n                    \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n                },\n                \"dwccSpec\": {\n                    \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n                },\n                \"viewRequest\": {\n                    \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n                },\n                \"databaseMetadataSpec\": {\n                    \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n                },\n                \"dataTables\": {\n                    \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n                },\n                \"tableSpec\": {\n                    \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n                },\n                \"expandArchive\": {\n                    \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n                }\n            },\n            \"description\": \"tempor in\",\n            \"labels\": [\n                \"ullamco in sint laboris\",\n                \"eu dolor\"\n            ]\n        }\n    ],\n    \"assetStatusIri\": \"amet aliqua\",\n    \"properties\": {},\n    \"autoSyncInterval\": \"NEVER\"\n}"
										},
										"url": {
											"raw": "{{baseUrl}}/datasets/:owner",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"datasets",
												":owner"
											],
											"variable": [
												{
													"key": "owner"
												}
											]
										}
									},
									"status": "Unauthorized",
									"code": 401,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n \"code\": 1519430,\n \"message\": \"enim\",\n \"details\": \"do\"\n}"
								},
								{
									"name": "Forbidden",
									"originalRequest": {
										"method": "POST",
										"header": [
											{
												"description": "Added as a part of security scheme: oauth2",
												"key": "Authorization",
												"value": "<token>"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n    \"title\": \"Excepteur ullamco\",\n    \"visibility\": \"PRIVATE\",\n    \"description\": \"commodo ex\",\n    \"summary\": \"adipisicing nisi nulla\",\n    \"tags\": [\n        \"irure \",\n        \"dolor tempor deserunt\"\n    ],\n    \"license\": \"CC-BY 3.0 IGO\",\n    \"files\": [\n        {\n            \"name\": \"RtN|fN\",\n            \"source\": {\n                \"url\": {\n                    \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n                },\n                \"method\": {\n                    \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n                },\n                \"requestHeaders\": {\n                    \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n                },\n                \"requestEntity\": {\n                    \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n                },\n                \"oauthToken\": {\n                    \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n                },\n                \"credentials\": {\n                    \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n                },\n                \"authorization\": {\n                    \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n                },\n                \"databaseSource\": {\n                    \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n                },\n                \"dwccSpec\": {\n                    \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n                },\n                \"viewRequest\": {\n                    \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n                },\n                \"databaseMetadataSpec\": {\n                    \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n                },\n                \"dataTables\": {\n                    \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n                },\n                \"tableSpec\": {\n                    \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n                },\n                \"expandArchive\": {\n                    \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n                }\n            },\n            \"description\": \"commodo cillum\",\n            \"labels\": [\n                \"labore est\",\n                \"cillum conseq\"\n            ]\n        },\n        {\n            \"name\": \"K\",\n            \"source\": {\n                \"url\": {\n                    \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n                },\n                \"method\": {\n                    \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n                },\n                \"requestHeaders\": {\n                    \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n                },\n                \"requestEntity\": {\n                    \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n                },\n                \"oauthToken\": {\n                    \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n                },\n                \"credentials\": {\n                    \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n                },\n                \"authorization\": {\n                    \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n                },\n                \"databaseSource\": {\n                    \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n                },\n                \"dwccSpec\": {\n                    \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n                },\n                \"viewRequest\": {\n                    \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n                },\n                \"databaseMetadataSpec\": {\n                    \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n                },\n                \"dataTables\": {\n                    \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n                },\n                \"tableSpec\": {\n                    \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n                },\n                \"expandArchive\": {\n                    \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n                }\n            },\n            \"description\": \"tempor in\",\n            \"labels\": [\n                \"ullamco in sint laboris\",\n                \"eu dolor\"\n            ]\n        }\n    ],\n    \"assetStatusIri\": \"amet aliqua\",\n    \"properties\": {},\n    \"autoSyncInterval\": \"NEVER\"\n}"
										},
										"url": {
											"raw": "{{baseUrl}}/datasets/:owner",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"datasets",
												":owner"
											],
											"variable": [
												{
													"key": "owner"
												}
											]
										}
									},
									"status": "Forbidden",
									"code": 403,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n \"code\": 1519430,\n \"message\": \"enim\",\n \"details\": \"do\"\n}"
								},
								{
									"name": "Not found",
									"originalRequest": {
										"method": "POST",
										"header": [
											{
												"description": "Added as a part of security scheme: oauth2",
												"key": "Authorization",
												"value": "<token>"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n    \"title\": \"Excepteur ullamco\",\n    \"visibility\": \"PRIVATE\",\n    \"description\": \"commodo ex\",\n    \"summary\": \"adipisicing nisi nulla\",\n    \"tags\": [\n        \"irure \",\n        \"dolor tempor deserunt\"\n    ],\n    \"license\": \"CC-BY 3.0 IGO\",\n    \"files\": [\n        {\n            \"name\": \"RtN|fN\",\n            \"source\": {\n                \"url\": {\n                    \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n                },\n                \"method\": {\n                    \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n                },\n                \"requestHeaders\": {\n                    \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n                },\n                \"requestEntity\": {\n                    \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n                },\n                \"oauthToken\": {\n                    \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n                },\n                \"credentials\": {\n                    \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n                },\n                \"authorization\": {\n                    \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n                },\n                \"databaseSource\": {\n                    \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n                },\n                \"dwccSpec\": {\n                    \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n                },\n                \"viewRequest\": {\n                    \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n                },\n                \"databaseMetadataSpec\": {\n                    \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n                },\n                \"dataTables\": {\n                    \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n                },\n                \"tableSpec\": {\n                    \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n                },\n                \"expandArchive\": {\n                    \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n                }\n            },\n            \"description\": \"commodo cillum\",\n            \"labels\": [\n                \"labore est\",\n                \"cillum conseq\"\n            ]\n        },\n        {\n            \"name\": \"K\",\n            \"source\": {\n                \"url\": {\n                    \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n                },\n                \"method\": {\n                    \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n                },\n                \"requestHeaders\": {\n                    \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n                },\n                \"requestEntity\": {\n                    \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n                },\n                \"oauthToken\": {\n                    \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n                },\n                \"credentials\": {\n                    \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n                },\n                \"authorization\": {\n                    \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n                },\n                \"databaseSource\": {\n                    \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n                },\n                \"dwccSpec\": {\n                    \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n                },\n                \"viewRequest\": {\n                    \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n                },\n                \"databaseMetadataSpec\": {\n                    \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n                },\n                \"dataTables\": {\n                    \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n                },\n                \"tableSpec\": {\n                    \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n                },\n                \"expandArchive\": {\n                    \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n                }\n            },\n            \"description\": \"tempor in\",\n            \"labels\": [\n                \"ullamco in sint laboris\",\n                \"eu dolor\"\n            ]\n        }\n    ],\n    \"assetStatusIri\": \"amet aliqua\",\n    \"properties\": {},\n    \"autoSyncInterval\": \"NEVER\"\n}"
										},
										"url": {
											"raw": "{{baseUrl}}/datasets/:owner",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"datasets",
												":owner"
											],
											"variable": [
												{
													"key": "owner"
												}
											]
										}
									},
									"status": "Not Found",
									"code": 404,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n \"code\": 1519430,\n \"message\": \"enim\",\n \"details\": \"do\"\n}"
								},
								{
									"name": "Conflict",
									"originalRequest": {
										"method": "POST",
										"header": [
											{
												"description": "Added as a part of security scheme: oauth2",
												"key": "Authorization",
												"value": "<token>"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n    \"title\": \"Excepteur ullamco\",\n    \"visibility\": \"PRIVATE\",\n    \"description\": \"commodo ex\",\n    \"summary\": \"adipisicing nisi nulla\",\n    \"tags\": [\n        \"irure \",\n        \"dolor tempor deserunt\"\n    ],\n    \"license\": \"CC-BY 3.0 IGO\",\n    \"files\": [\n        {\n            \"name\": \"RtN|fN\",\n            \"source\": {\n                \"url\": {\n                    \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n                },\n                \"method\": {\n                    \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n                },\n                \"requestHeaders\": {\n                    \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n                },\n                \"requestEntity\": {\n                    \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n                },\n                \"oauthToken\": {\n                    \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n                },\n                \"credentials\": {\n                    \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n                },\n                \"authorization\": {\n                    \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n                },\n                \"databaseSource\": {\n                    \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n                },\n                \"dwccSpec\": {\n                    \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n                },\n                \"viewRequest\": {\n                    \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n                },\n                \"databaseMetadataSpec\": {\n                    \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n                },\n                \"dataTables\": {\n                    \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n                },\n                \"tableSpec\": {\n                    \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n                },\n                \"expandArchive\": {\n                    \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n                }\n            },\n            \"description\": \"commodo cillum\",\n            \"labels\": [\n                \"labore est\",\n                \"cillum conseq\"\n            ]\n        },\n        {\n            \"name\": \"K\",\n            \"source\": {\n                \"url\": {\n                    \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n                },\n                \"method\": {\n                    \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n                },\n                \"requestHeaders\": {\n                    \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n                },\n                \"requestEntity\": {\n                    \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n                },\n                \"oauthToken\": {\n                    \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n                },\n                \"credentials\": {\n                    \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n                },\n                \"authorization\": {\n                    \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n                },\n                \"databaseSource\": {\n                    \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n                },\n                \"dwccSpec\": {\n                    \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n                },\n                \"viewRequest\": {\n                    \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n                },\n                \"databaseMetadataSpec\": {\n                    \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n                },\n                \"dataTables\": {\n                    \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n                },\n                \"tableSpec\": {\n                    \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n                },\n                \"expandArchive\": {\n                    \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n                }\n            },\n            \"description\": \"tempor in\",\n            \"labels\": [\n                \"ullamco in sint laboris\",\n                \"eu dolor\"\n            ]\n        }\n    ],\n    \"assetStatusIri\": \"amet aliqua\",\n    \"properties\": {},\n    \"autoSyncInterval\": \"NEVER\"\n}"
										},
										"url": {
											"raw": "{{baseUrl}}/datasets/:owner",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"datasets",
												":owner"
											],
											"variable": [
												{
													"key": "owner"
												}
											]
										}
									},
									"status": "Conflict",
									"code": 409,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n \"code\": 1519430,\n \"message\": \"enim\",\n \"details\": \"do\"\n}"
								},
								{
									"name": "Bad request",
									"originalRequest": {
										"method": "POST",
										"header": [
											{
												"description": "Added as a part of security scheme: oauth2",
												"key": "Authorization",
												"value": "<token>"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n    \"title\": \"Excepteur ullamco\",\n    \"visibility\": \"PRIVATE\",\n    \"description\": \"commodo ex\",\n    \"summary\": \"adipisicing nisi nulla\",\n    \"tags\": [\n        \"irure \",\n        \"dolor tempor deserunt\"\n    ],\n    \"license\": \"CC-BY 3.0 IGO\",\n    \"files\": [\n        {\n            \"name\": \"RtN|fN\",\n            \"source\": {\n                \"url\": {\n                    \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n                },\n                \"method\": {\n                    \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n                },\n                \"requestHeaders\": {\n                    \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n                },\n                \"requestEntity\": {\n                    \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n                },\n                \"oauthToken\": {\n                    \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n                },\n                \"credentials\": {\n                    \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n                },\n                \"authorization\": {\n                    \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n                },\n                \"databaseSource\": {\n                    \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n                },\n                \"dwccSpec\": {\n                    \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n                },\n                \"viewRequest\": {\n                    \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n                },\n                \"databaseMetadataSpec\": {\n                    \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n                },\n                \"dataTables\": {\n                    \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n                },\n                \"tableSpec\": {\n                    \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n                },\n                \"expandArchive\": {\n                    \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n                }\n            },\n            \"description\": \"commodo cillum\",\n            \"labels\": [\n                \"labore est\",\n                \"cillum conseq\"\n            ]\n        },\n        {\n            \"name\": \"K\",\n            \"source\": {\n                \"url\": {\n                    \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n                },\n                \"method\": {\n                    \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n                },\n                \"requestHeaders\": {\n                    \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n                },\n                \"requestEntity\": {\n                    \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n                },\n                \"oauthToken\": {\n                    \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n                },\n                \"credentials\": {\n                    \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n                },\n                \"authorization\": {\n                    \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n                },\n                \"databaseSource\": {\n                    \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n                },\n                \"dwccSpec\": {\n                    \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n                },\n                \"viewRequest\": {\n                    \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n                },\n                \"databaseMetadataSpec\": {\n                    \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n                },\n                \"dataTables\": {\n                    \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n                },\n                \"tableSpec\": {\n                    \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n                },\n                \"expandArchive\": {\n                    \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n                }\n            },\n            \"description\": \"tempor in\",\n            \"labels\": [\n                \"ullamco in sint laboris\",\n                \"eu dolor\"\n            ]\n        }\n    ],\n    \"assetStatusIri\": \"amet aliqua\",\n    \"properties\": {},\n    \"autoSyncInterval\": \"NEVER\"\n}"
										},
										"url": {
											"raw": "{{baseUrl}}/datasets/:owner",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"datasets",
												":owner"
											],
											"variable": [
												{
													"key": "owner"
												}
											]
										}
									},
									"status": "Unprocessable Entity (WebDAV) (RFC 4918)",
									"code": 422,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n \"code\": 1519430,\n \"message\": \"enim\",\n \"details\": \"do\"\n}"
								},
								{
									"name": "Server error",
									"originalRequest": {
										"method": "POST",
										"header": [
											{
												"description": "Added as a part of security scheme: oauth2",
												"key": "Authorization",
												"value": "<token>"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n    \"title\": \"Excepteur ullamco\",\n    \"visibility\": \"PRIVATE\",\n    \"description\": \"commodo ex\",\n    \"summary\": \"adipisicing nisi nulla\",\n    \"tags\": [\n        \"irure \",\n        \"dolor tempor deserunt\"\n    ],\n    \"license\": \"CC-BY 3.0 IGO\",\n    \"files\": [\n        {\n            \"name\": \"RtN|fN\",\n            \"source\": {\n                \"url\": {\n                    \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n                },\n                \"method\": {\n                    \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n                },\n                \"requestHeaders\": {\n                    \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n                },\n                \"requestEntity\": {\n                    \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n                },\n                \"oauthToken\": {\n                    \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n                },\n                \"credentials\": {\n                    \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n                },\n                \"authorization\": {\n                    \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n                },\n                \"databaseSource\": {\n                    \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n                },\n                \"dwccSpec\": {\n                    \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n                },\n                \"viewRequest\": {\n                    \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n                },\n                \"databaseMetadataSpec\": {\n                    \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n                },\n                \"dataTables\": {\n                    \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n                },\n                \"tableSpec\": {\n                    \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n                },\n                \"expandArchive\": {\n                    \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n                }\n            },\n            \"description\": \"commodo cillum\",\n            \"labels\": [\n                \"labore est\",\n                \"cillum conseq\"\n            ]\n        },\n        {\n            \"name\": \"K\",\n            \"source\": {\n                \"url\": {\n                    \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n                },\n                \"method\": {\n                    \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n                },\n                \"requestHeaders\": {\n                    \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n                },\n                \"requestEntity\": {\n                    \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n                },\n                \"oauthToken\": {\n                    \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n                },\n                \"credentials\": {\n                    \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n                },\n                \"authorization\": {\n                    \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n                },\n                \"databaseSource\": {\n                    \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n                },\n                \"dwccSpec\": {\n                    \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n                },\n                \"viewRequest\": {\n                    \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n                },\n                \"databaseMetadataSpec\": {\n                    \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n                },\n                \"dataTables\": {\n                    \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n                },\n                \"tableSpec\": {\n                    \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n                },\n                \"expandArchive\": {\n                    \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n                }\n            },\n            \"description\": \"tempor in\",\n            \"labels\": [\n                \"ullamco in sint laboris\",\n                \"eu dolor\"\n            ]\n        }\n    ],\n    \"assetStatusIri\": \"amet aliqua\",\n    \"properties\": {},\n    \"autoSyncInterval\": \"NEVER\"\n}"
										},
										"url": {
											"raw": "{{baseUrl}}/datasets/:owner",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"datasets",
												":owner"
											],
											"variable": [
												{
													"key": "owner"
												}
											]
										}
									},
									"status": "Internal Server Error",
									"code": 500,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n \"code\": 1519430,\n \"message\": \"enim\",\n \"details\": \"do\"\n}"
								}
							]
						}
					]
				},
				{
					"name": "Search for datasets.",
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{bearerToken}}",
									"type": "string"
								}
							]
						},
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{baseUrl}}/datasets/search?query=dataset",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"datasets",
								"search"
							],
							"query": [
								{
									"key": "query",
									"value": "dataset",
									"description": "(Required) "
								},
								{
									"key": "fields",
									"value": "adipisicing elit ullamco",
									"disabled": true
								},
								{
									"key": "limit",
									"value": "adipisicing elit ullamco",
									"disabled": true
								},
								{
									"key": "next",
									"value": "adipisicing elit ullamco",
									"disabled": true
								}
							]
						}
					},
					"response": [
						{
							"name": "Successfully retrieved dataset",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"description": "Added as a part of security scheme: oauth2",
										"key": "Authorization",
										"value": "<token>"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/datasets/search?query=adipisicing elit ullamco&fields=adipisicing elit ullamco&limit=adipisicing elit ullamco&next=adipisicing elit ullamco",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"datasets",
										"search"
									],
									"query": [
										{
											"key": "query",
											"value": "adipisicing elit ullamco"
										},
										{
											"key": "fields",
											"value": "adipisicing elit ullamco"
										},
										{
											"key": "limit",
											"value": "adipisicing elit ullamco"
										},
										{
											"key": "next",
											"value": "adipisicing elit ullamco"
										}
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n \"count\": 15706238,\n \"records\": [\n  {\n   \"accessLevel\": \"ADMIN\",\n   \"created\": \"irure nisi\",\n   \"id\": \"ut enim\",\n   \"isProject\": false,\n   \"owner\": \"consequat\",\n   \"status\": \"INPROGRESS\",\n   \"title\": \"in tempor mollit\",\n   \"updated\": \"officia sunt irure\",\n   \"version\": \"ipsum ea quis\",\n   \"visibility\": \"OPEN\",\n   \"description\": \"aliqua nisi nulla\",\n   \"summary\": \"in dolor quis sint\",\n   \"tags\": [\n    \"ea ut\",\n    \"Lorem minim\"\n   ],\n   \"dois\": [\n    {\n     \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    {\n     \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    }\n   ],\n   \"license\": \"CDLA-Permissive-1.0\",\n   \"files\": [\n    {\n     \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    {\n     \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    }\n   ],\n   \"properties\": {},\n   \"assetStatus\": {\n    \"assetStatusLabel\": {\n     \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    \"dispositionLabel\": {\n     \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    }\n   },\n   \"versionDois\": [\n    {\n     \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    {\n     \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    }\n   ]\n  },\n  {\n   \"accessLevel\": \"ADMIN\",\n   \"created\": \"ea laboris Ut ipsum\",\n   \"id\": \"velit cillum\",\n   \"isProject\": false,\n   \"owner\": \"ea elit adipisicing eiusmod\",\n   \"status\": \"INPROGRESS\",\n   \"title\": \"Ut enim id quis\",\n   \"updated\": \"nostrud exercitation eu\",\n   \"version\": \"do sit nostrud commodo ipsum\",\n   \"visibility\": \"PRIVATE\",\n   \"description\": \"consectetur\",\n   \"summary\": \"proident nisi\",\n   \"tags\": [\n    \"officia adipisicing commodo eiusmod\",\n    \"dolor nulla\"\n   ],\n   \"dois\": [\n    {\n     \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    {\n     \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    }\n   ],\n   \"license\": \"CC-BY 3.0 NZ\",\n   \"files\": [\n    {\n     \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    {\n     \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    }\n   ],\n   \"properties\": {},\n   \"assetStatus\": {\n    \"assetStatusLabel\": {\n     \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    \"dispositionLabel\": {\n     \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    }\n   },\n   \"versionDois\": [\n    {\n     \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    {\n     \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    }\n   ]\n  }\n ],\n \"nextPageToken\": \"repr\"\n}"
						},
						{
							"name": "Bad request",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"description": "Added as a part of security scheme: oauth2",
										"key": "Authorization",
										"value": "<token>"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/datasets/search?query=adipisicing elit ullamco&fields=adipisicing elit ullamco&limit=adipisicing elit ullamco&next=adipisicing elit ullamco",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"datasets",
										"search"
									],
									"query": [
										{
											"key": "query",
											"value": "adipisicing elit ullamco"
										},
										{
											"key": "fields",
											"value": "adipisicing elit ullamco"
										},
										{
											"key": "limit",
											"value": "adipisicing elit ullamco"
										},
										{
											"key": "next",
											"value": "adipisicing elit ullamco"
										}
									]
								}
							},
							"status": "Bad Request",
							"code": 400,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n \"code\": 1519430,\n \"message\": \"enim\",\n \"details\": \"do\"\n}"
						},
						{
							"name": "Unauthorized",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"description": "Added as a part of security scheme: oauth2",
										"key": "Authorization",
										"value": "<token>"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/datasets/search?query=adipisicing elit ullamco&fields=adipisicing elit ullamco&limit=adipisicing elit ullamco&next=adipisicing elit ullamco",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"datasets",
										"search"
									],
									"query": [
										{
											"key": "query",
											"value": "adipisicing elit ullamco"
										},
										{
											"key": "fields",
											"value": "adipisicing elit ullamco"
										},
										{
											"key": "limit",
											"value": "adipisicing elit ullamco"
										},
										{
											"key": "next",
											"value": "adipisicing elit ullamco"
										}
									]
								}
							},
							"status": "Unauthorized",
							"code": 401,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n \"code\": 1519430,\n \"message\": \"enim\",\n \"details\": \"do\"\n}"
						},
						{
							"name": "Forbidden",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"description": "Added as a part of security scheme: oauth2",
										"key": "Authorization",
										"value": "<token>"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/datasets/search?query=adipisicing elit ullamco&fields=adipisicing elit ullamco&limit=adipisicing elit ullamco&next=adipisicing elit ullamco",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"datasets",
										"search"
									],
									"query": [
										{
											"key": "query",
											"value": "adipisicing elit ullamco"
										},
										{
											"key": "fields",
											"value": "adipisicing elit ullamco"
										},
										{
											"key": "limit",
											"value": "adipisicing elit ullamco"
										},
										{
											"key": "next",
											"value": "adipisicing elit ullamco"
										}
									]
								}
							},
							"status": "Forbidden",
							"code": 403,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n \"code\": 1519430,\n \"message\": \"enim\",\n \"details\": \"do\"\n}"
						},
						{
							"name": "Not found",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"description": "Added as a part of security scheme: oauth2",
										"key": "Authorization",
										"value": "<token>"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/datasets/search?query=adipisicing elit ullamco&fields=adipisicing elit ullamco&limit=adipisicing elit ullamco&next=adipisicing elit ullamco",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"datasets",
										"search"
									],
									"query": [
										{
											"key": "query",
											"value": "adipisicing elit ullamco"
										},
										{
											"key": "fields",
											"value": "adipisicing elit ullamco"
										},
										{
											"key": "limit",
											"value": "adipisicing elit ullamco"
										},
										{
											"key": "next",
											"value": "adipisicing elit ullamco"
										}
									]
								}
							},
							"status": "Not Found",
							"code": 404,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n \"code\": 1519430,\n \"message\": \"enim\",\n \"details\": \"do\"\n}"
						},
						{
							"name": "Server error",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"description": "Added as a part of security scheme: oauth2",
										"key": "Authorization",
										"value": "<token>"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/datasets/search?query=adipisicing elit ullamco&fields=adipisicing elit ullamco&limit=adipisicing elit ullamco&next=adipisicing elit ullamco",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"datasets",
										"search"
									],
									"query": [
										{
											"key": "query",
											"value": "adipisicing elit ullamco"
										},
										{
											"key": "fields",
											"value": "adipisicing elit ullamco"
										},
										{
											"key": "limit",
											"value": "adipisicing elit ullamco"
										},
										{
											"key": "next",
											"value": "adipisicing elit ullamco"
										}
									]
								}
							},
							"status": "Internal Server Error",
							"code": 500,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n \"code\": 1519430,\n \"message\": \"enim\",\n \"details\": \"do\"\n}"
						}
					]
				}
			]
		},
		{
			"name": "insights/{project Owner}/{project Id}",
			"item": [
				{
					"name": "{id}",
					"item": [
						{
							"name": "Retrieve a project insight.",
							"request": {
								"auth": {
									"type": "bearer",
									"bearer": [
										{
											"key": "token",
											"value": "{{readWrite}}",
											"type": "string"
										}
									]
								},
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{baseUrl}}/insights/:projectOwner/:projectId/:id",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"insights",
										":projectOwner",
										":projectId",
										":id"
									],
									"variable": [
										{
											"key": "projectOwner",
											"value": "{{org}}",
											"description": "(Required) "
										},
										{
											"key": "projectId",
											"value": "{{projectid}}",
											"description": "(Required) "
										},
										{
											"key": "id",
											"value": "{{insightid}}",
											"description": "(Required) "
										}
									]
								}
							},
							"response": [
								{
									"name": "Successfully retrieved insight",
									"originalRequest": {
										"method": "GET",
										"header": [
											{
												"description": "Added as a part of security scheme: oauth2",
												"key": "Authorization",
												"value": "<token>"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/insights/:projectOwner/:projectId/:id",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"insights",
												":projectOwner",
												":projectId",
												":id"
											],
											"variable": [
												{
													"key": "projectOwner"
												},
												{
													"key": "projectId"
												},
												{
													"key": "id"
												}
											]
										}
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n \"author\": \"culpa voluptate in\",\n \"body\": {\n  \"imageUrl\": \"https://ydTflzmSUKENCNyQGJYrxC.emkcNSnwAH140PEWDfBeekBQ1DoP4AMNeHeESpOjcE7\",\n  \"embedUrl\": \"https://ueYRnXOtMvTKckWGudc.efrURGt54,kauHZuUR1REQFGqpnEn2YT2oPA\",\n  \"markdownBody\": \"magna voluptate aute\"\n },\n \"created\": \"veniam Ut\",\n \"id\": \"cupidatat ut\",\n \"title\": \"consectetur aute nostrud\",\n \"updated\": \"voluptate velit labore laborum Lorem\",\n \"version\": \"mollit ut anim\",\n \"description\": \"est sit\",\n \"sourceLink\": \"http://tAPOzBEVfFHcTBjFZlBZjaszjWKDyk.bmtKdQy.bd800MGK6kD7Z67laFcuTHMlY-U+aulMoBwG3+UQSm\",\n \"dataSourceLinks\": [\n  \"http://SMKCzIoNdjHZYXNXrfaBPEbYwdWSSnzt.eagR1skoi5H9DeqkC+nG2-JPi2DPTGbG4GUaQpri64PhK+VEAiXUYogXozkPXmQEj\",\n  \"http://isWNKPdAOHOIfS.joQEpspVKFmlDw58Yrla0fK2s\"\n ],\n \"thumbnail\": \"http://bucevALmkgHPHUfseuFGCTghpAN.shqvFgzS-8bHvO\"\n}"
								},
								{
									"name": "Bad request",
									"originalRequest": {
										"method": "GET",
										"header": [
											{
												"description": "Added as a part of security scheme: oauth2",
												"key": "Authorization",
												"value": "<token>"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/insights/:projectOwner/:projectId/:id",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"insights",
												":projectOwner",
												":projectId",
												":id"
											],
											"variable": [
												{
													"key": "projectOwner"
												},
												{
													"key": "projectId"
												},
												{
													"key": "id"
												}
											]
										}
									},
									"status": "Bad Request",
									"code": 400,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n \"code\": 1519430,\n \"message\": \"enim\",\n \"details\": \"do\"\n}"
								},
								{
									"name": "Unauthorized",
									"originalRequest": {
										"method": "GET",
										"header": [
											{
												"description": "Added as a part of security scheme: oauth2",
												"key": "Authorization",
												"value": "<token>"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/insights/:projectOwner/:projectId/:id",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"insights",
												":projectOwner",
												":projectId",
												":id"
											],
											"variable": [
												{
													"key": "projectOwner"
												},
												{
													"key": "projectId"
												},
												{
													"key": "id"
												}
											]
										}
									},
									"status": "Unauthorized",
									"code": 401,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n \"code\": 1519430,\n \"message\": \"enim\",\n \"details\": \"do\"\n}"
								},
								{
									"name": "Forbidden",
									"originalRequest": {
										"method": "GET",
										"header": [
											{
												"description": "Added as a part of security scheme: oauth2",
												"key": "Authorization",
												"value": "<token>"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/insights/:projectOwner/:projectId/:id",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"insights",
												":projectOwner",
												":projectId",
												":id"
											],
											"variable": [
												{
													"key": "projectOwner"
												},
												{
													"key": "projectId"
												},
												{
													"key": "id"
												}
											]
										}
									},
									"status": "Forbidden",
									"code": 403,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n \"code\": 1519430,\n \"message\": \"enim\",\n \"details\": \"do\"\n}"
								},
								{
									"name": "Not found",
									"originalRequest": {
										"method": "GET",
										"header": [
											{
												"description": "Added as a part of security scheme: oauth2",
												"key": "Authorization",
												"value": "<token>"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/insights/:projectOwner/:projectId/:id",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"insights",
												":projectOwner",
												":projectId",
												":id"
											],
											"variable": [
												{
													"key": "projectOwner"
												},
												{
													"key": "projectId"
												},
												{
													"key": "id"
												}
											]
										}
									},
									"status": "Not Found",
									"code": 404,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n \"code\": 1519430,\n \"message\": \"enim\",\n \"details\": \"do\"\n}"
								},
								{
									"name": "Server error",
									"originalRequest": {
										"method": "GET",
										"header": [
											{
												"description": "Added as a part of security scheme: oauth2",
												"key": "Authorization",
												"value": "<token>"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/insights/:projectOwner/:projectId/:id",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"insights",
												":projectOwner",
												":projectId",
												":id"
											],
											"variable": [
												{
													"key": "projectOwner"
												},
												{
													"key": "projectId"
												},
												{
													"key": "id"
												}
											]
										}
									},
									"status": "Internal Server Error",
									"code": 500,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n \"code\": 1519430,\n \"message\": \"enim\",\n \"details\": \"do\"\n}"
								}
							]
						},
						{
							"name": "Replace an existing insight or create a new insight.",
							"request": {
								"auth": {
									"type": "bearer",
									"bearer": [
										{
											"key": "token",
											"value": "{{readWrite}}",
											"type": "string"
										}
									]
								},
								"method": "PUT",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"body\": {\n        \"imageUrl\": \"https://www.google.com/url?sa=i&url=https%3A%2F%2Fen.wikipedia.org%2Fwiki%2FImage&psig=AOvVaw3G6MMqNhpShKs-i3D3HEOe&ust=1636051627257000&source=images&cd=vfe&ved=0CAsQjRxqFwoTCKDU97Lt_PMCFQAAAAAdAAAAABAD\"\n    },\n    \"title\": \"an insight\",\n    \"description\": \"my awesome insight\",\n    \"thumbnail\": \"https://www.pixsy.com/wp-content/uploads/2021/04/ben-sweet-2LowviVHZ-E-unsplash-1.jpeg\"\n}"
								},
								"url": {
									"raw": "{{baseUrl}}/insights/:projectOwner/:projectId/:id",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"insights",
										":projectOwner",
										":projectId",
										":id"
									],
									"variable": [
										{
											"key": "projectOwner",
											"value": "{{org}}",
											"description": "(Required) "
										},
										{
											"key": "projectId",
											"value": "{{projectid}}",
											"description": "(Required) "
										},
										{
											"key": "id",
											"value": "{{insightid}}",
											"description": "(Required) "
										}
									]
								}
							},
							"response": [
								{
									"name": "Insight replaced successfully.",
									"originalRequest": {
										"method": "PUT",
										"header": [
											{
												"description": "Added as a part of security scheme: oauth2",
												"key": "Authorization",
												"value": "<token>"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n    \"body\": {\n        \"imageUrl\": \"http://VoZrMsGPXfzUNonQwBywVkMvFu.dmftxxJ+L\",\n        \"embedUrl\": \"https://gOHExYcupjqTSeClKsFTnLDGNh.jhhNbgjZ7wk8rFKsvI-clDAPyT\",\n        \"markdownBody\": \"consectetur nost\"\n    },\n    \"title\": \"nostrud quis ex ut commodo\",\n    \"description\": \"consequat sunt exercitation\",\n    \"sourceLink\": \"https://GUxYDvFWzPkKyCGWqKmK.qoQcPvLGwp82zOF2A-w+yTlVS5k.3ivmVi0Tl\",\n    \"dataSourceLinks\": [\n        \"https://zZJnRmdiXAvCgoLEkP.ndS+VaoxM81gku3220bGV23L\",\n        \"https://UTMhGaKALGJENQ.vuyiRLFUkio\"\n    ],\n    \"thumbnail\": \"http://jHTNe.waaAPKQsJJYQV1hq+\"\n}"
										},
										"url": {
											"raw": "{{baseUrl}}/insights/:projectOwner/:projectId/:id",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"insights",
												":projectOwner",
												":projectId",
												":id"
											],
											"variable": [
												{
													"key": "projectOwner"
												},
												{
													"key": "projectId"
												},
												{
													"key": "id"
												}
											]
										}
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n \"message\": \"voluptate culpa nulla esse\"\n}"
								},
								{
									"name": "Bad request",
									"originalRequest": {
										"method": "PUT",
										"header": [
											{
												"description": "Added as a part of security scheme: oauth2",
												"key": "Authorization",
												"value": "<token>"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n    \"body\": {\n        \"imageUrl\": \"http://VoZrMsGPXfzUNonQwBywVkMvFu.dmftxxJ+L\",\n        \"embedUrl\": \"https://gOHExYcupjqTSeClKsFTnLDGNh.jhhNbgjZ7wk8rFKsvI-clDAPyT\",\n        \"markdownBody\": \"consectetur nost\"\n    },\n    \"title\": \"nostrud quis ex ut commodo\",\n    \"description\": \"consequat sunt exercitation\",\n    \"sourceLink\": \"https://GUxYDvFWzPkKyCGWqKmK.qoQcPvLGwp82zOF2A-w+yTlVS5k.3ivmVi0Tl\",\n    \"dataSourceLinks\": [\n        \"https://zZJnRmdiXAvCgoLEkP.ndS+VaoxM81gku3220bGV23L\",\n        \"https://UTMhGaKALGJENQ.vuyiRLFUkio\"\n    ],\n    \"thumbnail\": \"http://jHTNe.waaAPKQsJJYQV1hq+\"\n}"
										},
										"url": {
											"raw": "{{baseUrl}}/insights/:projectOwner/:projectId/:id",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"insights",
												":projectOwner",
												":projectId",
												":id"
											],
											"variable": [
												{
													"key": "projectOwner"
												},
												{
													"key": "projectId"
												},
												{
													"key": "id"
												}
											]
										}
									},
									"status": "Bad Request",
									"code": 400,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n \"code\": 1519430,\n \"message\": \"enim\",\n \"details\": \"do\"\n}"
								},
								{
									"name": "Unauthorized",
									"originalRequest": {
										"method": "PUT",
										"header": [
											{
												"description": "Added as a part of security scheme: oauth2",
												"key": "Authorization",
												"value": "<token>"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n    \"body\": {\n        \"imageUrl\": \"http://VoZrMsGPXfzUNonQwBywVkMvFu.dmftxxJ+L\",\n        \"embedUrl\": \"https://gOHExYcupjqTSeClKsFTnLDGNh.jhhNbgjZ7wk8rFKsvI-clDAPyT\",\n        \"markdownBody\": \"consectetur nost\"\n    },\n    \"title\": \"nostrud quis ex ut commodo\",\n    \"description\": \"consequat sunt exercitation\",\n    \"sourceLink\": \"https://GUxYDvFWzPkKyCGWqKmK.qoQcPvLGwp82zOF2A-w+yTlVS5k.3ivmVi0Tl\",\n    \"dataSourceLinks\": [\n        \"https://zZJnRmdiXAvCgoLEkP.ndS+VaoxM81gku3220bGV23L\",\n        \"https://UTMhGaKALGJENQ.vuyiRLFUkio\"\n    ],\n    \"thumbnail\": \"http://jHTNe.waaAPKQsJJYQV1hq+\"\n}"
										},
										"url": {
											"raw": "{{baseUrl}}/insights/:projectOwner/:projectId/:id",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"insights",
												":projectOwner",
												":projectId",
												":id"
											],
											"variable": [
												{
													"key": "projectOwner"
												},
												{
													"key": "projectId"
												},
												{
													"key": "id"
												}
											]
										}
									},
									"status": "Unauthorized",
									"code": 401,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n \"code\": 1519430,\n \"message\": \"enim\",\n \"details\": \"do\"\n}"
								},
								{
									"name": "Forbidden",
									"originalRequest": {
										"method": "PUT",
										"header": [
											{
												"description": "Added as a part of security scheme: oauth2",
												"key": "Authorization",
												"value": "<token>"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n    \"body\": {\n        \"imageUrl\": \"http://VoZrMsGPXfzUNonQwBywVkMvFu.dmftxxJ+L\",\n        \"embedUrl\": \"https://gOHExYcupjqTSeClKsFTnLDGNh.jhhNbgjZ7wk8rFKsvI-clDAPyT\",\n        \"markdownBody\": \"consectetur nost\"\n    },\n    \"title\": \"nostrud quis ex ut commodo\",\n    \"description\": \"consequat sunt exercitation\",\n    \"sourceLink\": \"https://GUxYDvFWzPkKyCGWqKmK.qoQcPvLGwp82zOF2A-w+yTlVS5k.3ivmVi0Tl\",\n    \"dataSourceLinks\": [\n        \"https://zZJnRmdiXAvCgoLEkP.ndS+VaoxM81gku3220bGV23L\",\n        \"https://UTMhGaKALGJENQ.vuyiRLFUkio\"\n    ],\n    \"thumbnail\": \"http://jHTNe.waaAPKQsJJYQV1hq+\"\n}"
										},
										"url": {
											"raw": "{{baseUrl}}/insights/:projectOwner/:projectId/:id",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"insights",
												":projectOwner",
												":projectId",
												":id"
											],
											"variable": [
												{
													"key": "projectOwner"
												},
												{
													"key": "projectId"
												},
												{
													"key": "id"
												}
											]
										}
									},
									"status": "Forbidden",
									"code": 403,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n \"code\": 1519430,\n \"message\": \"enim\",\n \"details\": \"do\"\n}"
								},
								{
									"name": "Not found",
									"originalRequest": {
										"method": "PUT",
										"header": [
											{
												"description": "Added as a part of security scheme: oauth2",
												"key": "Authorization",
												"value": "<token>"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n    \"body\": {\n        \"imageUrl\": \"http://VoZrMsGPXfzUNonQwBywVkMvFu.dmftxxJ+L\",\n        \"embedUrl\": \"https://gOHExYcupjqTSeClKsFTnLDGNh.jhhNbgjZ7wk8rFKsvI-clDAPyT\",\n        \"markdownBody\": \"consectetur nost\"\n    },\n    \"title\": \"nostrud quis ex ut commodo\",\n    \"description\": \"consequat sunt exercitation\",\n    \"sourceLink\": \"https://GUxYDvFWzPkKyCGWqKmK.qoQcPvLGwp82zOF2A-w+yTlVS5k.3ivmVi0Tl\",\n    \"dataSourceLinks\": [\n        \"https://zZJnRmdiXAvCgoLEkP.ndS+VaoxM81gku3220bGV23L\",\n        \"https://UTMhGaKALGJENQ.vuyiRLFUkio\"\n    ],\n    \"thumbnail\": \"http://jHTNe.waaAPKQsJJYQV1hq+\"\n}"
										},
										"url": {
											"raw": "{{baseUrl}}/insights/:projectOwner/:projectId/:id",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"insights",
												":projectOwner",
												":projectId",
												":id"
											],
											"variable": [
												{
													"key": "projectOwner"
												},
												{
													"key": "projectId"
												},
												{
													"key": "id"
												}
											]
										}
									},
									"status": "Not Found",
									"code": 404,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n \"code\": 1519430,\n \"message\": \"enim\",\n \"details\": \"do\"\n}"
								},
								{
									"name": "Bad request",
									"originalRequest": {
										"method": "PUT",
										"header": [
											{
												"description": "Added as a part of security scheme: oauth2",
												"key": "Authorization",
												"value": "<token>"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n    \"body\": {\n        \"imageUrl\": \"http://VoZrMsGPXfzUNonQwBywVkMvFu.dmftxxJ+L\",\n        \"embedUrl\": \"https://gOHExYcupjqTSeClKsFTnLDGNh.jhhNbgjZ7wk8rFKsvI-clDAPyT\",\n        \"markdownBody\": \"consectetur nost\"\n    },\n    \"title\": \"nostrud quis ex ut commodo\",\n    \"description\": \"consequat sunt exercitation\",\n    \"sourceLink\": \"https://GUxYDvFWzPkKyCGWqKmK.qoQcPvLGwp82zOF2A-w+yTlVS5k.3ivmVi0Tl\",\n    \"dataSourceLinks\": [\n        \"https://zZJnRmdiXAvCgoLEkP.ndS+VaoxM81gku3220bGV23L\",\n        \"https://UTMhGaKALGJENQ.vuyiRLFUkio\"\n    ],\n    \"thumbnail\": \"http://jHTNe.waaAPKQsJJYQV1hq+\"\n}"
										},
										"url": {
											"raw": "{{baseUrl}}/insights/:projectOwner/:projectId/:id",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"insights",
												":projectOwner",
												":projectId",
												":id"
											],
											"variable": [
												{
													"key": "projectOwner"
												},
												{
													"key": "projectId"
												},
												{
													"key": "id"
												}
											]
										}
									},
									"status": "Unprocessable Entity (WebDAV) (RFC 4918)",
									"code": 422,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n \"code\": 1519430,\n \"message\": \"enim\",\n \"details\": \"do\"\n}"
								},
								{
									"name": "Server error",
									"originalRequest": {
										"method": "PUT",
										"header": [
											{
												"description": "Added as a part of security scheme: oauth2",
												"key": "Authorization",
												"value": "<token>"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n    \"body\": {\n        \"imageUrl\": \"http://VoZrMsGPXfzUNonQwBywVkMvFu.dmftxxJ+L\",\n        \"embedUrl\": \"https://gOHExYcupjqTSeClKsFTnLDGNh.jhhNbgjZ7wk8rFKsvI-clDAPyT\",\n        \"markdownBody\": \"consectetur nost\"\n    },\n    \"title\": \"nostrud quis ex ut commodo\",\n    \"description\": \"consequat sunt exercitation\",\n    \"sourceLink\": \"https://GUxYDvFWzPkKyCGWqKmK.qoQcPvLGwp82zOF2A-w+yTlVS5k.3ivmVi0Tl\",\n    \"dataSourceLinks\": [\n        \"https://zZJnRmdiXAvCgoLEkP.ndS+VaoxM81gku3220bGV23L\",\n        \"https://UTMhGaKALGJENQ.vuyiRLFUkio\"\n    ],\n    \"thumbnail\": \"http://jHTNe.waaAPKQsJJYQV1hq+\"\n}"
										},
										"url": {
											"raw": "{{baseUrl}}/insights/:projectOwner/:projectId/:id",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"insights",
												":projectOwner",
												":projectId",
												":id"
											],
											"variable": [
												{
													"key": "projectOwner"
												},
												{
													"key": "projectId"
												},
												{
													"key": "id"
												}
											]
										}
									},
									"status": "Internal Server Error",
									"code": 500,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n \"code\": 1519430,\n \"message\": \"enim\",\n \"details\": \"do\"\n}"
								}
							]
						},
						{
							"name": "Delete an insight.",
							"request": {
								"auth": {
									"type": "bearer",
									"bearer": [
										{
											"key": "token",
											"value": "{{readWrite}}",
											"type": "string"
										}
									]
								},
								"method": "DELETE",
								"header": [],
								"url": {
									"raw": "{{baseUrl}}/insights/:projectOwner/:projectId/:id",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"insights",
										":projectOwner",
										":projectId",
										":id"
									],
									"variable": [
										{
											"key": "projectOwner",
											"value": "{{org}}",
											"description": "(Required) "
										},
										{
											"key": "projectId",
											"value": "{{projectid}}",
											"description": "(Required) "
										},
										{
											"key": "id",
											"value": "{{insightidDelete}}",
											"description": "(Required) "
										}
									]
								}
							},
							"response": [
								{
									"name": "Insight has been successfully deleted.",
									"originalRequest": {
										"method": "DELETE",
										"header": [
											{
												"description": "Added as a part of security scheme: oauth2",
												"key": "Authorization",
												"value": "<token>"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/insights/:projectOwner/:projectId/:id",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"insights",
												":projectOwner",
												":projectId",
												":id"
											],
											"variable": [
												{
													"key": "projectOwner"
												},
												{
													"key": "projectId"
												},
												{
													"key": "id"
												}
											]
										}
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n \"message\": \"voluptate culpa nulla esse\"\n}"
								},
								{
									"name": "Bad request",
									"originalRequest": {
										"method": "DELETE",
										"header": [
											{
												"description": "Added as a part of security scheme: oauth2",
												"key": "Authorization",
												"value": "<token>"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/insights/:projectOwner/:projectId/:id",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"insights",
												":projectOwner",
												":projectId",
												":id"
											],
											"variable": [
												{
													"key": "projectOwner"
												},
												{
													"key": "projectId"
												},
												{
													"key": "id"
												}
											]
										}
									},
									"status": "Bad Request",
									"code": 400,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n \"code\": 1519430,\n \"message\": \"enim\",\n \"details\": \"do\"\n}"
								},
								{
									"name": "Unauthorized",
									"originalRequest": {
										"method": "DELETE",
										"header": [
											{
												"description": "Added as a part of security scheme: oauth2",
												"key": "Authorization",
												"value": "<token>"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/insights/:projectOwner/:projectId/:id",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"insights",
												":projectOwner",
												":projectId",
												":id"
											],
											"variable": [
												{
													"key": "projectOwner"
												},
												{
													"key": "projectId"
												},
												{
													"key": "id"
												}
											]
										}
									},
									"status": "Unauthorized",
									"code": 401,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n \"code\": 1519430,\n \"message\": \"enim\",\n \"details\": \"do\"\n}"
								},
								{
									"name": "Forbidden",
									"originalRequest": {
										"method": "DELETE",
										"header": [
											{
												"description": "Added as a part of security scheme: oauth2",
												"key": "Authorization",
												"value": "<token>"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/insights/:projectOwner/:projectId/:id",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"insights",
												":projectOwner",
												":projectId",
												":id"
											],
											"variable": [
												{
													"key": "projectOwner"
												},
												{
													"key": "projectId"
												},
												{
													"key": "id"
												}
											]
										}
									},
									"status": "Forbidden",
									"code": 403,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n \"code\": 1519430,\n \"message\": \"enim\",\n \"details\": \"do\"\n}"
								},
								{
									"name": "Not found",
									"originalRequest": {
										"method": "DELETE",
										"header": [
											{
												"description": "Added as a part of security scheme: oauth2",
												"key": "Authorization",
												"value": "<token>"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/insights/:projectOwner/:projectId/:id",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"insights",
												":projectOwner",
												":projectId",
												":id"
											],
											"variable": [
												{
													"key": "projectOwner"
												},
												{
													"key": "projectId"
												},
												{
													"key": "id"
												}
											]
										}
									},
									"status": "Not Found",
									"code": 404,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n \"code\": 1519430,\n \"message\": \"enim\",\n \"details\": \"do\"\n}"
								},
								{
									"name": "Server error",
									"originalRequest": {
										"method": "DELETE",
										"header": [
											{
												"description": "Added as a part of security scheme: oauth2",
												"key": "Authorization",
												"value": "<token>"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/insights/:projectOwner/:projectId/:id",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"insights",
												":projectOwner",
												":projectId",
												":id"
											],
											"variable": [
												{
													"key": "projectOwner"
												},
												{
													"key": "projectId"
												},
												{
													"key": "id"
												}
											]
										}
									},
									"status": "Internal Server Error",
									"code": 500,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n \"code\": 1519430,\n \"message\": \"enim\",\n \"details\": \"do\"\n}"
								}
							]
						},
						{
							"name": "Update an existing insight.",
							"request": {
								"auth": {
									"type": "bearer",
									"bearer": [
										{
											"key": "token",
											"value": "{{readWrite}}",
											"type": "string"
										}
									]
								},
								"method": "PATCH",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"body\": {\n        \"imageUrl\": \"https://www.google.com/url?sa=i&url=https%3A%2F%2Fen.wikipedia.org%2Fwiki%2FImage&psig=AOvVaw3G6MMqNhpShKs-i3D3HEOe&ust=1636051627257000&source=images&cd=vfe&ved=0CAsQjRxqFwoTCKDU97Lt_PMCFQAAAAAdAAAAABAD\"\n    },\n    \"title\": \"an insight\",\n    \"description\": \"my abysmal insight\",\n    \"thumbnail\": \"https://www.pixsy.com/wp-content/uploads/2021/04/ben-sweet-2LowviVHZ-E-unsplash-1.jpeg\"\n}"
								},
								"url": {
									"raw": "{{baseUrl}}/insights/:projectOwner/:projectId/:id",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"insights",
										":projectOwner",
										":projectId",
										":id"
									],
									"variable": [
										{
											"key": "projectOwner",
											"value": "{{org}}",
											"description": "(Required) "
										},
										{
											"key": "projectId",
											"value": "{{projectid}}",
											"description": "(Required) "
										},
										{
											"key": "id",
											"value": "{{insightid}}",
											"description": "(Required) "
										}
									]
								}
							},
							"response": [
								{
									"name": "Insight updated successfully.",
									"originalRequest": {
										"method": "PATCH",
										"header": [
											{
												"description": "Added as a part of security scheme: oauth2",
												"key": "Authorization",
												"value": "<token>"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n    \"title\": \"ut ipsum occaecat sunt\",\n    \"body\": {\n        \"imageUrl\": \"https://DPZcTRvYGELLFldikNetygcft.uynFoALs5aw,JRBA-cSMCVZN5SeJ5gdWy00AotEmutJl0ZmUQ\",\n        \"embedUrl\": \"https://aEgVULaIlRrSLxgSsseuwynygM.qumuyQ+bAhcV+yretLi56a3rc3ojnXv\",\n        \"markdownBody\": \"exercitation nostrud et labore esse\"\n    },\n    \"description\": \"aliquip est amet nisi\",\n    \"sourceLink\": \"https://aguWCMTaWlqRXDWv.tvkeui3SmTOF7\",\n    \"dataSourceLinks\": [\n        \"https://ebdVDXKKxudsTYmsRbFkiyJ.urRGsW6-pOZUOvzxpRk-aHTGTwnX,YNO57n.l+WWC3DhXzNA6J1W,ktDPEWCTipHs6tvXAQjn74J5KAYfsQF\",\n        \"http://VQCGpzSMSumwmVAYoD.yxePUS+.aGKSKQsvP1-,-vM\"\n    ],\n    \"thumbnail\": \"http://eWFUVRPm.jcvG8PtHRHRU6-mgiQUZQKWqGbQ.scSDYrvytqm+PwUG8\"\n}"
										},
										"url": {
											"raw": "{{baseUrl}}/insights/:projectOwner/:projectId/:id",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"insights",
												":projectOwner",
												":projectId",
												":id"
											],
											"variable": [
												{
													"key": "projectOwner"
												},
												{
													"key": "projectId"
												},
												{
													"key": "id"
												}
											]
										}
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n \"message\": \"voluptate culpa nulla esse\"\n}"
								},
								{
									"name": "Bad request",
									"originalRequest": {
										"method": "PATCH",
										"header": [
											{
												"description": "Added as a part of security scheme: oauth2",
												"key": "Authorization",
												"value": "<token>"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n    \"title\": \"ut ipsum occaecat sunt\",\n    \"body\": {\n        \"imageUrl\": \"https://DPZcTRvYGELLFldikNetygcft.uynFoALs5aw,JRBA-cSMCVZN5SeJ5gdWy00AotEmutJl0ZmUQ\",\n        \"embedUrl\": \"https://aEgVULaIlRrSLxgSsseuwynygM.qumuyQ+bAhcV+yretLi56a3rc3ojnXv\",\n        \"markdownBody\": \"exercitation nostrud et labore esse\"\n    },\n    \"description\": \"aliquip est amet nisi\",\n    \"sourceLink\": \"https://aguWCMTaWlqRXDWv.tvkeui3SmTOF7\",\n    \"dataSourceLinks\": [\n        \"https://ebdVDXKKxudsTYmsRbFkiyJ.urRGsW6-pOZUOvzxpRk-aHTGTwnX,YNO57n.l+WWC3DhXzNA6J1W,ktDPEWCTipHs6tvXAQjn74J5KAYfsQF\",\n        \"http://VQCGpzSMSumwmVAYoD.yxePUS+.aGKSKQsvP1-,-vM\"\n    ],\n    \"thumbnail\": \"http://eWFUVRPm.jcvG8PtHRHRU6-mgiQUZQKWqGbQ.scSDYrvytqm+PwUG8\"\n}"
										},
										"url": {
											"raw": "{{baseUrl}}/insights/:projectOwner/:projectId/:id",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"insights",
												":projectOwner",
												":projectId",
												":id"
											],
											"variable": [
												{
													"key": "projectOwner"
												},
												{
													"key": "projectId"
												},
												{
													"key": "id"
												}
											]
										}
									},
									"status": "Bad Request",
									"code": 400,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n \"code\": 1519430,\n \"message\": \"enim\",\n \"details\": \"do\"\n}"
								},
								{
									"name": "Unauthorized",
									"originalRequest": {
										"method": "PATCH",
										"header": [
											{
												"description": "Added as a part of security scheme: oauth2",
												"key": "Authorization",
												"value": "<token>"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n    \"title\": \"ut ipsum occaecat sunt\",\n    \"body\": {\n        \"imageUrl\": \"https://DPZcTRvYGELLFldikNetygcft.uynFoALs5aw,JRBA-cSMCVZN5SeJ5gdWy00AotEmutJl0ZmUQ\",\n        \"embedUrl\": \"https://aEgVULaIlRrSLxgSsseuwynygM.qumuyQ+bAhcV+yretLi56a3rc3ojnXv\",\n        \"markdownBody\": \"exercitation nostrud et labore esse\"\n    },\n    \"description\": \"aliquip est amet nisi\",\n    \"sourceLink\": \"https://aguWCMTaWlqRXDWv.tvkeui3SmTOF7\",\n    \"dataSourceLinks\": [\n        \"https://ebdVDXKKxudsTYmsRbFkiyJ.urRGsW6-pOZUOvzxpRk-aHTGTwnX,YNO57n.l+WWC3DhXzNA6J1W,ktDPEWCTipHs6tvXAQjn74J5KAYfsQF\",\n        \"http://VQCGpzSMSumwmVAYoD.yxePUS+.aGKSKQsvP1-,-vM\"\n    ],\n    \"thumbnail\": \"http://eWFUVRPm.jcvG8PtHRHRU6-mgiQUZQKWqGbQ.scSDYrvytqm+PwUG8\"\n}"
										},
										"url": {
											"raw": "{{baseUrl}}/insights/:projectOwner/:projectId/:id",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"insights",
												":projectOwner",
												":projectId",
												":id"
											],
											"variable": [
												{
													"key": "projectOwner"
												},
												{
													"key": "projectId"
												},
												{
													"key": "id"
												}
											]
										}
									},
									"status": "Unauthorized",
									"code": 401,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n \"code\": 1519430,\n \"message\": \"enim\",\n \"details\": \"do\"\n}"
								},
								{
									"name": "Forbidden",
									"originalRequest": {
										"method": "PATCH",
										"header": [
											{
												"description": "Added as a part of security scheme: oauth2",
												"key": "Authorization",
												"value": "<token>"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n    \"title\": \"ut ipsum occaecat sunt\",\n    \"body\": {\n        \"imageUrl\": \"https://DPZcTRvYGELLFldikNetygcft.uynFoALs5aw,JRBA-cSMCVZN5SeJ5gdWy00AotEmutJl0ZmUQ\",\n        \"embedUrl\": \"https://aEgVULaIlRrSLxgSsseuwynygM.qumuyQ+bAhcV+yretLi56a3rc3ojnXv\",\n        \"markdownBody\": \"exercitation nostrud et labore esse\"\n    },\n    \"description\": \"aliquip est amet nisi\",\n    \"sourceLink\": \"https://aguWCMTaWlqRXDWv.tvkeui3SmTOF7\",\n    \"dataSourceLinks\": [\n        \"https://ebdVDXKKxudsTYmsRbFkiyJ.urRGsW6-pOZUOvzxpRk-aHTGTwnX,YNO57n.l+WWC3DhXzNA6J1W,ktDPEWCTipHs6tvXAQjn74J5KAYfsQF\",\n        \"http://VQCGpzSMSumwmVAYoD.yxePUS+.aGKSKQsvP1-,-vM\"\n    ],\n    \"thumbnail\": \"http://eWFUVRPm.jcvG8PtHRHRU6-mgiQUZQKWqGbQ.scSDYrvytqm+PwUG8\"\n}"
										},
										"url": {
											"raw": "{{baseUrl}}/insights/:projectOwner/:projectId/:id",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"insights",
												":projectOwner",
												":projectId",
												":id"
											],
											"variable": [
												{
													"key": "projectOwner"
												},
												{
													"key": "projectId"
												},
												{
													"key": "id"
												}
											]
										}
									},
									"status": "Forbidden",
									"code": 403,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n \"code\": 1519430,\n \"message\": \"enim\",\n \"details\": \"do\"\n}"
								},
								{
									"name": "Not found",
									"originalRequest": {
										"method": "PATCH",
										"header": [
											{
												"description": "Added as a part of security scheme: oauth2",
												"key": "Authorization",
												"value": "<token>"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n    \"title\": \"ut ipsum occaecat sunt\",\n    \"body\": {\n        \"imageUrl\": \"https://DPZcTRvYGELLFldikNetygcft.uynFoALs5aw,JRBA-cSMCVZN5SeJ5gdWy00AotEmutJl0ZmUQ\",\n        \"embedUrl\": \"https://aEgVULaIlRrSLxgSsseuwynygM.qumuyQ+bAhcV+yretLi56a3rc3ojnXv\",\n        \"markdownBody\": \"exercitation nostrud et labore esse\"\n    },\n    \"description\": \"aliquip est amet nisi\",\n    \"sourceLink\": \"https://aguWCMTaWlqRXDWv.tvkeui3SmTOF7\",\n    \"dataSourceLinks\": [\n        \"https://ebdVDXKKxudsTYmsRbFkiyJ.urRGsW6-pOZUOvzxpRk-aHTGTwnX,YNO57n.l+WWC3DhXzNA6J1W,ktDPEWCTipHs6tvXAQjn74J5KAYfsQF\",\n        \"http://VQCGpzSMSumwmVAYoD.yxePUS+.aGKSKQsvP1-,-vM\"\n    ],\n    \"thumbnail\": \"http://eWFUVRPm.jcvG8PtHRHRU6-mgiQUZQKWqGbQ.scSDYrvytqm+PwUG8\"\n}"
										},
										"url": {
											"raw": "{{baseUrl}}/insights/:projectOwner/:projectId/:id",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"insights",
												":projectOwner",
												":projectId",
												":id"
											],
											"variable": [
												{
													"key": "projectOwner"
												},
												{
													"key": "projectId"
												},
												{
													"key": "id"
												}
											]
										}
									},
									"status": "Not Found",
									"code": 404,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n \"code\": 1519430,\n \"message\": \"enim\",\n \"details\": \"do\"\n}"
								},
								{
									"name": "Bad request",
									"originalRequest": {
										"method": "PATCH",
										"header": [
											{
												"description": "Added as a part of security scheme: oauth2",
												"key": "Authorization",
												"value": "<token>"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n    \"title\": \"ut ipsum occaecat sunt\",\n    \"body\": {\n        \"imageUrl\": \"https://DPZcTRvYGELLFldikNetygcft.uynFoALs5aw,JRBA-cSMCVZN5SeJ5gdWy00AotEmutJl0ZmUQ\",\n        \"embedUrl\": \"https://aEgVULaIlRrSLxgSsseuwynygM.qumuyQ+bAhcV+yretLi56a3rc3ojnXv\",\n        \"markdownBody\": \"exercitation nostrud et labore esse\"\n    },\n    \"description\": \"aliquip est amet nisi\",\n    \"sourceLink\": \"https://aguWCMTaWlqRXDWv.tvkeui3SmTOF7\",\n    \"dataSourceLinks\": [\n        \"https://ebdVDXKKxudsTYmsRbFkiyJ.urRGsW6-pOZUOvzxpRk-aHTGTwnX,YNO57n.l+WWC3DhXzNA6J1W,ktDPEWCTipHs6tvXAQjn74J5KAYfsQF\",\n        \"http://VQCGpzSMSumwmVAYoD.yxePUS+.aGKSKQsvP1-,-vM\"\n    ],\n    \"thumbnail\": \"http://eWFUVRPm.jcvG8PtHRHRU6-mgiQUZQKWqGbQ.scSDYrvytqm+PwUG8\"\n}"
										},
										"url": {
											"raw": "{{baseUrl}}/insights/:projectOwner/:projectId/:id",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"insights",
												":projectOwner",
												":projectId",
												":id"
											],
											"variable": [
												{
													"key": "projectOwner"
												},
												{
													"key": "projectId"
												},
												{
													"key": "id"
												}
											]
										}
									},
									"status": "Unprocessable Entity (WebDAV) (RFC 4918)",
									"code": 422,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n \"code\": 1519430,\n \"message\": \"enim\",\n \"details\": \"do\"\n}"
								},
								{
									"name": "Server error",
									"originalRequest": {
										"method": "PATCH",
										"header": [
											{
												"description": "Added as a part of security scheme: oauth2",
												"key": "Authorization",
												"value": "<token>"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n    \"title\": \"ut ipsum occaecat sunt\",\n    \"body\": {\n        \"imageUrl\": \"https://DPZcTRvYGELLFldikNetygcft.uynFoALs5aw,JRBA-cSMCVZN5SeJ5gdWy00AotEmutJl0ZmUQ\",\n        \"embedUrl\": \"https://aEgVULaIlRrSLxgSsseuwynygM.qumuyQ+bAhcV+yretLi56a3rc3ojnXv\",\n        \"markdownBody\": \"exercitation nostrud et labore esse\"\n    },\n    \"description\": \"aliquip est amet nisi\",\n    \"sourceLink\": \"https://aguWCMTaWlqRXDWv.tvkeui3SmTOF7\",\n    \"dataSourceLinks\": [\n        \"https://ebdVDXKKxudsTYmsRbFkiyJ.urRGsW6-pOZUOvzxpRk-aHTGTwnX,YNO57n.l+WWC3DhXzNA6J1W,ktDPEWCTipHs6tvXAQjn74J5KAYfsQF\",\n        \"http://VQCGpzSMSumwmVAYoD.yxePUS+.aGKSKQsvP1-,-vM\"\n    ],\n    \"thumbnail\": \"http://eWFUVRPm.jcvG8PtHRHRU6-mgiQUZQKWqGbQ.scSDYrvytqm+PwUG8\"\n}"
										},
										"url": {
											"raw": "{{baseUrl}}/insights/:projectOwner/:projectId/:id",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"insights",
												":projectOwner",
												":projectId",
												":id"
											],
											"variable": [
												{
													"key": "projectOwner"
												},
												{
													"key": "projectId"
												},
												{
													"key": "id"
												}
											]
										}
									},
									"status": "Internal Server Error",
									"code": 500,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n \"code\": 1519430,\n \"message\": \"enim\",\n \"details\": \"do\"\n}"
								}
							]
						},
						{
							"name": "Retrieve a project insight by version.",
							"request": {
								"auth": {
									"type": "bearer",
									"bearer": [
										{
											"key": "token",
											"value": "{{readWrite}}",
											"type": "string"
										}
									]
								},
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{baseUrl}}/insights/:projectOwner/:projectId/:id/v/:versionId",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"insights",
										":projectOwner",
										":projectId",
										":id",
										"v",
										":versionId"
									],
									"variable": [
										{
											"key": "projectOwner",
											"value": "{{org}}",
											"description": "(Required) "
										},
										{
											"key": "projectId",
											"value": "{{projectid}}",
											"description": "(Required) "
										},
										{
											"key": "id",
											"value": "{{insightid}}",
											"description": "(Required) "
										},
										{
											"key": "versionId",
											"value": "{{insightVersion}}",
											"description": "(Required) "
										}
									]
								}
							},
							"response": [
								{
									"name": "Successfully retrieved insight by version.",
									"originalRequest": {
										"method": "GET",
										"header": [
											{
												"description": "Added as a part of security scheme: oauth2",
												"key": "Authorization",
												"value": "<token>"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/insights/:projectOwner/:projectId/:id/v/:versionId",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"insights",
												":projectOwner",
												":projectId",
												":id",
												"v",
												":versionId"
											],
											"variable": [
												{
													"key": "projectOwner"
												},
												{
													"key": "projectId"
												},
												{
													"key": "id"
												},
												{
													"key": "versionId"
												}
											]
										}
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n \"author\": \"culpa voluptate in\",\n \"body\": {\n  \"imageUrl\": \"https://ydTflzmSUKENCNyQGJYrxC.emkcNSnwAH140PEWDfBeekBQ1DoP4AMNeHeESpOjcE7\",\n  \"embedUrl\": \"https://ueYRnXOtMvTKckWGudc.efrURGt54,kauHZuUR1REQFGqpnEn2YT2oPA\",\n  \"markdownBody\": \"magna voluptate aute\"\n },\n \"created\": \"veniam Ut\",\n \"id\": \"cupidatat ut\",\n \"title\": \"consectetur aute nostrud\",\n \"updated\": \"voluptate velit labore laborum Lorem\",\n \"version\": \"mollit ut anim\",\n \"description\": \"est sit\",\n \"sourceLink\": \"http://tAPOzBEVfFHcTBjFZlBZjaszjWKDyk.bmtKdQy.bd800MGK6kD7Z67laFcuTHMlY-U+aulMoBwG3+UQSm\",\n \"dataSourceLinks\": [\n  \"http://SMKCzIoNdjHZYXNXrfaBPEbYwdWSSnzt.eagR1skoi5H9DeqkC+nG2-JPi2DPTGbG4GUaQpri64PhK+VEAiXUYogXozkPXmQEj\",\n  \"http://isWNKPdAOHOIfS.joQEpspVKFmlDw58Yrla0fK2s\"\n ],\n \"thumbnail\": \"http://bucevALmkgHPHUfseuFGCTghpAN.shqvFgzS-8bHvO\"\n}"
								},
								{
									"name": "Bad request",
									"originalRequest": {
										"method": "GET",
										"header": [
											{
												"description": "Added as a part of security scheme: oauth2",
												"key": "Authorization",
												"value": "<token>"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/insights/:projectOwner/:projectId/:id/v/:versionId",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"insights",
												":projectOwner",
												":projectId",
												":id",
												"v",
												":versionId"
											],
											"variable": [
												{
													"key": "projectOwner"
												},
												{
													"key": "projectId"
												},
												{
													"key": "id"
												},
												{
													"key": "versionId"
												}
											]
										}
									},
									"status": "Bad Request",
									"code": 400,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n \"code\": 1519430,\n \"message\": \"enim\",\n \"details\": \"do\"\n}"
								},
								{
									"name": "Unauthorized",
									"originalRequest": {
										"method": "GET",
										"header": [
											{
												"description": "Added as a part of security scheme: oauth2",
												"key": "Authorization",
												"value": "<token>"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/insights/:projectOwner/:projectId/:id/v/:versionId",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"insights",
												":projectOwner",
												":projectId",
												":id",
												"v",
												":versionId"
											],
											"variable": [
												{
													"key": "projectOwner"
												},
												{
													"key": "projectId"
												},
												{
													"key": "id"
												},
												{
													"key": "versionId"
												}
											]
										}
									},
									"status": "Unauthorized",
									"code": 401,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n \"code\": 1519430,\n \"message\": \"enim\",\n \"details\": \"do\"\n}"
								},
								{
									"name": "Forbidden",
									"originalRequest": {
										"method": "GET",
										"header": [
											{
												"description": "Added as a part of security scheme: oauth2",
												"key": "Authorization",
												"value": "<token>"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/insights/:projectOwner/:projectId/:id/v/:versionId",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"insights",
												":projectOwner",
												":projectId",
												":id",
												"v",
												":versionId"
											],
											"variable": [
												{
													"key": "projectOwner"
												},
												{
													"key": "projectId"
												},
												{
													"key": "id"
												},
												{
													"key": "versionId"
												}
											]
										}
									},
									"status": "Forbidden",
									"code": 403,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n \"code\": 1519430,\n \"message\": \"enim\",\n \"details\": \"do\"\n}"
								},
								{
									"name": "Not found",
									"originalRequest": {
										"method": "GET",
										"header": [
											{
												"description": "Added as a part of security scheme: oauth2",
												"key": "Authorization",
												"value": "<token>"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/insights/:projectOwner/:projectId/:id/v/:versionId",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"insights",
												":projectOwner",
												":projectId",
												":id",
												"v",
												":versionId"
											],
											"variable": [
												{
													"key": "projectOwner"
												},
												{
													"key": "projectId"
												},
												{
													"key": "id"
												},
												{
													"key": "versionId"
												}
											]
										}
									},
									"status": "Not Found",
									"code": 404,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n \"code\": 1519430,\n \"message\": \"enim\",\n \"details\": \"do\"\n}"
								},
								{
									"name": "Server error",
									"originalRequest": {
										"method": "GET",
										"header": [
											{
												"description": "Added as a part of security scheme: oauth2",
												"key": "Authorization",
												"value": "<token>"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/insights/:projectOwner/:projectId/:id/v/:versionId",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"insights",
												":projectOwner",
												":projectId",
												":id",
												"v",
												":versionId"
											],
											"variable": [
												{
													"key": "projectOwner"
												},
												{
													"key": "projectId"
												},
												{
													"key": "id"
												},
												{
													"key": "versionId"
												}
											]
										}
									},
									"status": "Internal Server Error",
									"code": 500,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n \"code\": 1519430,\n \"message\": \"enim\",\n \"details\": \"do\"\n}"
								}
							]
						}
					]
				},
				{
					"name": "Get insights for project.",
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{readWrite}}",
									"type": "string"
								}
							]
						},
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{baseUrl}}/insights/:projectOwner/:projectId",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"insights",
								":projectOwner",
								":projectId"
							],
							"query": [
								{
									"key": "limit",
									"value": "adipisicing elit ullamco",
									"disabled": true
								},
								{
									"key": "next",
									"value": "adipisicing elit ullamco",
									"disabled": true
								}
							],
							"variable": [
								{
									"key": "projectOwner",
									"value": "{{org}}",
									"description": "(Required) "
								},
								{
									"key": "projectId",
									"value": "{{projectid}}",
									"description": "(Required) "
								}
							]
						}
					},
					"response": [
						{
							"name": "Successfully retrieved project insights",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"description": "Added as a part of security scheme: oauth2",
										"key": "Authorization",
										"value": "<token>"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/insights/:projectOwner/:projectId?limit=adipisicing elit ullamco&next=adipisicing elit ullamco",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"insights",
										":projectOwner",
										":projectId"
									],
									"query": [
										{
											"key": "limit",
											"value": "adipisicing elit ullamco"
										},
										{
											"key": "next",
											"value": "adipisicing elit ullamco"
										}
									],
									"variable": [
										{
											"key": "projectOwner"
										},
										{
											"key": "projectId"
										}
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n \"count\": 40392312,\n \"records\": [\n  {\n   \"author\": \"enim culpa\",\n   \"body\": {\n    \"imageUrl\": {\n     \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    \"embedUrl\": {\n     \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    \"markdownBody\": {\n     \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    }\n   },\n   \"created\": \"ut laborum culpa commodo ad\",\n   \"id\": \"proident ex fugiat\",\n   \"title\": \"cillum anim est quis do\",\n   \"updated\": \"\",\n   \"version\": \"est sed Lorem eiusmod amet\",\n   \"description\": \"sed culpa esse\",\n   \"sourceLink\": \"http://YEpWawnBcoiIwKHQm.bjzvSqCIosuU9Kv0hEG1tUjcLFgqkfpM8bdH6zkJmBaPGP\",\n   \"dataSourceLinks\": [\n    \"http://lfsduLZbWTryjuGFqcmwwBqtvHGnorw.nqqciIrGp-KZfn7nAgN4AqOrV.ximjuMMmK\",\n    \"http://jqjJt.ewauHqnNCSzeRGV7CzeSm8r\"\n   ],\n   \"thumbnail\": \"https://jFGrfEzEHfO.cfkdjbPFjswEwRrGCTo5LwX7GCREfLTp-xwn2FJfMHMDafFXu4Spmp6\"\n  },\n  {\n   \"author\": \"Excepteur elit Ut\",\n   \"body\": {\n    \"imageUrl\": {\n     \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    \"embedUrl\": {\n     \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    \"markdownBody\": {\n     \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    }\n   },\n   \"created\": \"incididunt culpa\",\n   \"id\": \"eu\",\n   \"title\": \"sit do enim nulla\",\n   \"updated\": \"culpa aliquip ipsum ad sunt\",\n   \"version\": \"do exercitation\",\n   \"description\": \"ut\",\n   \"sourceLink\": \"https://vNQyzjnQAUsyRbvudxRUbRLCQnCO.xshK3lDHN+dMiDLNlthGYFuQvnh1RKEn.indfQBN2a\",\n   \"dataSourceLinks\": [\n    \"https://ANIyZubrjdEdCvWSYOvK.diiex9O-\",\n    \"https://UrTNWUwP.mzq0oQOD7dCInR8DXFQ-PNwgJzco\"\n   ],\n   \"thumbnail\": \"http://OXwFDbBTKHWcRGBHvZ.rdrJCIK5QiMcc\"\n  }\n ],\n \"nextPageToken\": \"nulla sit aute in elit\"\n}"
						},
						{
							"name": "Bad request",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"description": "Added as a part of security scheme: oauth2",
										"key": "Authorization",
										"value": "<token>"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/insights/:projectOwner/:projectId?limit=adipisicing elit ullamco&next=adipisicing elit ullamco",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"insights",
										":projectOwner",
										":projectId"
									],
									"query": [
										{
											"key": "limit",
											"value": "adipisicing elit ullamco"
										},
										{
											"key": "next",
											"value": "adipisicing elit ullamco"
										}
									],
									"variable": [
										{
											"key": "projectOwner"
										},
										{
											"key": "projectId"
										}
									]
								}
							},
							"status": "Bad Request",
							"code": 400,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n \"code\": 1519430,\n \"message\": \"enim\",\n \"details\": \"do\"\n}"
						},
						{
							"name": "Unauthorized",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"description": "Added as a part of security scheme: oauth2",
										"key": "Authorization",
										"value": "<token>"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/insights/:projectOwner/:projectId?limit=adipisicing elit ullamco&next=adipisicing elit ullamco",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"insights",
										":projectOwner",
										":projectId"
									],
									"query": [
										{
											"key": "limit",
											"value": "adipisicing elit ullamco"
										},
										{
											"key": "next",
											"value": "adipisicing elit ullamco"
										}
									],
									"variable": [
										{
											"key": "projectOwner"
										},
										{
											"key": "projectId"
										}
									]
								}
							},
							"status": "Unauthorized",
							"code": 401,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n \"code\": 1519430,\n \"message\": \"enim\",\n \"details\": \"do\"\n}"
						},
						{
							"name": "Forbidden",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"description": "Added as a part of security scheme: oauth2",
										"key": "Authorization",
										"value": "<token>"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/insights/:projectOwner/:projectId?limit=adipisicing elit ullamco&next=adipisicing elit ullamco",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"insights",
										":projectOwner",
										":projectId"
									],
									"query": [
										{
											"key": "limit",
											"value": "adipisicing elit ullamco"
										},
										{
											"key": "next",
											"value": "adipisicing elit ullamco"
										}
									],
									"variable": [
										{
											"key": "projectOwner"
										},
										{
											"key": "projectId"
										}
									]
								}
							},
							"status": "Forbidden",
							"code": 403,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n \"code\": 1519430,\n \"message\": \"enim\",\n \"details\": \"do\"\n}"
						},
						{
							"name": "Not found",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"description": "Added as a part of security scheme: oauth2",
										"key": "Authorization",
										"value": "<token>"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/insights/:projectOwner/:projectId?limit=adipisicing elit ullamco&next=adipisicing elit ullamco",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"insights",
										":projectOwner",
										":projectId"
									],
									"query": [
										{
											"key": "limit",
											"value": "adipisicing elit ullamco"
										},
										{
											"key": "next",
											"value": "adipisicing elit ullamco"
										}
									],
									"variable": [
										{
											"key": "projectOwner"
										},
										{
											"key": "projectId"
										}
									]
								}
							},
							"status": "Not Found",
							"code": 404,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n \"code\": 1519430,\n \"message\": \"enim\",\n \"details\": \"do\"\n}"
						},
						{
							"name": "Server error",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"description": "Added as a part of security scheme: oauth2",
										"key": "Authorization",
										"value": "<token>"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/insights/:projectOwner/:projectId?limit=adipisicing elit ullamco&next=adipisicing elit ullamco",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"insights",
										":projectOwner",
										":projectId"
									],
									"query": [
										{
											"key": "limit",
											"value": "adipisicing elit ullamco"
										},
										{
											"key": "next",
											"value": "adipisicing elit ullamco"
										}
									],
									"variable": [
										{
											"key": "projectOwner"
										},
										{
											"key": "projectId"
										}
									]
								}
							},
							"status": "Internal Server Error",
							"code": 500,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n \"code\": 1519430,\n \"message\": \"enim\",\n \"details\": \"do\"\n}"
						}
					]
				},
				{
					"name": "Create new insight for a project.",
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{readWrite}}",
									"type": "string"
								}
							]
						},
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"body\": {\n        \"imageUrl\": \"https://www.google.com/url?sa=i&url=https%3A%2F%2Fen.wikipedia.org%2Fwiki%2FImage&psig=AOvVaw3G6MMqNhpShKs-i3D3HEOe&ust=1636051627257000&source=images&cd=vfe&ved=0CAsQjRxqFwoTCKDU97Lt_PMCFQAAAAAdAAAAABAD\"\n    },\n    \"title\": \"an insight\",\n    \"description\": \"my little insight\",\n    \"thumbnail\": \"https://www.pixsy.com/wp-content/uploads/2021/04/ben-sweet-2LowviVHZ-E-unsplash-1.jpeg\"\n}"
						},
						"url": {
							"raw": "{{baseUrl}}/insights/:projectOwner/:projectId",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"insights",
								":projectOwner",
								":projectId"
							],
							"variable": [
								{
									"key": "projectOwner",
									"value": "{{org}}",
									"description": "(Required) "
								},
								{
									"key": "projectId",
									"value": "{{projectid}}",
									"description": "(Required) "
								}
							]
						}
					},
					"response": [
						{
							"name": "Insight created successfully.",
							"originalRequest": {
								"method": "POST",
								"header": [
									{
										"description": "Added as a part of security scheme: oauth2",
										"key": "Authorization",
										"value": "<token>"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"body\": {\n        \"imageUrl\": \"http://VoZrMsGPXfzUNonQwBywVkMvFu.dmftxxJ+L\",\n        \"embedUrl\": \"https://gOHExYcupjqTSeClKsFTnLDGNh.jhhNbgjZ7wk8rFKsvI-clDAPyT\",\n        \"markdownBody\": \"consectetur nost\"\n    },\n    \"title\": \"nostrud quis ex ut commodo\",\n    \"description\": \"consequat sunt exercitation\",\n    \"sourceLink\": \"https://GUxYDvFWzPkKyCGWqKmK.qoQcPvLGwp82zOF2A-w+yTlVS5k.3ivmVi0Tl\",\n    \"dataSourceLinks\": [\n        \"https://zZJnRmdiXAvCgoLEkP.ndS+VaoxM81gku3220bGV23L\",\n        \"https://UTMhGaKALGJENQ.vuyiRLFUkio\"\n    ],\n    \"thumbnail\": \"http://jHTNe.waaAPKQsJJYQV1hq+\"\n}"
								},
								"url": {
									"raw": "{{baseUrl}}/insights/:projectOwner/:projectId",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"insights",
										":projectOwner",
										":projectId"
									],
									"variable": [
										{
											"key": "projectOwner"
										},
										{
											"key": "projectId"
										}
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n \"uri\": \"http://A.sfQ-gVx.2oEMnKdGnZwvPKe1go1ZBeMhzDIKRr\",\n \"message\": \"nisi nulla quis veniam\"\n}"
						},
						{
							"name": "Bad request",
							"originalRequest": {
								"method": "POST",
								"header": [
									{
										"description": "Added as a part of security scheme: oauth2",
										"key": "Authorization",
										"value": "<token>"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"body\": {\n        \"imageUrl\": \"http://VoZrMsGPXfzUNonQwBywVkMvFu.dmftxxJ+L\",\n        \"embedUrl\": \"https://gOHExYcupjqTSeClKsFTnLDGNh.jhhNbgjZ7wk8rFKsvI-clDAPyT\",\n        \"markdownBody\": \"consectetur nost\"\n    },\n    \"title\": \"nostrud quis ex ut commodo\",\n    \"description\": \"consequat sunt exercitation\",\n    \"sourceLink\": \"https://GUxYDvFWzPkKyCGWqKmK.qoQcPvLGwp82zOF2A-w+yTlVS5k.3ivmVi0Tl\",\n    \"dataSourceLinks\": [\n        \"https://zZJnRmdiXAvCgoLEkP.ndS+VaoxM81gku3220bGV23L\",\n        \"https://UTMhGaKALGJENQ.vuyiRLFUkio\"\n    ],\n    \"thumbnail\": \"http://jHTNe.waaAPKQsJJYQV1hq+\"\n}"
								},
								"url": {
									"raw": "{{baseUrl}}/insights/:projectOwner/:projectId",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"insights",
										":projectOwner",
										":projectId"
									],
									"variable": [
										{
											"key": "projectOwner"
										},
										{
											"key": "projectId"
										}
									]
								}
							},
							"status": "Bad Request",
							"code": 400,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n \"code\": 1519430,\n \"message\": \"enim\",\n \"details\": \"do\"\n}"
						},
						{
							"name": "Unauthorized",
							"originalRequest": {
								"method": "POST",
								"header": [
									{
										"description": "Added as a part of security scheme: oauth2",
										"key": "Authorization",
										"value": "<token>"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"body\": {\n        \"imageUrl\": \"http://VoZrMsGPXfzUNonQwBywVkMvFu.dmftxxJ+L\",\n        \"embedUrl\": \"https://gOHExYcupjqTSeClKsFTnLDGNh.jhhNbgjZ7wk8rFKsvI-clDAPyT\",\n        \"markdownBody\": \"consectetur nost\"\n    },\n    \"title\": \"nostrud quis ex ut commodo\",\n    \"description\": \"consequat sunt exercitation\",\n    \"sourceLink\": \"https://GUxYDvFWzPkKyCGWqKmK.qoQcPvLGwp82zOF2A-w+yTlVS5k.3ivmVi0Tl\",\n    \"dataSourceLinks\": [\n        \"https://zZJnRmdiXAvCgoLEkP.ndS+VaoxM81gku3220bGV23L\",\n        \"https://UTMhGaKALGJENQ.vuyiRLFUkio\"\n    ],\n    \"thumbnail\": \"http://jHTNe.waaAPKQsJJYQV1hq+\"\n}"
								},
								"url": {
									"raw": "{{baseUrl}}/insights/:projectOwner/:projectId",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"insights",
										":projectOwner",
										":projectId"
									],
									"variable": [
										{
											"key": "projectOwner"
										},
										{
											"key": "projectId"
										}
									]
								}
							},
							"status": "Unauthorized",
							"code": 401,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n \"code\": 1519430,\n \"message\": \"enim\",\n \"details\": \"do\"\n}"
						},
						{
							"name": "Forbidden",
							"originalRequest": {
								"method": "POST",
								"header": [
									{
										"description": "Added as a part of security scheme: oauth2",
										"key": "Authorization",
										"value": "<token>"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"body\": {\n        \"imageUrl\": \"http://VoZrMsGPXfzUNonQwBywVkMvFu.dmftxxJ+L\",\n        \"embedUrl\": \"https://gOHExYcupjqTSeClKsFTnLDGNh.jhhNbgjZ7wk8rFKsvI-clDAPyT\",\n        \"markdownBody\": \"consectetur nost\"\n    },\n    \"title\": \"nostrud quis ex ut commodo\",\n    \"description\": \"consequat sunt exercitation\",\n    \"sourceLink\": \"https://GUxYDvFWzPkKyCGWqKmK.qoQcPvLGwp82zOF2A-w+yTlVS5k.3ivmVi0Tl\",\n    \"dataSourceLinks\": [\n        \"https://zZJnRmdiXAvCgoLEkP.ndS+VaoxM81gku3220bGV23L\",\n        \"https://UTMhGaKALGJENQ.vuyiRLFUkio\"\n    ],\n    \"thumbnail\": \"http://jHTNe.waaAPKQsJJYQV1hq+\"\n}"
								},
								"url": {
									"raw": "{{baseUrl}}/insights/:projectOwner/:projectId",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"insights",
										":projectOwner",
										":projectId"
									],
									"variable": [
										{
											"key": "projectOwner"
										},
										{
											"key": "projectId"
										}
									]
								}
							},
							"status": "Forbidden",
							"code": 403,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n \"code\": 1519430,\n \"message\": \"enim\",\n \"details\": \"do\"\n}"
						},
						{
							"name": "Not found",
							"originalRequest": {
								"method": "POST",
								"header": [
									{
										"description": "Added as a part of security scheme: oauth2",
										"key": "Authorization",
										"value": "<token>"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"body\": {\n        \"imageUrl\": \"http://VoZrMsGPXfzUNonQwBywVkMvFu.dmftxxJ+L\",\n        \"embedUrl\": \"https://gOHExYcupjqTSeClKsFTnLDGNh.jhhNbgjZ7wk8rFKsvI-clDAPyT\",\n        \"markdownBody\": \"consectetur nost\"\n    },\n    \"title\": \"nostrud quis ex ut commodo\",\n    \"description\": \"consequat sunt exercitation\",\n    \"sourceLink\": \"https://GUxYDvFWzPkKyCGWqKmK.qoQcPvLGwp82zOF2A-w+yTlVS5k.3ivmVi0Tl\",\n    \"dataSourceLinks\": [\n        \"https://zZJnRmdiXAvCgoLEkP.ndS+VaoxM81gku3220bGV23L\",\n        \"https://UTMhGaKALGJENQ.vuyiRLFUkio\"\n    ],\n    \"thumbnail\": \"http://jHTNe.waaAPKQsJJYQV1hq+\"\n}"
								},
								"url": {
									"raw": "{{baseUrl}}/insights/:projectOwner/:projectId",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"insights",
										":projectOwner",
										":projectId"
									],
									"variable": [
										{
											"key": "projectOwner"
										},
										{
											"key": "projectId"
										}
									]
								}
							},
							"status": "Not Found",
							"code": 404,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n \"code\": 1519430,\n \"message\": \"enim\",\n \"details\": \"do\"\n}"
						},
						{
							"name": "Bad request",
							"originalRequest": {
								"method": "POST",
								"header": [
									{
										"description": "Added as a part of security scheme: oauth2",
										"key": "Authorization",
										"value": "<token>"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"body\": {\n        \"imageUrl\": \"http://VoZrMsGPXfzUNonQwBywVkMvFu.dmftxxJ+L\",\n        \"embedUrl\": \"https://gOHExYcupjqTSeClKsFTnLDGNh.jhhNbgjZ7wk8rFKsvI-clDAPyT\",\n        \"markdownBody\": \"consectetur nost\"\n    },\n    \"title\": \"nostrud quis ex ut commodo\",\n    \"description\": \"consequat sunt exercitation\",\n    \"sourceLink\": \"https://GUxYDvFWzPkKyCGWqKmK.qoQcPvLGwp82zOF2A-w+yTlVS5k.3ivmVi0Tl\",\n    \"dataSourceLinks\": [\n        \"https://zZJnRmdiXAvCgoLEkP.ndS+VaoxM81gku3220bGV23L\",\n        \"https://UTMhGaKALGJENQ.vuyiRLFUkio\"\n    ],\n    \"thumbnail\": \"http://jHTNe.waaAPKQsJJYQV1hq+\"\n}"
								},
								"url": {
									"raw": "{{baseUrl}}/insights/:projectOwner/:projectId",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"insights",
										":projectOwner",
										":projectId"
									],
									"variable": [
										{
											"key": "projectOwner"
										},
										{
											"key": "projectId"
										}
									]
								}
							},
							"status": "Unprocessable Entity (WebDAV) (RFC 4918)",
							"code": 422,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n \"code\": 1519430,\n \"message\": \"enim\",\n \"details\": \"do\"\n}"
						},
						{
							"name": "Server error",
							"originalRequest": {
								"method": "POST",
								"header": [
									{
										"description": "Added as a part of security scheme: oauth2",
										"key": "Authorization",
										"value": "<token>"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"body\": {\n        \"imageUrl\": \"http://VoZrMsGPXfzUNonQwBywVkMvFu.dmftxxJ+L\",\n        \"embedUrl\": \"https://gOHExYcupjqTSeClKsFTnLDGNh.jhhNbgjZ7wk8rFKsvI-clDAPyT\",\n        \"markdownBody\": \"consectetur nost\"\n    },\n    \"title\": \"nostrud quis ex ut commodo\",\n    \"description\": \"consequat sunt exercitation\",\n    \"sourceLink\": \"https://GUxYDvFWzPkKyCGWqKmK.qoQcPvLGwp82zOF2A-w+yTlVS5k.3ivmVi0Tl\",\n    \"dataSourceLinks\": [\n        \"https://zZJnRmdiXAvCgoLEkP.ndS+VaoxM81gku3220bGV23L\",\n        \"https://UTMhGaKALGJENQ.vuyiRLFUkio\"\n    ],\n    \"thumbnail\": \"http://jHTNe.waaAPKQsJJYQV1hq+\"\n}"
								},
								"url": {
									"raw": "{{baseUrl}}/insights/:projectOwner/:projectId",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"insights",
										":projectOwner",
										":projectId"
									],
									"variable": [
										{
											"key": "projectOwner"
										},
										{
											"key": "projectId"
										}
									]
								}
							},
							"status": "Internal Server Error",
							"code": 500,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n \"code\": 1519430,\n \"message\": \"enim\",\n \"details\": \"do\"\n}"
						}
					]
				}
			]
		},
		{
			"name": "metadata",
			"item": [
				{
					"name": "analysis/{owner}",
					"item": [
						{
							"name": "{id}",
							"item": [
								{
									"name": "Get an individual metadata analysis",
									"request": {
										"auth": {
											"type": "bearer",
											"bearer": [
												{
													"key": "token",
													"value": "{{readWrite}}",
													"type": "string"
												}
											]
										},
										"method": "GET",
										"header": [],
										"url": {
											"raw": "{{baseUrl}}/metadata/analysis/:owner/:id",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"metadata",
												"analysis",
												":owner",
												":id"
											],
											"variable": [
												{
													"key": "owner",
													"value": "{{org}}",
													"description": "(Required) "
												},
												{
													"key": "id",
													"value": "{{analysisid}}",
													"description": "(Required) "
												}
											]
										}
									},
									"response": [
										{
											"name": "successful operation",
											"originalRequest": {
												"method": "GET",
												"header": [
													{
														"description": "Added as a part of security scheme: oauth2",
														"key": "Authorization",
														"value": "<token>"
													}
												],
												"url": {
													"raw": "{{baseUrl}}/metadata/analysis/:owner/:id",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"metadata",
														"analysis",
														":owner",
														":id"
													],
													"variable": [
														{
															"key": "owner"
														},
														{
															"key": "id"
														}
													]
												}
											},
											"status": "OK",
											"code": 200,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"body": "{\n \"created\": \"1988-06-04T23:43:49.655Z\",\n \"id\": \"anim et eiusmod cupidatat\",\n \"owner\": \"in fugiat officia\",\n \"visibility\": \"OPEN\",\n \"title\": \"sed ut\",\n \"category\": \"ad cupidatat\",\n \"typeLabel\": \"elit\",\n \"typeIri\": \"esse nostrud magna id\",\n \"rootParentTypeLabel\": \"velit esse\",\n \"rootParentTypeIri\": \"dolore mollit irure officia\",\n \"table\": {\n  \"owner\": \"mollit\",\n  \"sourceId\": \"occaecat eu\",\n  \"tableId\": \"sunt\"\n },\n \"dataType\": \"quis eiusmod\",\n \"columnIndex\": 56482049,\n \"description\": \"non d\",\n \"encodedIri\": \"nostrud magna mollit non\",\n \"summary\": \"veniam non nostrud\",\n \"url\": \"http://l.oincbiP+ZuKrkwFxuvi\",\n \"updated\": \"1958-10-08T08:29:55.084Z\",\n \"collections\": [\n  {\n   \"agentid\": \"magna\",\n   \"catalogid\": \"consequat cupidatat non\",\n   \"referent\": \"adipisicing officia ut dolore\"\n  },\n  {\n   \"agentid\": \"deserunt veniam\",\n   \"catalogid\": \"voluptate amet aliqua sed reprehenderit\",\n   \"referent\": \"cillum reprehenderit amet\"\n  }\n ],\n \"relationshipTypes\": [\n  \"incididunt consequat ad\",\n  \"esse Excepteur sed in\"\n ],\n \"tags\": [\n  \"cillum \",\n  \"dolor labore in Duis\"\n ],\n \"externalUrls\": [\n  \"ut dolor non minim\",\n  \"id\"\n ],\n \"assetStatus\": {\n  \"assetStatusLabel\": \"sunt ex aute do\",\n  \"dispositionLabel\": \"laboris re\"\n },\n \"properties\": {}\n}"
										},
										{
											"name": "Bad Request",
											"originalRequest": {
												"method": "GET",
												"header": [
													{
														"description": "Added as a part of security scheme: oauth2",
														"key": "Authorization",
														"value": "<token>"
													}
												],
												"url": {
													"raw": "{{baseUrl}}/metadata/analysis/:owner/:id",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"metadata",
														"analysis",
														":owner",
														":id"
													],
													"variable": [
														{
															"key": "owner"
														},
														{
															"key": "id"
														}
													]
												}
											},
											"status": "Bad Request",
											"code": 400,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"body": "{\n \"code\": 1519430,\n \"message\": \"enim\",\n \"details\": \"do\"\n}"
										},
										{
											"name": "Not found",
											"originalRequest": {
												"method": "GET",
												"header": [
													{
														"description": "Added as a part of security scheme: oauth2",
														"key": "Authorization",
														"value": "<token>"
													}
												],
												"url": {
													"raw": "{{baseUrl}}/metadata/analysis/:owner/:id",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"metadata",
														"analysis",
														":owner",
														":id"
													],
													"variable": [
														{
															"key": "owner"
														},
														{
															"key": "id"
														}
													]
												}
											},
											"status": "Not Found",
											"code": 404,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"body": "{\n \"code\": 1519430,\n \"message\": \"enim\",\n \"details\": \"do\"\n}"
										}
									]
								},
								{
									"name": "Replace an existing analysis",
									"request": {
										"auth": {
											"type": "bearer",
											"bearer": [
												{
													"key": "token",
													"value": "{{readWrite}}",
													"type": "string"
												}
											]
										},
										"method": "PUT",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/json"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n    \"collections\": [\n        \"My collection\"\n    ],\n    \"title\": \"crypto.snowflake\",\n    \"typeLabel\": \"Tableau dashboard\",\n    \"description\": \"Aid given to charity is an option that can be exercised by individuals and corporations\",\n    \"tags\": [\n        \"elit nulla consequat\",\n        \"officia\"\n    ]\n}"
										},
										"url": {
											"raw": "{{baseUrl}}/metadata/analysis/:owner/:id",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"metadata",
												"analysis",
												":owner",
												":id"
											],
											"variable": [
												{
													"key": "owner",
													"value": "{{org}}",
													"description": "(Required) "
												},
												{
													"key": "id",
													"value": "{{analysisid}}",
													"description": "(Required) "
												}
											]
										}
									},
									"response": [
										{
											"name": "Analysis replaced successfully.",
											"originalRequest": {
												"method": "PUT",
												"header": [
													{
														"description": "Added as a part of security scheme: oauth2",
														"key": "Authorization",
														"value": "<token>"
													}
												],
												"url": {
													"raw": "{{baseUrl}}/metadata/analysis/:owner/:id",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"metadata",
														"analysis",
														":owner",
														":id"
													],
													"variable": [
														{
															"key": "owner"
														},
														{
															"key": "id"
														}
													]
												}
											},
											"status": "OK",
											"code": 200,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"body": "{\n \"message\": \"voluptate culpa nulla esse\"\n}"
										},
										{
											"name": "Bad request",
											"originalRequest": {
												"method": "PUT",
												"header": [
													{
														"description": "Added as a part of security scheme: oauth2",
														"key": "Authorization",
														"value": "<token>"
													}
												],
												"url": {
													"raw": "{{baseUrl}}/metadata/analysis/:owner/:id",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"metadata",
														"analysis",
														":owner",
														":id"
													],
													"variable": [
														{
															"key": "owner"
														},
														{
															"key": "id"
														}
													]
												}
											},
											"status": "Bad Request",
											"code": 400,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"body": "{\n \"code\": 1519430,\n \"message\": \"enim\",\n \"details\": \"do\"\n}"
										},
										{
											"name": "Unauthorized",
											"originalRequest": {
												"method": "PUT",
												"header": [
													{
														"description": "Added as a part of security scheme: oauth2",
														"key": "Authorization",
														"value": "<token>"
													}
												],
												"url": {
													"raw": "{{baseUrl}}/metadata/analysis/:owner/:id",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"metadata",
														"analysis",
														":owner",
														":id"
													],
													"variable": [
														{
															"key": "owner"
														},
														{
															"key": "id"
														}
													]
												}
											},
											"status": "Unauthorized",
											"code": 401,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"body": "{\n \"code\": 1519430,\n \"message\": \"enim\",\n \"details\": \"do\"\n}"
										},
										{
											"name": "Forbidden",
											"originalRequest": {
												"method": "PUT",
												"header": [
													{
														"description": "Added as a part of security scheme: oauth2",
														"key": "Authorization",
														"value": "<token>"
													}
												],
												"url": {
													"raw": "{{baseUrl}}/metadata/analysis/:owner/:id",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"metadata",
														"analysis",
														":owner",
														":id"
													],
													"variable": [
														{
															"key": "owner"
														},
														{
															"key": "id"
														}
													]
												}
											},
											"status": "Forbidden",
											"code": 403,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"body": "{\n \"code\": 1519430,\n \"message\": \"enim\",\n \"details\": \"do\"\n}"
										},
										{
											"name": "Not found",
											"originalRequest": {
												"method": "PUT",
												"header": [
													{
														"description": "Added as a part of security scheme: oauth2",
														"key": "Authorization",
														"value": "<token>"
													}
												],
												"url": {
													"raw": "{{baseUrl}}/metadata/analysis/:owner/:id",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"metadata",
														"analysis",
														":owner",
														":id"
													],
													"variable": [
														{
															"key": "owner"
														},
														{
															"key": "id"
														}
													]
												}
											},
											"status": "Not Found",
											"code": 404,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"body": "{\n \"code\": 1519430,\n \"message\": \"enim\",\n \"details\": \"do\"\n}"
										},
										{
											"name": "Bad request",
											"originalRequest": {
												"method": "PUT",
												"header": [
													{
														"description": "Added as a part of security scheme: oauth2",
														"key": "Authorization",
														"value": "<token>"
													}
												],
												"url": {
													"raw": "{{baseUrl}}/metadata/analysis/:owner/:id",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"metadata",
														"analysis",
														":owner",
														":id"
													],
													"variable": [
														{
															"key": "owner"
														},
														{
															"key": "id"
														}
													]
												}
											},
											"status": "Unprocessable Entity (WebDAV) (RFC 4918)",
											"code": 422,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"body": "{\n \"code\": 1519430,\n \"message\": \"enim\",\n \"details\": \"do\"\n}"
										},
										{
											"name": "Server error",
											"originalRequest": {
												"method": "PUT",
												"header": [
													{
														"description": "Added as a part of security scheme: oauth2",
														"key": "Authorization",
														"value": "<token>"
													}
												],
												"url": {
													"raw": "{{baseUrl}}/metadata/analysis/:owner/:id",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"metadata",
														"analysis",
														":owner",
														":id"
													],
													"variable": [
														{
															"key": "owner"
														},
														{
															"key": "id"
														}
													]
												}
											},
											"status": "Internal Server Error",
											"code": 500,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"body": "{\n \"code\": 1519430,\n \"message\": \"enim\",\n \"details\": \"do\"\n}"
										}
									]
								},
								{
									"name": "Delete an Analysis.",
									"request": {
										"auth": {
											"type": "oauth2"
										},
										"method": "DELETE",
										"header": [],
										"url": {
											"raw": "{{baseUrl}}/metadata/analysis/:owner/:id",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"metadata",
												"analysis",
												":owner",
												":id"
											],
											"variable": [
												{
													"key": "owner",
													"value": "adipisicing elit ullamco",
													"description": "(Required) "
												},
												{
													"key": "id",
													"value": "adipisicing elit ullamco",
													"description": "(Required) "
												}
											]
										}
									},
									"response": [
										{
											"name": "Analysis has been successfully deleted.",
											"originalRequest": {
												"method": "DELETE",
												"header": [
													{
														"description": "Added as a part of security scheme: oauth2",
														"key": "Authorization",
														"value": "<token>"
													}
												],
												"url": {
													"raw": "{{baseUrl}}/metadata/analysis/:owner/:id",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"metadata",
														"analysis",
														":owner",
														":id"
													],
													"variable": [
														{
															"key": "owner"
														},
														{
															"key": "id"
														}
													]
												}
											},
											"status": "OK",
											"code": 200,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"body": "{\n \"message\": \"voluptate culpa nulla esse\"\n}"
										},
										{
											"name": "Bad request",
											"originalRequest": {
												"method": "DELETE",
												"header": [
													{
														"description": "Added as a part of security scheme: oauth2",
														"key": "Authorization",
														"value": "<token>"
													}
												],
												"url": {
													"raw": "{{baseUrl}}/metadata/analysis/:owner/:id",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"metadata",
														"analysis",
														":owner",
														":id"
													],
													"variable": [
														{
															"key": "owner"
														},
														{
															"key": "id"
														}
													]
												}
											},
											"status": "Bad Request",
											"code": 400,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"body": "{\n \"code\": 1519430,\n \"message\": \"enim\",\n \"details\": \"do\"\n}"
										},
										{
											"name": "Unauthorized",
											"originalRequest": {
												"method": "DELETE",
												"header": [
													{
														"description": "Added as a part of security scheme: oauth2",
														"key": "Authorization",
														"value": "<token>"
													}
												],
												"url": {
													"raw": "{{baseUrl}}/metadata/analysis/:owner/:id",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"metadata",
														"analysis",
														":owner",
														":id"
													],
													"variable": [
														{
															"key": "owner"
														},
														{
															"key": "id"
														}
													]
												}
											},
											"status": "Unauthorized",
											"code": 401,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"body": "{\n \"code\": 1519430,\n \"message\": \"enim\",\n \"details\": \"do\"\n}"
										},
										{
											"name": "Forbidden",
											"originalRequest": {
												"method": "DELETE",
												"header": [
													{
														"description": "Added as a part of security scheme: oauth2",
														"key": "Authorization",
														"value": "<token>"
													}
												],
												"url": {
													"raw": "{{baseUrl}}/metadata/analysis/:owner/:id",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"metadata",
														"analysis",
														":owner",
														":id"
													],
													"variable": [
														{
															"key": "owner"
														},
														{
															"key": "id"
														}
													]
												}
											},
											"status": "Forbidden",
											"code": 403,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"body": "{\n \"code\": 1519430,\n \"message\": \"enim\",\n \"details\": \"do\"\n}"
										},
										{
											"name": "Not found",
											"originalRequest": {
												"method": "DELETE",
												"header": [
													{
														"description": "Added as a part of security scheme: oauth2",
														"key": "Authorization",
														"value": "<token>"
													}
												],
												"url": {
													"raw": "{{baseUrl}}/metadata/analysis/:owner/:id",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"metadata",
														"analysis",
														":owner",
														":id"
													],
													"variable": [
														{
															"key": "owner"
														},
														{
															"key": "id"
														}
													]
												}
											},
											"status": "Not Found",
											"code": 404,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"body": "{\n \"code\": 1519430,\n \"message\": \"enim\",\n \"details\": \"do\"\n}"
										},
										{
											"name": "Server error",
											"originalRequest": {
												"method": "DELETE",
												"header": [
													{
														"description": "Added as a part of security scheme: oauth2",
														"key": "Authorization",
														"value": "<token>"
													}
												],
												"url": {
													"raw": "{{baseUrl}}/metadata/analysis/:owner/:id",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"metadata",
														"analysis",
														":owner",
														":id"
													],
													"variable": [
														{
															"key": "owner"
														},
														{
															"key": "id"
														}
													]
												}
											},
											"status": "Internal Server Error",
											"code": 500,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"body": "{\n \"code\": 1519430,\n \"message\": \"enim\",\n \"details\": \"do\"\n}"
										}
									]
								},
								{
									"name": "Update an existing analysis.",
									"request": {
										"auth": {
											"type": "bearer",
											"bearer": [
												{
													"key": "token",
													"value": "{{readWrite}}",
													"type": "string"
												}
											]
										},
										"method": "PATCH",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/json"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n    \"collections\": [\n        \"My collection\"\n    ],\n    \"title\": \"crypto.snowflake\",\n    \"typeLabel\": \"Tableau dashboard\",\n    \"description\": \"Aid\",\n    \"tags\": [\n        \"elit nulla\",\n        \"officia\"\n    ],\n    \"properties\": {}\n}"
										},
										"url": {
											"raw": "{{baseUrl}}/metadata/analysis/:owner/:id",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"metadata",
												"analysis",
												":owner",
												":id"
											],
											"variable": [
												{
													"key": "owner",
													"value": "{{org}}",
													"description": "(Required) "
												},
												{
													"key": "id",
													"value": "{{analysisid}}",
													"description": "(Required) "
												}
											]
										}
									},
									"response": [
										{
											"name": "Analysis updated successfully.",
											"originalRequest": {
												"method": "PATCH",
												"header": [
													{
														"description": "Added as a part of security scheme: oauth2",
														"key": "Authorization",
														"value": "<token>"
													}
												],
												"url": {
													"raw": "{{baseUrl}}/metadata/analysis/:owner/:id",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"metadata",
														"analysis",
														":owner",
														":id"
													],
													"variable": [
														{
															"key": "owner"
														},
														{
															"key": "id"
														}
													]
												}
											},
											"status": "OK",
											"code": 200,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"body": "{\n \"message\": \"voluptate culpa nulla esse\"\n}"
										},
										{
											"name": "Bad request",
											"originalRequest": {
												"method": "PATCH",
												"header": [
													{
														"description": "Added as a part of security scheme: oauth2",
														"key": "Authorization",
														"value": "<token>"
													}
												],
												"url": {
													"raw": "{{baseUrl}}/metadata/analysis/:owner/:id",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"metadata",
														"analysis",
														":owner",
														":id"
													],
													"variable": [
														{
															"key": "owner"
														},
														{
															"key": "id"
														}
													]
												}
											},
											"status": "Bad Request",
											"code": 400,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"body": "{\n \"code\": 1519430,\n \"message\": \"enim\",\n \"details\": \"do\"\n}"
										},
										{
											"name": "Unauthorized",
											"originalRequest": {
												"method": "PATCH",
												"header": [
													{
														"description": "Added as a part of security scheme: oauth2",
														"key": "Authorization",
														"value": "<token>"
													}
												],
												"url": {
													"raw": "{{baseUrl}}/metadata/analysis/:owner/:id",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"metadata",
														"analysis",
														":owner",
														":id"
													],
													"variable": [
														{
															"key": "owner"
														},
														{
															"key": "id"
														}
													]
												}
											},
											"status": "Unauthorized",
											"code": 401,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"body": "{\n \"code\": 1519430,\n \"message\": \"enim\",\n \"details\": \"do\"\n}"
										},
										{
											"name": "Forbidden",
											"originalRequest": {
												"method": "PATCH",
												"header": [
													{
														"description": "Added as a part of security scheme: oauth2",
														"key": "Authorization",
														"value": "<token>"
													}
												],
												"url": {
													"raw": "{{baseUrl}}/metadata/analysis/:owner/:id",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"metadata",
														"analysis",
														":owner",
														":id"
													],
													"variable": [
														{
															"key": "owner"
														},
														{
															"key": "id"
														}
													]
												}
											},
											"status": "Forbidden",
											"code": 403,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"body": "{\n \"code\": 1519430,\n \"message\": \"enim\",\n \"details\": \"do\"\n}"
										},
										{
											"name": "Not found",
											"originalRequest": {
												"method": "PATCH",
												"header": [
													{
														"description": "Added as a part of security scheme: oauth2",
														"key": "Authorization",
														"value": "<token>"
													}
												],
												"url": {
													"raw": "{{baseUrl}}/metadata/analysis/:owner/:id",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"metadata",
														"analysis",
														":owner",
														":id"
													],
													"variable": [
														{
															"key": "owner"
														},
														{
															"key": "id"
														}
													]
												}
											},
											"status": "Not Found",
											"code": 404,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"body": "{\n \"code\": 1519430,\n \"message\": \"enim\",\n \"details\": \"do\"\n}"
										},
										{
											"name": "Bad request",
											"originalRequest": {
												"method": "PATCH",
												"header": [
													{
														"description": "Added as a part of security scheme: oauth2",
														"key": "Authorization",
														"value": "<token>"
													}
												],
												"url": {
													"raw": "{{baseUrl}}/metadata/analysis/:owner/:id",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"metadata",
														"analysis",
														":owner",
														":id"
													],
													"variable": [
														{
															"key": "owner"
														},
														{
															"key": "id"
														}
													]
												}
											},
											"status": "Unprocessable Entity (WebDAV) (RFC 4918)",
											"code": 422,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"body": "{\n \"code\": 1519430,\n \"message\": \"enim\",\n \"details\": \"do\"\n}"
										},
										{
											"name": "Server error",
											"originalRequest": {
												"method": "PATCH",
												"header": [
													{
														"description": "Added as a part of security scheme: oauth2",
														"key": "Authorization",
														"value": "<token>"
													}
												],
												"url": {
													"raw": "{{baseUrl}}/metadata/analysis/:owner/:id",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"metadata",
														"analysis",
														":owner",
														":id"
													],
													"variable": [
														{
															"key": "owner"
														},
														{
															"key": "id"
														}
													]
												}
											},
											"status": "Internal Server Error",
											"code": 500,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"body": "{\n \"code\": 1519430,\n \"message\": \"enim\",\n \"details\": \"do\"\n}"
										}
									]
								}
							]
						},
						{
							"name": "Gets metadata analysis by owner.",
							"request": {
								"auth": {
									"type": "oauth2"
								},
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{baseUrl}}/metadata/analysis/:owner?typelabel=adipisicing elit ullamco&typeiri=adipisicing elit ullamco&size=adipisicing elit ullamco&from=adipisicing elit ullamco&sort=adipisicing elit ullamco",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"metadata",
										"analysis",
										":owner"
									],
									"query": [
										{
											"key": "typelabel",
											"value": "adipisicing elit ullamco"
										},
										{
											"key": "typeiri",
											"value": "adipisicing elit ullamco"
										},
										{
											"key": "size",
											"value": "adipisicing elit ullamco"
										},
										{
											"key": "from",
											"value": "adipisicing elit ullamco"
										},
										{
											"key": "sort",
											"value": "adipisicing elit ullamco"
										}
									],
									"variable": [
										{
											"key": "owner",
											"value": "adipisicing elit ullamco",
											"description": "(Required) "
										}
									]
								}
							},
							"response": [
								{
									"name": "Successfully retrieved metadata analysis",
									"originalRequest": {
										"method": "GET",
										"header": [
											{
												"description": "Added as a part of security scheme: oauth2",
												"key": "Authorization",
												"value": "<token>"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/metadata/analysis/:owner?typelabel=adipisicing elit ullamco&typeiri=adipisicing elit ullamco&size=adipisicing elit ullamco&from=adipisicing elit ullamco&sort=adipisicing elit ullamco",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"metadata",
												"analysis",
												":owner"
											],
											"query": [
												{
													"key": "typelabel",
													"value": "adipisicing elit ullamco"
												},
												{
													"key": "typeiri",
													"value": "adipisicing elit ullamco"
												},
												{
													"key": "size",
													"value": "adipisicing elit ullamco"
												},
												{
													"key": "from",
													"value": "adipisicing elit ullamco"
												},
												{
													"key": "sort",
													"value": "adipisicing elit ullamco"
												}
											],
											"variable": [
												{
													"key": "owner"
												}
											]
										}
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n \"count\": 52732412,\n \"records\": [\n  {\n   \"created\": \"2001-04-17T23:41:59.581Z\",\n   \"id\": \"dolore in\",\n   \"owner\": \"dol\",\n   \"visibility\": \"PRIVATE\",\n   \"title\": \"labore dolor dolor et eiusmod\",\n   \"category\": \"Lorem dolore ex\",\n   \"typeLabel\": \"sint fugiat occaecat\",\n   \"typeIri\": \"est\",\n   \"rootParentTypeLabel\": \"culpa in ea\",\n   \"rootParentTypeIri\": \"aliqua incididunt cupidatat ut veniam\",\n   \"table\": {\n    \"owner\": {\n     \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    \"sourceId\": {\n     \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    \"tableId\": {\n     \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    }\n   },\n   \"dataType\": \"do amet voluptate ad in\",\n   \"columnIndex\": -85400426,\n   \"description\": \"sint dolore incididunt labore\",\n   \"encodedIri\": \"et ex i\",\n   \"summary\": \"irure cupidatat oc\",\n   \"url\": \"http://dktIdLbbSlo.wkySZgv,2mJmhqAQXFUfXHcLud\",\n   \"updated\": \"1974-04-22T03:09:05.188Z\",\n   \"collections\": [\n    {\n     \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    {\n     \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    }\n   ],\n   \"relationshipTypes\": [\n    \"nostrud pariatur\",\n    \"exercitation\"\n   ],\n   \"tags\": [\n    \"consectetur labore Excepteur aliqua\",\n    \"Lorem\"\n   ],\n   \"externalUrls\": [\n    \"ea officia\",\n    \"ullamco\"\n   ],\n   \"assetStatus\": {\n    \"assetStatusLabel\": \"est commodo\",\n    \"dispositionLabel\": \"quis nisi anim magna\"\n   },\n   \"properties\": {}\n  },\n  {\n   \"created\": \"1993-10-15T22:24:09.782Z\",\n   \"id\": \"ut et\",\n   \"owner\": \"esse veniam\",\n   \"visibility\": \"DISCOVERABLE\",\n   \"title\": \"in in\",\n   \"category\": \"amet Lor\",\n   \"typeLabel\": \"dolor voluptate\",\n   \"typeIri\": \"deserunt dolore amet ea dolor\",\n   \"rootParentTypeLabel\": \"sunt Ut ipsum\",\n   \"rootParentTypeIri\": \"voluptate\",\n   \"table\": {\n    \"owner\": {\n     \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    \"sourceId\": {\n     \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    \"tableId\": {\n     \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    }\n   },\n   \"dataType\": \"ipsum\",\n   \"columnIndex\": -63456958,\n   \"description\": \"occaecat anim ipsum\",\n   \"encodedIri\": \"sit cupidatat incididunt velit Excepteur\",\n   \"summary\": \"enim sint anim dolor\",\n   \"url\": \"https://rdgJRcNi.eqns8DW7wx0qbk8GaL7EhLQPt4ZiI7um85oADXoaHGSLjRu0f73o\",\n   \"updated\": \"1960-10-03T18:50:20.641Z\",\n   \"collections\": [\n    {\n     \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    {\n     \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    }\n   ],\n   \"relationshipTypes\": [\n    \"sunt culpa do sed in\",\n    \"est eu\"\n   ],\n   \"tags\": [\n    \"ut ea no\",\n    \"ut\"\n   ],\n   \"externalUrls\": [\n    \"in dolore Ut cupidatat\",\n    \"magna cupidatat ea\"\n   ],\n   \"assetStatus\": {\n    \"assetStatusLabel\": \"aute eiusmod\",\n    \"dispositionLabel\": \"mollit dolor\"\n   },\n   \"properties\": {}\n  }\n ],\n \"nextPageToken\": \"mollit adipisicing\"\n}"
								},
								{
									"name": "Bad request",
									"originalRequest": {
										"method": "GET",
										"header": [
											{
												"description": "Added as a part of security scheme: oauth2",
												"key": "Authorization",
												"value": "<token>"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/metadata/analysis/:owner?typelabel=adipisicing elit ullamco&typeiri=adipisicing elit ullamco&size=adipisicing elit ullamco&from=adipisicing elit ullamco&sort=adipisicing elit ullamco",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"metadata",
												"analysis",
												":owner"
											],
											"query": [
												{
													"key": "typelabel",
													"value": "adipisicing elit ullamco"
												},
												{
													"key": "typeiri",
													"value": "adipisicing elit ullamco"
												},
												{
													"key": "size",
													"value": "adipisicing elit ullamco"
												},
												{
													"key": "from",
													"value": "adipisicing elit ullamco"
												},
												{
													"key": "sort",
													"value": "adipisicing elit ullamco"
												}
											],
											"variable": [
												{
													"key": "owner"
												}
											]
										}
									},
									"status": "Bad Request",
									"code": 400,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n \"code\": 1519430,\n \"message\": \"enim\",\n \"details\": \"do\"\n}"
								},
								{
									"name": "Unauthorized",
									"originalRequest": {
										"method": "GET",
										"header": [
											{
												"description": "Added as a part of security scheme: oauth2",
												"key": "Authorization",
												"value": "<token>"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/metadata/analysis/:owner?typelabel=adipisicing elit ullamco&typeiri=adipisicing elit ullamco&size=adipisicing elit ullamco&from=adipisicing elit ullamco&sort=adipisicing elit ullamco",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"metadata",
												"analysis",
												":owner"
											],
											"query": [
												{
													"key": "typelabel",
													"value": "adipisicing elit ullamco"
												},
												{
													"key": "typeiri",
													"value": "adipisicing elit ullamco"
												},
												{
													"key": "size",
													"value": "adipisicing elit ullamco"
												},
												{
													"key": "from",
													"value": "adipisicing elit ullamco"
												},
												{
													"key": "sort",
													"value": "adipisicing elit ullamco"
												}
											],
											"variable": [
												{
													"key": "owner"
												}
											]
										}
									},
									"status": "Unauthorized",
									"code": 401,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n \"code\": 1519430,\n \"message\": \"enim\",\n \"details\": \"do\"\n}"
								},
								{
									"name": "Forbidden",
									"originalRequest": {
										"method": "GET",
										"header": [
											{
												"description": "Added as a part of security scheme: oauth2",
												"key": "Authorization",
												"value": "<token>"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/metadata/analysis/:owner?typelabel=adipisicing elit ullamco&typeiri=adipisicing elit ullamco&size=adipisicing elit ullamco&from=adipisicing elit ullamco&sort=adipisicing elit ullamco",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"metadata",
												"analysis",
												":owner"
											],
											"query": [
												{
													"key": "typelabel",
													"value": "adipisicing elit ullamco"
												},
												{
													"key": "typeiri",
													"value": "adipisicing elit ullamco"
												},
												{
													"key": "size",
													"value": "adipisicing elit ullamco"
												},
												{
													"key": "from",
													"value": "adipisicing elit ullamco"
												},
												{
													"key": "sort",
													"value": "adipisicing elit ullamco"
												}
											],
											"variable": [
												{
													"key": "owner"
												}
											]
										}
									},
									"status": "Forbidden",
									"code": 403,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n \"code\": 1519430,\n \"message\": \"enim\",\n \"details\": \"do\"\n}"
								},
								{
									"name": "Not found",
									"originalRequest": {
										"method": "GET",
										"header": [
											{
												"description": "Added as a part of security scheme: oauth2",
												"key": "Authorization",
												"value": "<token>"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/metadata/analysis/:owner?typelabel=adipisicing elit ullamco&typeiri=adipisicing elit ullamco&size=adipisicing elit ullamco&from=adipisicing elit ullamco&sort=adipisicing elit ullamco",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"metadata",
												"analysis",
												":owner"
											],
											"query": [
												{
													"key": "typelabel",
													"value": "adipisicing elit ullamco"
												},
												{
													"key": "typeiri",
													"value": "adipisicing elit ullamco"
												},
												{
													"key": "size",
													"value": "adipisicing elit ullamco"
												},
												{
													"key": "from",
													"value": "adipisicing elit ullamco"
												},
												{
													"key": "sort",
													"value": "adipisicing elit ullamco"
												}
											],
											"variable": [
												{
													"key": "owner"
												}
											]
										}
									},
									"status": "Not Found",
									"code": 404,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n \"code\": 1519430,\n \"message\": \"enim\",\n \"details\": \"do\"\n}"
								},
								{
									"name": "Server error",
									"originalRequest": {
										"method": "GET",
										"header": [
											{
												"description": "Added as a part of security scheme: oauth2",
												"key": "Authorization",
												"value": "<token>"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/metadata/analysis/:owner?typelabel=adipisicing elit ullamco&typeiri=adipisicing elit ullamco&size=adipisicing elit ullamco&from=adipisicing elit ullamco&sort=adipisicing elit ullamco",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"metadata",
												"analysis",
												":owner"
											],
											"query": [
												{
													"key": "typelabel",
													"value": "adipisicing elit ullamco"
												},
												{
													"key": "typeiri",
													"value": "adipisicing elit ullamco"
												},
												{
													"key": "size",
													"value": "adipisicing elit ullamco"
												},
												{
													"key": "from",
													"value": "adipisicing elit ullamco"
												},
												{
													"key": "sort",
													"value": "adipisicing elit ullamco"
												}
											],
											"variable": [
												{
													"key": "owner"
												}
											]
										}
									},
									"status": "Internal Server Error",
									"code": 500,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n \"code\": 1519430,\n \"message\": \"enim\",\n \"details\": \"do\"\n}"
								}
							]
						},
						{
							"name": "Create a new analysis metadata.",
							"request": {
								"auth": {
									"type": "bearer",
									"bearer": [
										{
											"key": "token",
											"value": "{{readWrite}}",
											"type": "string"
										}
									]
								},
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"collections\": [\n        \"My collection\"\n    ],\n    \"title\": \"crypto.snowflake\",\n    \"typeLabel\": \"Tableau dashboard\",\n    \"description\": \"Aid given to charity is an option that can be exercised by individuals and corporations\",\n    \"tags\": [\n        \"ut occaecat anim\",\n        \"sint non\"\n    ]\n}"
								},
								"url": {
									"raw": "{{baseUrl}}/metadata/analysis/:owner",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"metadata",
										"analysis",
										":owner"
									],
									"variable": [
										{
											"key": "owner",
											"value": "{{org}}",
											"description": "(Required) "
										}
									]
								}
							},
							"response": [
								{
									"name": "Analysis Metadata created successfully.",
									"originalRequest": {
										"method": "POST",
										"header": [
											{
												"description": "Added as a part of security scheme: oauth2",
												"key": "Authorization",
												"value": "<token>"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/metadata/analysis/:owner",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"metadata",
												"analysis",
												":owner"
											],
											"variable": [
												{
													"key": "owner"
												}
											]
										}
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n \"uri\": \"http://A.sfQ-gVx.2oEMnKdGnZwvPKe1go1ZBeMhzDIKRr\",\n \"message\": \"nisi nulla quis veniam\"\n}"
								},
								{
									"name": "Bad request",
									"originalRequest": {
										"method": "POST",
										"header": [
											{
												"description": "Added as a part of security scheme: oauth2",
												"key": "Authorization",
												"value": "<token>"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/metadata/analysis/:owner",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"metadata",
												"analysis",
												":owner"
											],
											"variable": [
												{
													"key": "owner"
												}
											]
										}
									},
									"status": "Bad Request",
									"code": 400,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n \"code\": 1519430,\n \"message\": \"enim\",\n \"details\": \"do\"\n}"
								},
								{
									"name": "Unauthorized",
									"originalRequest": {
										"method": "POST",
										"header": [
											{
												"description": "Added as a part of security scheme: oauth2",
												"key": "Authorization",
												"value": "<token>"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/metadata/analysis/:owner",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"metadata",
												"analysis",
												":owner"
											],
											"variable": [
												{
													"key": "owner"
												}
											]
										}
									},
									"status": "Unauthorized",
									"code": 401,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n \"code\": 1519430,\n \"message\": \"enim\",\n \"details\": \"do\"\n}"
								},
								{
									"name": "Forbidden",
									"originalRequest": {
										"method": "POST",
										"header": [
											{
												"description": "Added as a part of security scheme: oauth2",
												"key": "Authorization",
												"value": "<token>"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/metadata/analysis/:owner",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"metadata",
												"analysis",
												":owner"
											],
											"variable": [
												{
													"key": "owner"
												}
											]
										}
									},
									"status": "Forbidden",
									"code": 403,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n \"code\": 1519430,\n \"message\": \"enim\",\n \"details\": \"do\"\n}"
								},
								{
									"name": "Not found",
									"originalRequest": {
										"method": "POST",
										"header": [
											{
												"description": "Added as a part of security scheme: oauth2",
												"key": "Authorization",
												"value": "<token>"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/metadata/analysis/:owner",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"metadata",
												"analysis",
												":owner"
											],
											"variable": [
												{
													"key": "owner"
												}
											]
										}
									},
									"status": "Not Found",
									"code": 404,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n \"code\": 1519430,\n \"message\": \"enim\",\n \"details\": \"do\"\n}"
								},
								{
									"name": "Conflict",
									"originalRequest": {
										"method": "POST",
										"header": [
											{
												"description": "Added as a part of security scheme: oauth2",
												"key": "Authorization",
												"value": "<token>"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/metadata/analysis/:owner",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"metadata",
												"analysis",
												":owner"
											],
											"variable": [
												{
													"key": "owner"
												}
											]
										}
									},
									"status": "Conflict",
									"code": 409,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n \"code\": 1519430,\n \"message\": \"enim\",\n \"details\": \"do\"\n}"
								},
								{
									"name": "Bad request",
									"originalRequest": {
										"method": "POST",
										"header": [
											{
												"description": "Added as a part of security scheme: oauth2",
												"key": "Authorization",
												"value": "<token>"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/metadata/analysis/:owner",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"metadata",
												"analysis",
												":owner"
											],
											"variable": [
												{
													"key": "owner"
												}
											]
										}
									},
									"status": "Unprocessable Entity (WebDAV) (RFC 4918)",
									"code": 422,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n \"code\": 1519430,\n \"message\": \"enim\",\n \"details\": \"do\"\n}"
								},
								{
									"name": "Server error",
									"originalRequest": {
										"method": "POST",
										"header": [
											{
												"description": "Added as a part of security scheme: oauth2",
												"key": "Authorization",
												"value": "<token>"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/metadata/analysis/:owner",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"metadata",
												"analysis",
												":owner"
											],
											"variable": [
												{
													"key": "owner"
												}
											]
										}
									},
									"status": "Internal Server Error",
									"code": 500,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n \"code\": 1519430,\n \"message\": \"enim\",\n \"details\": \"do\"\n}"
								}
							]
						}
					]
				},
				{
					"name": "collections/{owner}",
					"item": [
						{
							"name": "{id}",
							"item": [
								{
									"name": "Gets a collection by ID",
									"request": {
										"auth": {
											"type": "bearer",
											"bearer": [
												{
													"key": "token",
													"value": "{{readWrite}}",
													"type": "string"
												}
											]
										},
										"method": "GET",
										"header": [],
										"url": {
											"raw": "{{baseUrl}}/metadata/collections/:owner/:id",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"metadata",
												"collections",
												":owner",
												":id"
											],
											"variable": [
												{
													"key": "owner",
													"value": "{{org}}",
													"description": "(Required) "
												},
												{
													"key": "id",
													"value": "{{catalogid}}",
													"description": "(Required) "
												}
											]
										}
									},
									"response": [
										{
											"name": "Successfully retrieved collection",
											"originalRequest": {
												"method": "GET",
												"header": [],
												"url": {
													"raw": "{{baseUrl}}/metadata/collections/:owner/:id",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"metadata",
														"collections",
														":owner",
														":id"
													],
													"variable": [
														{
															"key": "owner"
														},
														{
															"key": "id"
														}
													]
												}
											},
											"status": "OK",
											"code": 200,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"body": "{\n \"created\": \"1988-06-04T23:43:49.655Z\",\n \"id\": \"anim et eiusmod cupidatat\",\n \"owner\": \"in fugiat officia\",\n \"visibility\": \"OPEN\",\n \"title\": \"sed ut\",\n \"category\": \"ad cupidatat\",\n \"typeLabel\": \"elit\",\n \"typeIri\": \"esse nostrud magna id\",\n \"rootParentTypeLabel\": \"velit esse\",\n \"rootParentTypeIri\": \"dolore mollit irure officia\",\n \"table\": {\n  \"owner\": \"mollit\",\n  \"sourceId\": \"occaecat eu\",\n  \"tableId\": \"sunt\"\n },\n \"dataType\": \"quis eiusmod\",\n \"columnIndex\": 56482049,\n \"description\": \"non d\",\n \"encodedIri\": \"nostrud magna mollit non\",\n \"summary\": \"veniam non nostrud\",\n \"url\": \"http://l.oincbiP+ZuKrkwFxuvi\",\n \"updated\": \"1958-10-08T08:29:55.084Z\",\n \"collections\": [\n  {\n   \"agentid\": \"magna\",\n   \"catalogid\": \"consequat cupidatat non\",\n   \"referent\": \"adipisicing officia ut dolore\"\n  },\n  {\n   \"agentid\": \"deserunt veniam\",\n   \"catalogid\": \"voluptate amet aliqua sed reprehenderit\",\n   \"referent\": \"cillum reprehenderit amet\"\n  }\n ],\n \"relationshipTypes\": [\n  \"incididunt consequat ad\",\n  \"esse Excepteur sed in\"\n ],\n \"tags\": [\n  \"cillum \",\n  \"dolor labore in Duis\"\n ],\n \"externalUrls\": [\n  \"ut dolor non minim\",\n  \"id\"\n ],\n \"assetStatus\": {\n  \"assetStatusLabel\": \"sunt ex aute do\",\n  \"dispositionLabel\": \"laboris re\"\n },\n \"properties\": {}\n}"
										},
										{
											"name": "Bad request",
											"originalRequest": {
												"method": "GET",
												"header": [],
												"url": {
													"raw": "{{baseUrl}}/metadata/collections/:owner/:id",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"metadata",
														"collections",
														":owner",
														":id"
													],
													"variable": [
														{
															"key": "owner"
														},
														{
															"key": "id"
														}
													]
												}
											},
											"status": "Bad Request",
											"code": 400,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"body": "{\n \"code\": 1519430,\n \"message\": \"enim\",\n \"details\": \"do\"\n}"
										},
										{
											"name": "Unauthorized",
											"originalRequest": {
												"method": "GET",
												"header": [],
												"url": {
													"raw": "{{baseUrl}}/metadata/collections/:owner/:id",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"metadata",
														"collections",
														":owner",
														":id"
													],
													"variable": [
														{
															"key": "owner"
														},
														{
															"key": "id"
														}
													]
												}
											},
											"status": "Unauthorized",
											"code": 401,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"body": "{\n \"code\": 1519430,\n \"message\": \"enim\",\n \"details\": \"do\"\n}"
										},
										{
											"name": "Forbidden",
											"originalRequest": {
												"method": "GET",
												"header": [],
												"url": {
													"raw": "{{baseUrl}}/metadata/collections/:owner/:id",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"metadata",
														"collections",
														":owner",
														":id"
													],
													"variable": [
														{
															"key": "owner"
														},
														{
															"key": "id"
														}
													]
												}
											},
											"status": "Forbidden",
											"code": 403,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"body": "{\n \"code\": 1519430,\n \"message\": \"enim\",\n \"details\": \"do\"\n}"
										},
										{
											"name": "Not found",
											"originalRequest": {
												"method": "GET",
												"header": [],
												"url": {
													"raw": "{{baseUrl}}/metadata/collections/:owner/:id",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"metadata",
														"collections",
														":owner",
														":id"
													],
													"variable": [
														{
															"key": "owner"
														},
														{
															"key": "id"
														}
													]
												}
											},
											"status": "Not Found",
											"code": 404,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"body": "{\n \"code\": 1519430,\n \"message\": \"enim\",\n \"details\": \"do\"\n}"
										},
										{
											"name": "Server error",
											"originalRequest": {
												"method": "GET",
												"header": [],
												"url": {
													"raw": "{{baseUrl}}/metadata/collections/:owner/:id",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"metadata",
														"collections",
														":owner",
														":id"
													],
													"variable": [
														{
															"key": "owner"
														},
														{
															"key": "id"
														}
													]
												}
											},
											"status": "Internal Server Error",
											"code": 500,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"body": "{\n \"code\": 1519430,\n \"message\": \"enim\",\n \"details\": \"do\"\n}"
										}
									]
								},
								{
									"name": "Replaces a collection",
									"request": {
										"auth": {
											"type": "bearer",
											"bearer": [
												{
													"key": "token",
													"value": "{{readWrite}}",
													"type": "string"
												}
											]
										},
										"method": "PUT",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/json"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n    \"title\": \"My collection\",\n    \"description\": \"new\",\n    \"tags\": [\n        {\n            \"value\": \"wah\"\n        },\n        {\n            \"value\": \"wey\"\n        }\n    ]\n}"
										},
										"url": {
											"raw": "{{baseUrl}}/metadata/collections/:owner/:id",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"metadata",
												"collections",
												":owner",
												":id"
											],
											"variable": [
												{
													"key": "owner",
													"value": "{{org}}",
													"description": "(Required) "
												},
												{
													"key": "id",
													"value": "{{catalogid}}",
													"description": "(Required) "
												}
											]
										}
									},
									"response": [
										{
											"name": "Collection created successfully.",
											"originalRequest": {
												"method": "PUT",
												"header": [],
												"url": {
													"raw": "{{baseUrl}}/metadata/collections/:owner/:id",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"metadata",
														"collections",
														":owner",
														":id"
													],
													"variable": [
														{
															"key": "owner"
														},
														{
															"key": "id"
														}
													]
												}
											},
											"status": "OK",
											"code": 200,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"body": "{\n \"uri\": \"http://A.sfQ-gVx.2oEMnKdGnZwvPKe1go1ZBeMhzDIKRr\",\n \"message\": \"nisi nulla quis veniam\"\n}"
										},
										{
											"name": "Bad request",
											"originalRequest": {
												"method": "PUT",
												"header": [],
												"url": {
													"raw": "{{baseUrl}}/metadata/collections/:owner/:id",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"metadata",
														"collections",
														":owner",
														":id"
													],
													"variable": [
														{
															"key": "owner"
														},
														{
															"key": "id"
														}
													]
												}
											},
											"status": "Bad Request",
											"code": 400,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"body": "{\n \"code\": 1519430,\n \"message\": \"enim\",\n \"details\": \"do\"\n}"
										},
										{
											"name": "Unauthorized",
											"originalRequest": {
												"method": "PUT",
												"header": [],
												"url": {
													"raw": "{{baseUrl}}/metadata/collections/:owner/:id",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"metadata",
														"collections",
														":owner",
														":id"
													],
													"variable": [
														{
															"key": "owner"
														},
														{
															"key": "id"
														}
													]
												}
											},
											"status": "Unauthorized",
											"code": 401,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"body": "{\n \"code\": 1519430,\n \"message\": \"enim\",\n \"details\": \"do\"\n}"
										},
										{
											"name": "Forbidden",
											"originalRequest": {
												"method": "PUT",
												"header": [],
												"url": {
													"raw": "{{baseUrl}}/metadata/collections/:owner/:id",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"metadata",
														"collections",
														":owner",
														":id"
													],
													"variable": [
														{
															"key": "owner"
														},
														{
															"key": "id"
														}
													]
												}
											},
											"status": "Forbidden",
											"code": 403,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"body": "{\n \"code\": 1519430,\n \"message\": \"enim\",\n \"details\": \"do\"\n}"
										},
										{
											"name": "Not found",
											"originalRequest": {
												"method": "PUT",
												"header": [],
												"url": {
													"raw": "{{baseUrl}}/metadata/collections/:owner/:id",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"metadata",
														"collections",
														":owner",
														":id"
													],
													"variable": [
														{
															"key": "owner"
														},
														{
															"key": "id"
														}
													]
												}
											},
											"status": "Not Found",
											"code": 404,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"body": "{\n \"code\": 1519430,\n \"message\": \"enim\",\n \"details\": \"do\"\n}"
										},
										{
											"name": "Conflict",
											"originalRequest": {
												"method": "PUT",
												"header": [],
												"url": {
													"raw": "{{baseUrl}}/metadata/collections/:owner/:id",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"metadata",
														"collections",
														":owner",
														":id"
													],
													"variable": [
														{
															"key": "owner"
														},
														{
															"key": "id"
														}
													]
												}
											},
											"status": "Conflict",
											"code": 409,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"body": "{\n \"code\": 1519430,\n \"message\": \"enim\",\n \"details\": \"do\"\n}"
										},
										{
											"name": "Bad request",
											"originalRequest": {
												"method": "PUT",
												"header": [],
												"url": {
													"raw": "{{baseUrl}}/metadata/collections/:owner/:id",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"metadata",
														"collections",
														":owner",
														":id"
													],
													"variable": [
														{
															"key": "owner"
														},
														{
															"key": "id"
														}
													]
												}
											},
											"status": "Unprocessable Entity (WebDAV) (RFC 4918)",
											"code": 422,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"body": "{\n \"code\": 1519430,\n \"message\": \"enim\",\n \"details\": \"do\"\n}"
										},
										{
											"name": "Server error",
											"originalRequest": {
												"method": "PUT",
												"header": [],
												"url": {
													"raw": "{{baseUrl}}/metadata/collections/:owner/:id",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"metadata",
														"collections",
														":owner",
														":id"
													],
													"variable": [
														{
															"key": "owner"
														},
														{
															"key": "id"
														}
													]
												}
											},
											"status": "Internal Server Error",
											"code": 500,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"body": "{\n \"code\": 1519430,\n \"message\": \"enim\",\n \"details\": \"do\"\n}"
										}
									]
								},
								{
									"name": "Deletes a collection",
									"request": {
										"method": "DELETE",
										"header": [],
										"url": {
											"raw": "{{baseUrl}}/metadata/collections/:owner/:id",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"metadata",
												"collections",
												":owner",
												":id"
											],
											"variable": [
												{
													"key": "owner",
													"value": "adipisicing elit ullamco",
													"description": "(Required) "
												},
												{
													"key": "id",
													"value": "adipisicing elit ullamco",
													"description": "(Required) "
												}
											]
										}
									},
									"response": [
										{
											"name": "Collection created successfully.",
											"originalRequest": {
												"method": "DELETE",
												"header": [],
												"url": {
													"raw": "{{baseUrl}}/metadata/collections/:owner/:id",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"metadata",
														"collections",
														":owner",
														":id"
													],
													"variable": [
														{
															"key": "owner"
														},
														{
															"key": "id"
														}
													]
												}
											},
											"status": "OK",
											"code": 200,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"body": "{\n \"uri\": \"http://A.sfQ-gVx.2oEMnKdGnZwvPKe1go1ZBeMhzDIKRr\",\n \"message\": \"nisi nulla quis veniam\"\n}"
										},
										{
											"name": "Bad request",
											"originalRequest": {
												"method": "DELETE",
												"header": [],
												"url": {
													"raw": "{{baseUrl}}/metadata/collections/:owner/:id",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"metadata",
														"collections",
														":owner",
														":id"
													],
													"variable": [
														{
															"key": "owner"
														},
														{
															"key": "id"
														}
													]
												}
											},
											"status": "Bad Request",
											"code": 400,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"body": "{\n \"code\": 1519430,\n \"message\": \"enim\",\n \"details\": \"do\"\n}"
										},
										{
											"name": "Unauthorized",
											"originalRequest": {
												"method": "DELETE",
												"header": [],
												"url": {
													"raw": "{{baseUrl}}/metadata/collections/:owner/:id",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"metadata",
														"collections",
														":owner",
														":id"
													],
													"variable": [
														{
															"key": "owner"
														},
														{
															"key": "id"
														}
													]
												}
											},
											"status": "Unauthorized",
											"code": 401,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"body": "{\n \"code\": 1519430,\n \"message\": \"enim\",\n \"details\": \"do\"\n}"
										},
										{
											"name": "Forbidden",
											"originalRequest": {
												"method": "DELETE",
												"header": [],
												"url": {
													"raw": "{{baseUrl}}/metadata/collections/:owner/:id",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"metadata",
														"collections",
														":owner",
														":id"
													],
													"variable": [
														{
															"key": "owner"
														},
														{
															"key": "id"
														}
													]
												}
											},
											"status": "Forbidden",
											"code": 403,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"body": "{\n \"code\": 1519430,\n \"message\": \"enim\",\n \"details\": \"do\"\n}"
										},
										{
											"name": "Not found",
											"originalRequest": {
												"method": "DELETE",
												"header": [],
												"url": {
													"raw": "{{baseUrl}}/metadata/collections/:owner/:id",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"metadata",
														"collections",
														":owner",
														":id"
													],
													"variable": [
														{
															"key": "owner"
														},
														{
															"key": "id"
														}
													]
												}
											},
											"status": "Not Found",
											"code": 404,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"body": "{\n \"code\": 1519430,\n \"message\": \"enim\",\n \"details\": \"do\"\n}"
										},
										{
											"name": "Conflict",
											"originalRequest": {
												"method": "DELETE",
												"header": [],
												"url": {
													"raw": "{{baseUrl}}/metadata/collections/:owner/:id",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"metadata",
														"collections",
														":owner",
														":id"
													],
													"variable": [
														{
															"key": "owner"
														},
														{
															"key": "id"
														}
													]
												}
											},
											"status": "Conflict",
											"code": 409,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"body": "{\n \"code\": 1519430,\n \"message\": \"enim\",\n \"details\": \"do\"\n}"
										},
										{
											"name": "Bad request",
											"originalRequest": {
												"method": "DELETE",
												"header": [],
												"url": {
													"raw": "{{baseUrl}}/metadata/collections/:owner/:id",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"metadata",
														"collections",
														":owner",
														":id"
													],
													"variable": [
														{
															"key": "owner"
														},
														{
															"key": "id"
														}
													]
												}
											},
											"status": "Unprocessable Entity (WebDAV) (RFC 4918)",
											"code": 422,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"body": "{\n \"code\": 1519430,\n \"message\": \"enim\",\n \"details\": \"do\"\n}"
										},
										{
											"name": "Server error",
											"originalRequest": {
												"method": "DELETE",
												"header": [],
												"url": {
													"raw": "{{baseUrl}}/metadata/collections/:owner/:id",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"metadata",
														"collections",
														":owner",
														":id"
													],
													"variable": [
														{
															"key": "owner"
														},
														{
															"key": "id"
														}
													]
												}
											},
											"status": "Internal Server Error",
											"code": 500,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"body": "{\n \"code\": 1519430,\n \"message\": \"enim\",\n \"details\": \"do\"\n}"
										}
									]
								},
								{
									"name": "Updates a collection",
									"request": {
										"auth": {
											"type": "bearer",
											"bearer": [
												{
													"key": "token",
													"value": "{{readWrite}}",
													"type": "string"
												}
											]
										},
										"method": "PATCH",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/json"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n    \"title\": \"my new collection\",\n    \"description\": \"fugiat voluptate nulla aliqua ut\",\n    \"tags\": [\n        {\n            \"value\": \"weeeee\"\n        },\n        {\n            \"value\": \"ayyyy\"\n        }\n    ]\n}"
										},
										"url": {
											"raw": "{{baseUrl}}/metadata/collections/:owner/:id",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"metadata",
												"collections",
												":owner",
												":id"
											],
											"variable": [
												{
													"key": "owner",
													"value": "{{org}}",
													"description": "(Required) "
												},
												{
													"key": "id",
													"value": "{{catalogid}}",
													"description": "(Required) "
												}
											]
										}
									},
									"response": [
										{
											"name": "Collection created successfully.",
											"originalRequest": {
												"method": "PATCH",
												"header": [],
												"url": {
													"raw": "{{baseUrl}}/metadata/collections/:owner/:id",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"metadata",
														"collections",
														":owner",
														":id"
													],
													"variable": [
														{
															"key": "owner"
														},
														{
															"key": "id"
														}
													]
												}
											},
											"status": "OK",
											"code": 200,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"body": "{\n \"uri\": \"http://A.sfQ-gVx.2oEMnKdGnZwvPKe1go1ZBeMhzDIKRr\",\n \"message\": \"nisi nulla quis veniam\"\n}"
										},
										{
											"name": "Bad request",
											"originalRequest": {
												"method": "PATCH",
												"header": [],
												"url": {
													"raw": "{{baseUrl}}/metadata/collections/:owner/:id",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"metadata",
														"collections",
														":owner",
														":id"
													],
													"variable": [
														{
															"key": "owner"
														},
														{
															"key": "id"
														}
													]
												}
											},
											"status": "Bad Request",
											"code": 400,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"body": "{\n \"code\": 1519430,\n \"message\": \"enim\",\n \"details\": \"do\"\n}"
										},
										{
											"name": "Unauthorized",
											"originalRequest": {
												"method": "PATCH",
												"header": [],
												"url": {
													"raw": "{{baseUrl}}/metadata/collections/:owner/:id",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"metadata",
														"collections",
														":owner",
														":id"
													],
													"variable": [
														{
															"key": "owner"
														},
														{
															"key": "id"
														}
													]
												}
											},
											"status": "Unauthorized",
											"code": 401,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"body": "{\n \"code\": 1519430,\n \"message\": \"enim\",\n \"details\": \"do\"\n}"
										},
										{
											"name": "Forbidden",
											"originalRequest": {
												"method": "PATCH",
												"header": [],
												"url": {
													"raw": "{{baseUrl}}/metadata/collections/:owner/:id",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"metadata",
														"collections",
														":owner",
														":id"
													],
													"variable": [
														{
															"key": "owner"
														},
														{
															"key": "id"
														}
													]
												}
											},
											"status": "Forbidden",
											"code": 403,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"body": "{\n \"code\": 1519430,\n \"message\": \"enim\",\n \"details\": \"do\"\n}"
										},
										{
											"name": "Not found",
											"originalRequest": {
												"method": "PATCH",
												"header": [],
												"url": {
													"raw": "{{baseUrl}}/metadata/collections/:owner/:id",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"metadata",
														"collections",
														":owner",
														":id"
													],
													"variable": [
														{
															"key": "owner"
														},
														{
															"key": "id"
														}
													]
												}
											},
											"status": "Not Found",
											"code": 404,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"body": "{\n \"code\": 1519430,\n \"message\": \"enim\",\n \"details\": \"do\"\n}"
										},
										{
											"name": "Conflict",
											"originalRequest": {
												"method": "PATCH",
												"header": [],
												"url": {
													"raw": "{{baseUrl}}/metadata/collections/:owner/:id",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"metadata",
														"collections",
														":owner",
														":id"
													],
													"variable": [
														{
															"key": "owner"
														},
														{
															"key": "id"
														}
													]
												}
											},
											"status": "Conflict",
											"code": 409,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"body": "{\n \"code\": 1519430,\n \"message\": \"enim\",\n \"details\": \"do\"\n}"
										},
										{
											"name": "Bad request",
											"originalRequest": {
												"method": "PATCH",
												"header": [],
												"url": {
													"raw": "{{baseUrl}}/metadata/collections/:owner/:id",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"metadata",
														"collections",
														":owner",
														":id"
													],
													"variable": [
														{
															"key": "owner"
														},
														{
															"key": "id"
														}
													]
												}
											},
											"status": "Unprocessable Entity (WebDAV) (RFC 4918)",
											"code": 422,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"body": "{\n \"code\": 1519430,\n \"message\": \"enim\",\n \"details\": \"do\"\n}"
										},
										{
											"name": "Server error",
											"originalRequest": {
												"method": "PATCH",
												"header": [],
												"url": {
													"raw": "{{baseUrl}}/metadata/collections/:owner/:id",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"metadata",
														"collections",
														":owner",
														":id"
													],
													"variable": [
														{
															"key": "owner"
														},
														{
															"key": "id"
														}
													]
												}
											},
											"status": "Internal Server Error",
											"code": 500,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"body": "{\n \"code\": 1519430,\n \"message\": \"enim\",\n \"details\": \"do\"\n}"
										}
									]
								}
							]
						},
						{
							"name": "Gets collections owned by specified owner",
							"request": {
								"auth": {
									"type": "bearer",
									"bearer": [
										{
											"key": "token",
											"value": "{{readWrite}}",
											"type": "string"
										}
									]
								},
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{baseUrl}}/metadata/collections/:owner",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"metadata",
										"collections",
										":owner"
									],
									"query": [
										{
											"key": "size",
											"value": "adipisicing elit ullamco",
											"disabled": true
										},
										{
											"key": "from",
											"value": "adipisicing elit ullamco",
											"disabled": true
										},
										{
											"key": "sort",
											"value": "adipisicing elit ullamco",
											"disabled": true
										}
									],
									"variable": [
										{
											"key": "owner",
											"value": "{{org}}",
											"description": "(Required) "
										}
									]
								}
							},
							"response": [
								{
									"name": "Successfully retrieved collections",
									"originalRequest": {
										"method": "GET",
										"header": [],
										"url": {
											"raw": "{{baseUrl}}/metadata/collections/:owner?size=adipisicing elit ullamco&from=adipisicing elit ullamco&sort=adipisicing elit ullamco",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"metadata",
												"collections",
												":owner"
											],
											"query": [
												{
													"key": "size",
													"value": "adipisicing elit ullamco"
												},
												{
													"key": "from",
													"value": "adipisicing elit ullamco"
												},
												{
													"key": "sort",
													"value": "adipisicing elit ullamco"
												}
											],
											"variable": [
												{
													"key": "owner"
												}
											]
										}
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n \"count\": 66085424,\n \"next\": \"dolore velit\",\n \"facets\": {},\n \"hydrations\": {\n  \"agents\": {},\n  \"catalogConcepts\": {},\n  \"catalogs\": {},\n  \"catalogAnalysis\": {},\n  \"catalogBusinessTerms\": {},\n  \"catalogTables\": {},\n  \"catalogColumns\": {},\n  \"unknownCatalogEntry\": {},\n  \"datasets\": {},\n  \"insights\": {}\n }\n}"
								},
								{
									"name": "Bad request",
									"originalRequest": {
										"method": "GET",
										"header": [],
										"url": {
											"raw": "{{baseUrl}}/metadata/collections/:owner?size=adipisicing elit ullamco&from=adipisicing elit ullamco&sort=adipisicing elit ullamco",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"metadata",
												"collections",
												":owner"
											],
											"query": [
												{
													"key": "size",
													"value": "adipisicing elit ullamco"
												},
												{
													"key": "from",
													"value": "adipisicing elit ullamco"
												},
												{
													"key": "sort",
													"value": "adipisicing elit ullamco"
												}
											],
											"variable": [
												{
													"key": "owner"
												}
											]
										}
									},
									"status": "Bad Request",
									"code": 400,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n \"code\": 1519430,\n \"message\": \"enim\",\n \"details\": \"do\"\n}"
								},
								{
									"name": "Unauthorized",
									"originalRequest": {
										"method": "GET",
										"header": [],
										"url": {
											"raw": "{{baseUrl}}/metadata/collections/:owner?size=adipisicing elit ullamco&from=adipisicing elit ullamco&sort=adipisicing elit ullamco",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"metadata",
												"collections",
												":owner"
											],
											"query": [
												{
													"key": "size",
													"value": "adipisicing elit ullamco"
												},
												{
													"key": "from",
													"value": "adipisicing elit ullamco"
												},
												{
													"key": "sort",
													"value": "adipisicing elit ullamco"
												}
											],
											"variable": [
												{
													"key": "owner"
												}
											]
										}
									},
									"status": "Unauthorized",
									"code": 401,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n \"code\": 1519430,\n \"message\": \"enim\",\n \"details\": \"do\"\n}"
								},
								{
									"name": "Forbidden",
									"originalRequest": {
										"method": "GET",
										"header": [],
										"url": {
											"raw": "{{baseUrl}}/metadata/collections/:owner?size=adipisicing elit ullamco&from=adipisicing elit ullamco&sort=adipisicing elit ullamco",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"metadata",
												"collections",
												":owner"
											],
											"query": [
												{
													"key": "size",
													"value": "adipisicing elit ullamco"
												},
												{
													"key": "from",
													"value": "adipisicing elit ullamco"
												},
												{
													"key": "sort",
													"value": "adipisicing elit ullamco"
												}
											],
											"variable": [
												{
													"key": "owner"
												}
											]
										}
									},
									"status": "Forbidden",
									"code": 403,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n \"code\": 1519430,\n \"message\": \"enim\",\n \"details\": \"do\"\n}"
								},
								{
									"name": "Not found",
									"originalRequest": {
										"method": "GET",
										"header": [],
										"url": {
											"raw": "{{baseUrl}}/metadata/collections/:owner?size=adipisicing elit ullamco&from=adipisicing elit ullamco&sort=adipisicing elit ullamco",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"metadata",
												"collections",
												":owner"
											],
											"query": [
												{
													"key": "size",
													"value": "adipisicing elit ullamco"
												},
												{
													"key": "from",
													"value": "adipisicing elit ullamco"
												},
												{
													"key": "sort",
													"value": "adipisicing elit ullamco"
												}
											],
											"variable": [
												{
													"key": "owner"
												}
											]
										}
									},
									"status": "Not Found",
									"code": 404,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n \"code\": 1519430,\n \"message\": \"enim\",\n \"details\": \"do\"\n}"
								},
								{
									"name": "Server error",
									"originalRequest": {
										"method": "GET",
										"header": [],
										"url": {
											"raw": "{{baseUrl}}/metadata/collections/:owner?size=adipisicing elit ullamco&from=adipisicing elit ullamco&sort=adipisicing elit ullamco",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"metadata",
												"collections",
												":owner"
											],
											"query": [
												{
													"key": "size",
													"value": "adipisicing elit ullamco"
												},
												{
													"key": "from",
													"value": "adipisicing elit ullamco"
												},
												{
													"key": "sort",
													"value": "adipisicing elit ullamco"
												}
											],
											"variable": [
												{
													"key": "owner"
												}
											]
										}
									},
									"status": "Internal Server Error",
									"code": 500,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n \"code\": 1519430,\n \"message\": \"enim\",\n \"details\": \"do\"\n}"
								}
							]
						},
						{
							"name": "Creates a new collection",
							"request": {
								"auth": {
									"type": "bearer",
									"bearer": [
										{
											"key": "token",
											"value": "{{readWrite}}",
											"type": "string"
										}
									]
								},
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"title\": \"My Collection\",\n    \"description\": \"my collection\",\n    \"tags\": [\n        {\n            \"value\": \"weeee\"\n        }\n    ]\n}"
								},
								"url": {
									"raw": "{{baseUrl}}/metadata/collections/:owner",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"metadata",
										"collections",
										":owner"
									],
									"variable": [
										{
											"key": "owner",
											"value": "{{org}}",
											"description": "(Required) "
										}
									]
								}
							},
							"response": [
								{
									"name": "Collection created successfully.",
									"originalRequest": {
										"method": "POST",
										"header": [],
										"url": {
											"raw": "{{baseUrl}}/metadata/collections/:owner",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"metadata",
												"collections",
												":owner"
											],
											"variable": [
												{
													"key": "owner"
												}
											]
										}
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n \"uri\": \"http://A.sfQ-gVx.2oEMnKdGnZwvPKe1go1ZBeMhzDIKRr\",\n \"message\": \"nisi nulla quis veniam\"\n}"
								},
								{
									"name": "Bad request",
									"originalRequest": {
										"method": "POST",
										"header": [],
										"url": {
											"raw": "{{baseUrl}}/metadata/collections/:owner",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"metadata",
												"collections",
												":owner"
											],
											"variable": [
												{
													"key": "owner"
												}
											]
										}
									},
									"status": "Bad Request",
									"code": 400,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n \"code\": 1519430,\n \"message\": \"enim\",\n \"details\": \"do\"\n}"
								},
								{
									"name": "Unauthorized",
									"originalRequest": {
										"method": "POST",
										"header": [],
										"url": {
											"raw": "{{baseUrl}}/metadata/collections/:owner",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"metadata",
												"collections",
												":owner"
											],
											"variable": [
												{
													"key": "owner"
												}
											]
										}
									},
									"status": "Unauthorized",
									"code": 401,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n \"code\": 1519430,\n \"message\": \"enim\",\n \"details\": \"do\"\n}"
								},
								{
									"name": "Forbidden",
									"originalRequest": {
										"method": "POST",
										"header": [],
										"url": {
											"raw": "{{baseUrl}}/metadata/collections/:owner",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"metadata",
												"collections",
												":owner"
											],
											"variable": [
												{
													"key": "owner"
												}
											]
										}
									},
									"status": "Forbidden",
									"code": 403,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n \"code\": 1519430,\n \"message\": \"enim\",\n \"details\": \"do\"\n}"
								},
								{
									"name": "Not found",
									"originalRequest": {
										"method": "POST",
										"header": [],
										"url": {
											"raw": "{{baseUrl}}/metadata/collections/:owner",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"metadata",
												"collections",
												":owner"
											],
											"variable": [
												{
													"key": "owner"
												}
											]
										}
									},
									"status": "Not Found",
									"code": 404,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n \"code\": 1519430,\n \"message\": \"enim\",\n \"details\": \"do\"\n}"
								},
								{
									"name": "Conflict",
									"originalRequest": {
										"method": "POST",
										"header": [],
										"url": {
											"raw": "{{baseUrl}}/metadata/collections/:owner",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"metadata",
												"collections",
												":owner"
											],
											"variable": [
												{
													"key": "owner"
												}
											]
										}
									},
									"status": "Conflict",
									"code": 409,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n \"code\": 1519430,\n \"message\": \"enim\",\n \"details\": \"do\"\n}"
								},
								{
									"name": "Bad request",
									"originalRequest": {
										"method": "POST",
										"header": [],
										"url": {
											"raw": "{{baseUrl}}/metadata/collections/:owner",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"metadata",
												"collections",
												":owner"
											],
											"variable": [
												{
													"key": "owner"
												}
											]
										}
									},
									"status": "Unprocessable Entity (WebDAV) (RFC 4918)",
									"code": 422,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n \"code\": 1519430,\n \"message\": \"enim\",\n \"details\": \"do\"\n}"
								},
								{
									"name": "Server error",
									"originalRequest": {
										"method": "POST",
										"header": [],
										"url": {
											"raw": "{{baseUrl}}/metadata/collections/:owner",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"metadata",
												"collections",
												":owner"
											],
											"variable": [
												{
													"key": "owner"
												}
											]
										}
									},
									"status": "Internal Server Error",
									"code": 500,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n \"code\": 1519430,\n \"message\": \"enim\",\n \"details\": \"do\"\n}"
								}
							]
						}
					]
				},
				{
					"name": "data/sources/{owner}",
					"item": [
						{
							"name": "{sourceid}",
							"item": [
								{
									"name": "tables",
									"item": [
										{
											"name": "{tableid}",
											"item": [
												{
													"name": "columns",
													"item": [
														{
															"name": "{columnid}",
															"item": [
																{
																	"name": "Get an individual column metadata",
																	"request": {
																		"auth": {
																			"type": "bearer",
																			"bearer": [
																				{
																					"key": "token",
																					"value": "{{readWrite}}",
																					"type": "string"
																				}
																			]
																		},
																		"method": "GET",
																		"header": [],
																		"url": {
																			"raw": "{{baseUrl}}/metadata/data/sources/:owner/:sourceid/tables/:tableid/columns/:columnid",
																			"host": [
																				"{{baseUrl}}"
																			],
																			"path": [
																				"metadata",
																				"data",
																				"sources",
																				":owner",
																				":sourceid",
																				"tables",
																				":tableid",
																				"columns",
																				":columnid"
																			],
																			"variable": [
																				{
																					"key": "owner",
																					"value": "{{org}}",
																					"description": "(Required) id of the user or organization"
																				},
																				{
																					"key": "sourceid",
																					"value": "{{sourceid}}",
																					"description": "(Required) database source id"
																				},
																				{
																					"key": "tableid",
																					"value": "{{tableid}}",
																					"description": "(Required) "
																				},
																				{
																					"key": "columnid",
																					"value": "{{columnid}}",
																					"description": "(Required) "
																				}
																			]
																		}
																	},
																	"response": [
																		{
																			"name": "successful operation",
																			"originalRequest": {
																				"method": "GET",
																				"header": [
																					{
																						"description": "Added as a part of security scheme: oauth2",
																						"key": "Authorization",
																						"value": "<token>"
																					}
																				],
																				"url": {
																					"raw": "{{baseUrl}}/metadata/data/sources/:owner/:sourceid/tables/:tableid/columns/:columnid",
																					"host": [
																						"{{baseUrl}}"
																					],
																					"path": [
																						"metadata",
																						"data",
																						"sources",
																						":owner",
																						":sourceid",
																						"tables",
																						":tableid",
																						"columns",
																						":columnid"
																					],
																					"variable": [
																						{
																							"key": "owner"
																						},
																						{
																							"key": "sourceid"
																						},
																						{
																							"key": "tableid"
																						},
																						{
																							"key": "columnid"
																						}
																					]
																				}
																			},
																			"status": "OK",
																			"code": 200,
																			"_postman_previewlanguage": "json",
																			"header": [
																				{
																					"key": "Content-Type",
																					"value": "application/json"
																				}
																			],
																			"cookie": [],
																			"body": "{\n \"created\": \"1988-06-04T23:43:49.655Z\",\n \"id\": \"anim et eiusmod cupidatat\",\n \"owner\": \"in fugiat officia\",\n \"visibility\": \"OPEN\",\n \"title\": \"sed ut\",\n \"category\": \"ad cupidatat\",\n \"typeLabel\": \"elit\",\n \"typeIri\": \"esse nostrud magna id\",\n \"rootParentTypeLabel\": \"velit esse\",\n \"rootParentTypeIri\": \"dolore mollit irure officia\",\n \"table\": {\n  \"owner\": \"mollit\",\n  \"sourceId\": \"occaecat eu\",\n  \"tableId\": \"sunt\"\n },\n \"dataType\": \"quis eiusmod\",\n \"columnIndex\": 56482049,\n \"description\": \"non d\",\n \"encodedIri\": \"nostrud magna mollit non\",\n \"summary\": \"veniam non nostrud\",\n \"url\": \"http://l.oincbiP+ZuKrkwFxuvi\",\n \"updated\": \"1958-10-08T08:29:55.084Z\",\n \"collections\": [\n  {\n   \"agentid\": \"magna\",\n   \"catalogid\": \"consequat cupidatat non\",\n   \"referent\": \"adipisicing officia ut dolore\"\n  },\n  {\n   \"agentid\": \"deserunt veniam\",\n   \"catalogid\": \"voluptate amet aliqua sed reprehenderit\",\n   \"referent\": \"cillum reprehenderit amet\"\n  }\n ],\n \"relationshipTypes\": [\n  \"incididunt consequat ad\",\n  \"esse Excepteur sed in\"\n ],\n \"tags\": [\n  \"cillum \",\n  \"dolor labore in Duis\"\n ],\n \"externalUrls\": [\n  \"ut dolor non minim\",\n  \"id\"\n ],\n \"assetStatus\": {\n  \"assetStatusLabel\": \"sunt ex aute do\",\n  \"dispositionLabel\": \"laboris re\"\n },\n \"properties\": {}\n}"
																		},
																		{
																			"name": "Bad Request",
																			"originalRequest": {
																				"method": "GET",
																				"header": [
																					{
																						"description": "Added as a part of security scheme: oauth2",
																						"key": "Authorization",
																						"value": "<token>"
																					}
																				],
																				"url": {
																					"raw": "{{baseUrl}}/metadata/data/sources/:owner/:sourceid/tables/:tableid/columns/:columnid",
																					"host": [
																						"{{baseUrl}}"
																					],
																					"path": [
																						"metadata",
																						"data",
																						"sources",
																						":owner",
																						":sourceid",
																						"tables",
																						":tableid",
																						"columns",
																						":columnid"
																					],
																					"variable": [
																						{
																							"key": "owner"
																						},
																						{
																							"key": "sourceid"
																						},
																						{
																							"key": "tableid"
																						},
																						{
																							"key": "columnid"
																						}
																					]
																				}
																			},
																			"status": "Bad Request",
																			"code": 400,
																			"_postman_previewlanguage": "json",
																			"header": [
																				{
																					"key": "Content-Type",
																					"value": "application/json"
																				}
																			],
																			"cookie": [],
																			"body": "{\n \"code\": 1519430,\n \"message\": \"enim\",\n \"details\": \"do\"\n}"
																		},
																		{
																			"name": "Not found",
																			"originalRequest": {
																				"method": "GET",
																				"header": [
																					{
																						"description": "Added as a part of security scheme: oauth2",
																						"key": "Authorization",
																						"value": "<token>"
																					}
																				],
																				"url": {
																					"raw": "{{baseUrl}}/metadata/data/sources/:owner/:sourceid/tables/:tableid/columns/:columnid",
																					"host": [
																						"{{baseUrl}}"
																					],
																					"path": [
																						"metadata",
																						"data",
																						"sources",
																						":owner",
																						":sourceid",
																						"tables",
																						":tableid",
																						"columns",
																						":columnid"
																					],
																					"variable": [
																						{
																							"key": "owner"
																						},
																						{
																							"key": "sourceid"
																						},
																						{
																							"key": "tableid"
																						},
																						{
																							"key": "columnid"
																						}
																					]
																				}
																			},
																			"status": "Not Found",
																			"code": 404,
																			"_postman_previewlanguage": "json",
																			"header": [
																				{
																					"key": "Content-Type",
																					"value": "application/json"
																				}
																			],
																			"cookie": [],
																			"body": "{\n \"code\": 1519430,\n \"message\": \"enim\",\n \"details\": \"do\"\n}"
																		}
																	]
																},
																{
																	"name": "Replace an existing column",
																	"request": {
																		"auth": {
																			"type": "bearer",
																			"bearer": [
																				{
																					"key": "token",
																					"value": "{{readWrite}}",
																					"type": "string"
																				}
																			]
																		},
																		"method": "PUT",
																		"header": [
																			{
																				"key": "Content-Type",
																				"value": "application/json"
																			}
																		],
																		"body": {
																			"mode": "raw",
																			"raw": "{\n    \"collections\": [\n        \"My collection\"\n    ],\n    \"title\": \"column one\",\n    \"description\": \"a column two\",\n    \"tags\": [\n        \"hi\"\n    ],\n    \"dataType\": \"BIGINT\",\n    \"columnIndex\": 2\n}"
																		},
																		"url": {
																			"raw": "{{baseUrl}}/metadata/data/sources/:owner/:sourceid/tables/:tableid/columns/:columnid",
																			"host": [
																				"{{baseUrl}}"
																			],
																			"path": [
																				"metadata",
																				"data",
																				"sources",
																				":owner",
																				":sourceid",
																				"tables",
																				":tableid",
																				"columns",
																				":columnid"
																			],
																			"variable": [
																				{
																					"key": "owner",
																					"value": "{{org}}",
																					"description": "(Required) id of the user or organization"
																				},
																				{
																					"key": "sourceid",
																					"value": "{{sourceid}}",
																					"description": "(Required) database source id"
																				},
																				{
																					"key": "tableid",
																					"value": "{{tableid}}",
																					"description": "(Required) "
																				},
																				{
																					"key": "columnid",
																					"value": "{{columnid}}",
																					"description": "(Required) "
																				}
																			]
																		}
																	},
																	"response": [
																		{
																			"name": "Column replaced successfully.",
																			"originalRequest": {
																				"method": "PUT",
																				"header": [
																					{
																						"description": "Added as a part of security scheme: oauth2",
																						"key": "Authorization",
																						"value": "<token>"
																					}
																				],
																				"url": {
																					"raw": "{{baseUrl}}/metadata/data/sources/:owner/:sourceid/tables/:tableid/columns/:columnid",
																					"host": [
																						"{{baseUrl}}"
																					],
																					"path": [
																						"metadata",
																						"data",
																						"sources",
																						":owner",
																						":sourceid",
																						"tables",
																						":tableid",
																						"columns",
																						":columnid"
																					],
																					"variable": [
																						{
																							"key": "owner"
																						},
																						{
																							"key": "sourceid"
																						},
																						{
																							"key": "tableid"
																						},
																						{
																							"key": "columnid"
																						}
																					]
																				}
																			},
																			"status": "OK",
																			"code": 200,
																			"_postman_previewlanguage": "json",
																			"header": [
																				{
																					"key": "Content-Type",
																					"value": "application/json"
																				}
																			],
																			"cookie": [],
																			"body": "{\n \"message\": \"voluptate culpa nulla esse\"\n}"
																		},
																		{
																			"name": "Bad request",
																			"originalRequest": {
																				"method": "PUT",
																				"header": [
																					{
																						"description": "Added as a part of security scheme: oauth2",
																						"key": "Authorization",
																						"value": "<token>"
																					}
																				],
																				"url": {
																					"raw": "{{baseUrl}}/metadata/data/sources/:owner/:sourceid/tables/:tableid/columns/:columnid",
																					"host": [
																						"{{baseUrl}}"
																					],
																					"path": [
																						"metadata",
																						"data",
																						"sources",
																						":owner",
																						":sourceid",
																						"tables",
																						":tableid",
																						"columns",
																						":columnid"
																					],
																					"variable": [
																						{
																							"key": "owner"
																						},
																						{
																							"key": "sourceid"
																						},
																						{
																							"key": "tableid"
																						},
																						{
																							"key": "columnid"
																						}
																					]
																				}
																			},
																			"status": "Bad Request",
																			"code": 400,
																			"_postman_previewlanguage": "json",
																			"header": [
																				{
																					"key": "Content-Type",
																					"value": "application/json"
																				}
																			],
																			"cookie": [],
																			"body": "{\n \"code\": 1519430,\n \"message\": \"enim\",\n \"details\": \"do\"\n}"
																		},
																		{
																			"name": "Unauthorized",
																			"originalRequest": {
																				"method": "PUT",
																				"header": [
																					{
																						"description": "Added as a part of security scheme: oauth2",
																						"key": "Authorization",
																						"value": "<token>"
																					}
																				],
																				"url": {
																					"raw": "{{baseUrl}}/metadata/data/sources/:owner/:sourceid/tables/:tableid/columns/:columnid",
																					"host": [
																						"{{baseUrl}}"
																					],
																					"path": [
																						"metadata",
																						"data",
																						"sources",
																						":owner",
																						":sourceid",
																						"tables",
																						":tableid",
																						"columns",
																						":columnid"
																					],
																					"variable": [
																						{
																							"key": "owner"
																						},
																						{
																							"key": "sourceid"
																						},
																						{
																							"key": "tableid"
																						},
																						{
																							"key": "columnid"
																						}
																					]
																				}
																			},
																			"status": "Unauthorized",
																			"code": 401,
																			"_postman_previewlanguage": "json",
																			"header": [
																				{
																					"key": "Content-Type",
																					"value": "application/json"
																				}
																			],
																			"cookie": [],
																			"body": "{\n \"code\": 1519430,\n \"message\": \"enim\",\n \"details\": \"do\"\n}"
																		},
																		{
																			"name": "Forbidden",
																			"originalRequest": {
																				"method": "PUT",
																				"header": [
																					{
																						"description": "Added as a part of security scheme: oauth2",
																						"key": "Authorization",
																						"value": "<token>"
																					}
																				],
																				"url": {
																					"raw": "{{baseUrl}}/metadata/data/sources/:owner/:sourceid/tables/:tableid/columns/:columnid",
																					"host": [
																						"{{baseUrl}}"
																					],
																					"path": [
																						"metadata",
																						"data",
																						"sources",
																						":owner",
																						":sourceid",
																						"tables",
																						":tableid",
																						"columns",
																						":columnid"
																					],
																					"variable": [
																						{
																							"key": "owner"
																						},
																						{
																							"key": "sourceid"
																						},
																						{
																							"key": "tableid"
																						},
																						{
																							"key": "columnid"
																						}
																					]
																				}
																			},
																			"status": "Forbidden",
																			"code": 403,
																			"_postman_previewlanguage": "json",
																			"header": [
																				{
																					"key": "Content-Type",
																					"value": "application/json"
																				}
																			],
																			"cookie": [],
																			"body": "{\n \"code\": 1519430,\n \"message\": \"enim\",\n \"details\": \"do\"\n}"
																		},
																		{
																			"name": "Not found",
																			"originalRequest": {
																				"method": "PUT",
																				"header": [
																					{
																						"description": "Added as a part of security scheme: oauth2",
																						"key": "Authorization",
																						"value": "<token>"
																					}
																				],
																				"url": {
																					"raw": "{{baseUrl}}/metadata/data/sources/:owner/:sourceid/tables/:tableid/columns/:columnid",
																					"host": [
																						"{{baseUrl}}"
																					],
																					"path": [
																						"metadata",
																						"data",
																						"sources",
																						":owner",
																						":sourceid",
																						"tables",
																						":tableid",
																						"columns",
																						":columnid"
																					],
																					"variable": [
																						{
																							"key": "owner"
																						},
																						{
																							"key": "sourceid"
																						},
																						{
																							"key": "tableid"
																						},
																						{
																							"key": "columnid"
																						}
																					]
																				}
																			},
																			"status": "Not Found",
																			"code": 404,
																			"_postman_previewlanguage": "json",
																			"header": [
																				{
																					"key": "Content-Type",
																					"value": "application/json"
																				}
																			],
																			"cookie": [],
																			"body": "{\n \"code\": 1519430,\n \"message\": \"enim\",\n \"details\": \"do\"\n}"
																		},
																		{
																			"name": "Bad request",
																			"originalRequest": {
																				"method": "PUT",
																				"header": [
																					{
																						"description": "Added as a part of security scheme: oauth2",
																						"key": "Authorization",
																						"value": "<token>"
																					}
																				],
																				"url": {
																					"raw": "{{baseUrl}}/metadata/data/sources/:owner/:sourceid/tables/:tableid/columns/:columnid",
																					"host": [
																						"{{baseUrl}}"
																					],
																					"path": [
																						"metadata",
																						"data",
																						"sources",
																						":owner",
																						":sourceid",
																						"tables",
																						":tableid",
																						"columns",
																						":columnid"
																					],
																					"variable": [
																						{
																							"key": "owner"
																						},
																						{
																							"key": "sourceid"
																						},
																						{
																							"key": "tableid"
																						},
																						{
																							"key": "columnid"
																						}
																					]
																				}
																			},
																			"status": "Unprocessable Entity (WebDAV) (RFC 4918)",
																			"code": 422,
																			"_postman_previewlanguage": "json",
																			"header": [
																				{
																					"key": "Content-Type",
																					"value": "application/json"
																				}
																			],
																			"cookie": [],
																			"body": "{\n \"code\": 1519430,\n \"message\": \"enim\",\n \"details\": \"do\"\n}"
																		},
																		{
																			"name": "Server error",
																			"originalRequest": {
																				"method": "PUT",
																				"header": [
																					{
																						"description": "Added as a part of security scheme: oauth2",
																						"key": "Authorization",
																						"value": "<token>"
																					}
																				],
																				"url": {
																					"raw": "{{baseUrl}}/metadata/data/sources/:owner/:sourceid/tables/:tableid/columns/:columnid",
																					"host": [
																						"{{baseUrl}}"
																					],
																					"path": [
																						"metadata",
																						"data",
																						"sources",
																						":owner",
																						":sourceid",
																						"tables",
																						":tableid",
																						"columns",
																						":columnid"
																					],
																					"variable": [
																						{
																							"key": "owner"
																						},
																						{
																							"key": "sourceid"
																						},
																						{
																							"key": "tableid"
																						},
																						{
																							"key": "columnid"
																						}
																					]
																				}
																			},
																			"status": "Internal Server Error",
																			"code": 500,
																			"_postman_previewlanguage": "json",
																			"header": [
																				{
																					"key": "Content-Type",
																					"value": "application/json"
																				}
																			],
																			"cookie": [],
																			"body": "{\n \"code\": 1519430,\n \"message\": \"enim\",\n \"details\": \"do\"\n}"
																		}
																	]
																},
																{
																	"name": "Delete a Column.",
																	"request": {
																		"auth": {
																			"type": "bearer",
																			"bearer": [
																				{
																					"key": "token",
																					"value": "{{readWrite}}",
																					"type": "string"
																				}
																			]
																		},
																		"method": "DELETE",
																		"header": [],
																		"url": {
																			"raw": "{{baseUrl}}/metadata/data/sources/:owner/:sourceid/tables/:tableid/columns/:columnid",
																			"host": [
																				"{{baseUrl}}"
																			],
																			"path": [
																				"metadata",
																				"data",
																				"sources",
																				":owner",
																				":sourceid",
																				"tables",
																				":tableid",
																				"columns",
																				":columnid"
																			],
																			"variable": [
																				{
																					"key": "owner",
																					"value": "{{org}}",
																					"description": "(Required) id of the user or organization"
																				},
																				{
																					"key": "sourceid",
																					"value": "{{sourceid}}",
																					"description": "(Required) database source id"
																				},
																				{
																					"key": "tableid",
																					"value": "{{tableid}}",
																					"description": "(Required) "
																				},
																				{
																					"key": "columnid",
																					"value": "{{columnid}}",
																					"description": "(Required) "
																				}
																			]
																		}
																	},
																	"response": [
																		{
																			"name": "Column has been successfully deleted.",
																			"originalRequest": {
																				"method": "DELETE",
																				"header": [
																					{
																						"description": "Added as a part of security scheme: oauth2",
																						"key": "Authorization",
																						"value": "<token>"
																					}
																				],
																				"url": {
																					"raw": "{{baseUrl}}/metadata/data/sources/:owner/:sourceid/tables/:tableid/columns/:columnid",
																					"host": [
																						"{{baseUrl}}"
																					],
																					"path": [
																						"metadata",
																						"data",
																						"sources",
																						":owner",
																						":sourceid",
																						"tables",
																						":tableid",
																						"columns",
																						":columnid"
																					],
																					"variable": [
																						{
																							"key": "owner"
																						},
																						{
																							"key": "sourceid"
																						},
																						{
																							"key": "tableid"
																						},
																						{
																							"key": "columnid"
																						}
																					]
																				}
																			},
																			"status": "OK",
																			"code": 200,
																			"_postman_previewlanguage": "json",
																			"header": [
																				{
																					"key": "Content-Type",
																					"value": "application/json"
																				}
																			],
																			"cookie": [],
																			"body": "{\n \"message\": \"voluptate culpa nulla esse\"\n}"
																		},
																		{
																			"name": "Bad request",
																			"originalRequest": {
																				"method": "DELETE",
																				"header": [
																					{
																						"description": "Added as a part of security scheme: oauth2",
																						"key": "Authorization",
																						"value": "<token>"
																					}
																				],
																				"url": {
																					"raw": "{{baseUrl}}/metadata/data/sources/:owner/:sourceid/tables/:tableid/columns/:columnid",
																					"host": [
																						"{{baseUrl}}"
																					],
																					"path": [
																						"metadata",
																						"data",
																						"sources",
																						":owner",
																						":sourceid",
																						"tables",
																						":tableid",
																						"columns",
																						":columnid"
																					],
																					"variable": [
																						{
																							"key": "owner"
																						},
																						{
																							"key": "sourceid"
																						},
																						{
																							"key": "tableid"
																						},
																						{
																							"key": "columnid"
																						}
																					]
																				}
																			},
																			"status": "Bad Request",
																			"code": 400,
																			"_postman_previewlanguage": "json",
																			"header": [
																				{
																					"key": "Content-Type",
																					"value": "application/json"
																				}
																			],
																			"cookie": [],
																			"body": "{\n \"code\": 1519430,\n \"message\": \"enim\",\n \"details\": \"do\"\n}"
																		},
																		{
																			"name": "Unauthorized",
																			"originalRequest": {
																				"method": "DELETE",
																				"header": [
																					{
																						"description": "Added as a part of security scheme: oauth2",
																						"key": "Authorization",
																						"value": "<token>"
																					}
																				],
																				"url": {
																					"raw": "{{baseUrl}}/metadata/data/sources/:owner/:sourceid/tables/:tableid/columns/:columnid",
																					"host": [
																						"{{baseUrl}}"
																					],
																					"path": [
																						"metadata",
																						"data",
																						"sources",
																						":owner",
																						":sourceid",
																						"tables",
																						":tableid",
																						"columns",
																						":columnid"
																					],
																					"variable": [
																						{
																							"key": "owner"
																						},
																						{
																							"key": "sourceid"
																						},
																						{
																							"key": "tableid"
																						},
																						{
																							"key": "columnid"
																						}
																					]
																				}
																			},
																			"status": "Unauthorized",
																			"code": 401,
																			"_postman_previewlanguage": "json",
																			"header": [
																				{
																					"key": "Content-Type",
																					"value": "application/json"
																				}
																			],
																			"cookie": [],
																			"body": "{\n \"code\": 1519430,\n \"message\": \"enim\",\n \"details\": \"do\"\n}"
																		},
																		{
																			"name": "Forbidden",
																			"originalRequest": {
																				"method": "DELETE",
																				"header": [
																					{
																						"description": "Added as a part of security scheme: oauth2",
																						"key": "Authorization",
																						"value": "<token>"
																					}
																				],
																				"url": {
																					"raw": "{{baseUrl}}/metadata/data/sources/:owner/:sourceid/tables/:tableid/columns/:columnid",
																					"host": [
																						"{{baseUrl}}"
																					],
																					"path": [
																						"metadata",
																						"data",
																						"sources",
																						":owner",
																						":sourceid",
																						"tables",
																						":tableid",
																						"columns",
																						":columnid"
																					],
																					"variable": [
																						{
																							"key": "owner"
																						},
																						{
																							"key": "sourceid"
																						},
																						{
																							"key": "tableid"
																						},
																						{
																							"key": "columnid"
																						}
																					]
																				}
																			},
																			"status": "Forbidden",
																			"code": 403,
																			"_postman_previewlanguage": "json",
																			"header": [
																				{
																					"key": "Content-Type",
																					"value": "application/json"
																				}
																			],
																			"cookie": [],
																			"body": "{\n \"code\": 1519430,\n \"message\": \"enim\",\n \"details\": \"do\"\n}"
																		},
																		{
																			"name": "Not found",
																			"originalRequest": {
																				"method": "DELETE",
																				"header": [
																					{
																						"description": "Added as a part of security scheme: oauth2",
																						"key": "Authorization",
																						"value": "<token>"
																					}
																				],
																				"url": {
																					"raw": "{{baseUrl}}/metadata/data/sources/:owner/:sourceid/tables/:tableid/columns/:columnid",
																					"host": [
																						"{{baseUrl}}"
																					],
																					"path": [
																						"metadata",
																						"data",
																						"sources",
																						":owner",
																						":sourceid",
																						"tables",
																						":tableid",
																						"columns",
																						":columnid"
																					],
																					"variable": [
																						{
																							"key": "owner"
																						},
																						{
																							"key": "sourceid"
																						},
																						{
																							"key": "tableid"
																						},
																						{
																							"key": "columnid"
																						}
																					]
																				}
																			},
																			"status": "Not Found",
																			"code": 404,
																			"_postman_previewlanguage": "json",
																			"header": [
																				{
																					"key": "Content-Type",
																					"value": "application/json"
																				}
																			],
																			"cookie": [],
																			"body": "{\n \"code\": 1519430,\n \"message\": \"enim\",\n \"details\": \"do\"\n}"
																		},
																		{
																			"name": "Server error",
																			"originalRequest": {
																				"method": "DELETE",
																				"header": [
																					{
																						"description": "Added as a part of security scheme: oauth2",
																						"key": "Authorization",
																						"value": "<token>"
																					}
																				],
																				"url": {
																					"raw": "{{baseUrl}}/metadata/data/sources/:owner/:sourceid/tables/:tableid/columns/:columnid",
																					"host": [
																						"{{baseUrl}}"
																					],
																					"path": [
																						"metadata",
																						"data",
																						"sources",
																						":owner",
																						":sourceid",
																						"tables",
																						":tableid",
																						"columns",
																						":columnid"
																					],
																					"variable": [
																						{
																							"key": "owner"
																						},
																						{
																							"key": "sourceid"
																						},
																						{
																							"key": "tableid"
																						},
																						{
																							"key": "columnid"
																						}
																					]
																				}
																			},
																			"status": "Internal Server Error",
																			"code": 500,
																			"_postman_previewlanguage": "json",
																			"header": [
																				{
																					"key": "Content-Type",
																					"value": "application/json"
																				}
																			],
																			"cookie": [],
																			"body": "{\n \"code\": 1519430,\n \"message\": \"enim\",\n \"details\": \"do\"\n}"
																		}
																	]
																},
																{
																	"name": "Update an existing Column.",
																	"request": {
																		"auth": {
																			"type": "bearer",
																			"bearer": [
																				{
																					"key": "token",
																					"value": "{{readWrite}}",
																					"type": "string"
																				}
																			]
																		},
																		"method": "PATCH",
																		"header": [
																			{
																				"key": "Content-Type",
																				"value": "application/json"
																			}
																		],
																		"body": {
																			"mode": "raw",
																			"raw": "{\n    \"collections\": [\n        \"My collection\"\n    ],\n    \"title\": \"column one\",\n    \"description\": \"a column too\",\n    \"tags\": [\n        \"hi\"\n    ],\n    \"dataType\": \"BIGINT\",\n    \"columnIndex\": 2\n}"
																		},
																		"url": {
																			"raw": "{{baseUrl}}/metadata/data/sources/:owner/:sourceid/tables/:tableid/columns/:columnid",
																			"host": [
																				"{{baseUrl}}"
																			],
																			"path": [
																				"metadata",
																				"data",
																				"sources",
																				":owner",
																				":sourceid",
																				"tables",
																				":tableid",
																				"columns",
																				":columnid"
																			],
																			"variable": [
																				{
																					"key": "owner",
																					"value": "{{org}}",
																					"description": "(Required) id of the user or organization"
																				},
																				{
																					"key": "sourceid",
																					"value": "{{sourceid}}",
																					"description": "(Required) database source id"
																				},
																				{
																					"key": "tableid",
																					"value": "{{tableid}}",
																					"description": "(Required) "
																				},
																				{
																					"key": "columnid",
																					"value": "{{columnid}}",
																					"description": "(Required) "
																				}
																			]
																		}
																	},
																	"response": [
																		{
																			"name": "Column updated successfully.",
																			"originalRequest": {
																				"method": "PATCH",
																				"header": [
																					{
																						"description": "Added as a part of security scheme: oauth2",
																						"key": "Authorization",
																						"value": "<token>"
																					}
																				],
																				"url": {
																					"raw": "{{baseUrl}}/metadata/data/sources/:owner/:sourceid/tables/:tableid/columns/:columnid",
																					"host": [
																						"{{baseUrl}}"
																					],
																					"path": [
																						"metadata",
																						"data",
																						"sources",
																						":owner",
																						":sourceid",
																						"tables",
																						":tableid",
																						"columns",
																						":columnid"
																					],
																					"variable": [
																						{
																							"key": "owner"
																						},
																						{
																							"key": "sourceid"
																						},
																						{
																							"key": "tableid"
																						},
																						{
																							"key": "columnid"
																						}
																					]
																				}
																			},
																			"status": "OK",
																			"code": 200,
																			"_postman_previewlanguage": "json",
																			"header": [
																				{
																					"key": "Content-Type",
																					"value": "application/json"
																				}
																			],
																			"cookie": [],
																			"body": "{\n \"message\": \"voluptate culpa nulla esse\"\n}"
																		},
																		{
																			"name": "Bad request",
																			"originalRequest": {
																				"method": "PATCH",
																				"header": [
																					{
																						"description": "Added as a part of security scheme: oauth2",
																						"key": "Authorization",
																						"value": "<token>"
																					}
																				],
																				"url": {
																					"raw": "{{baseUrl}}/metadata/data/sources/:owner/:sourceid/tables/:tableid/columns/:columnid",
																					"host": [
																						"{{baseUrl}}"
																					],
																					"path": [
																						"metadata",
																						"data",
																						"sources",
																						":owner",
																						":sourceid",
																						"tables",
																						":tableid",
																						"columns",
																						":columnid"
																					],
																					"variable": [
																						{
																							"key": "owner"
																						},
																						{
																							"key": "sourceid"
																						},
																						{
																							"key": "tableid"
																						},
																						{
																							"key": "columnid"
																						}
																					]
																				}
																			},
																			"status": "Bad Request",
																			"code": 400,
																			"_postman_previewlanguage": "json",
																			"header": [
																				{
																					"key": "Content-Type",
																					"value": "application/json"
																				}
																			],
																			"cookie": [],
																			"body": "{\n \"code\": 1519430,\n \"message\": \"enim\",\n \"details\": \"do\"\n}"
																		},
																		{
																			"name": "Unauthorized",
																			"originalRequest": {
																				"method": "PATCH",
																				"header": [
																					{
																						"description": "Added as a part of security scheme: oauth2",
																						"key": "Authorization",
																						"value": "<token>"
																					}
																				],
																				"url": {
																					"raw": "{{baseUrl}}/metadata/data/sources/:owner/:sourceid/tables/:tableid/columns/:columnid",
																					"host": [
																						"{{baseUrl}}"
																					],
																					"path": [
																						"metadata",
																						"data",
																						"sources",
																						":owner",
																						":sourceid",
																						"tables",
																						":tableid",
																						"columns",
																						":columnid"
																					],
																					"variable": [
																						{
																							"key": "owner"
																						},
																						{
																							"key": "sourceid"
																						},
																						{
																							"key": "tableid"
																						},
																						{
																							"key": "columnid"
																						}
																					]
																				}
																			},
																			"status": "Unauthorized",
																			"code": 401,
																			"_postman_previewlanguage": "json",
																			"header": [
																				{
																					"key": "Content-Type",
																					"value": "application/json"
																				}
																			],
																			"cookie": [],
																			"body": "{\n \"code\": 1519430,\n \"message\": \"enim\",\n \"details\": \"do\"\n}"
																		},
																		{
																			"name": "Forbidden",
																			"originalRequest": {
																				"method": "PATCH",
																				"header": [
																					{
																						"description": "Added as a part of security scheme: oauth2",
																						"key": "Authorization",
																						"value": "<token>"
																					}
																				],
																				"url": {
																					"raw": "{{baseUrl}}/metadata/data/sources/:owner/:sourceid/tables/:tableid/columns/:columnid",
																					"host": [
																						"{{baseUrl}}"
																					],
																					"path": [
																						"metadata",
																						"data",
																						"sources",
																						":owner",
																						":sourceid",
																						"tables",
																						":tableid",
																						"columns",
																						":columnid"
																					],
																					"variable": [
																						{
																							"key": "owner"
																						},
																						{
																							"key": "sourceid"
																						},
																						{
																							"key": "tableid"
																						},
																						{
																							"key": "columnid"
																						}
																					]
																				}
																			},
																			"status": "Forbidden",
																			"code": 403,
																			"_postman_previewlanguage": "json",
																			"header": [
																				{
																					"key": "Content-Type",
																					"value": "application/json"
																				}
																			],
																			"cookie": [],
																			"body": "{\n \"code\": 1519430,\n \"message\": \"enim\",\n \"details\": \"do\"\n}"
																		},
																		{
																			"name": "Not found",
																			"originalRequest": {
																				"method": "PATCH",
																				"header": [
																					{
																						"description": "Added as a part of security scheme: oauth2",
																						"key": "Authorization",
																						"value": "<token>"
																					}
																				],
																				"url": {
																					"raw": "{{baseUrl}}/metadata/data/sources/:owner/:sourceid/tables/:tableid/columns/:columnid",
																					"host": [
																						"{{baseUrl}}"
																					],
																					"path": [
																						"metadata",
																						"data",
																						"sources",
																						":owner",
																						":sourceid",
																						"tables",
																						":tableid",
																						"columns",
																						":columnid"
																					],
																					"variable": [
																						{
																							"key": "owner"
																						},
																						{
																							"key": "sourceid"
																						},
																						{
																							"key": "tableid"
																						},
																						{
																							"key": "columnid"
																						}
																					]
																				}
																			},
																			"status": "Not Found",
																			"code": 404,
																			"_postman_previewlanguage": "json",
																			"header": [
																				{
																					"key": "Content-Type",
																					"value": "application/json"
																				}
																			],
																			"cookie": [],
																			"body": "{\n \"code\": 1519430,\n \"message\": \"enim\",\n \"details\": \"do\"\n}"
																		},
																		{
																			"name": "Bad request",
																			"originalRequest": {
																				"method": "PATCH",
																				"header": [
																					{
																						"description": "Added as a part of security scheme: oauth2",
																						"key": "Authorization",
																						"value": "<token>"
																					}
																				],
																				"url": {
																					"raw": "{{baseUrl}}/metadata/data/sources/:owner/:sourceid/tables/:tableid/columns/:columnid",
																					"host": [
																						"{{baseUrl}}"
																					],
																					"path": [
																						"metadata",
																						"data",
																						"sources",
																						":owner",
																						":sourceid",
																						"tables",
																						":tableid",
																						"columns",
																						":columnid"
																					],
																					"variable": [
																						{
																							"key": "owner"
																						},
																						{
																							"key": "sourceid"
																						},
																						{
																							"key": "tableid"
																						},
																						{
																							"key": "columnid"
																						}
																					]
																				}
																			},
																			"status": "Unprocessable Entity (WebDAV) (RFC 4918)",
																			"code": 422,
																			"_postman_previewlanguage": "json",
																			"header": [
																				{
																					"key": "Content-Type",
																					"value": "application/json"
																				}
																			],
																			"cookie": [],
																			"body": "{\n \"code\": 1519430,\n \"message\": \"enim\",\n \"details\": \"do\"\n}"
																		},
																		{
																			"name": "Server error",
																			"originalRequest": {
																				"method": "PATCH",
																				"header": [
																					{
																						"description": "Added as a part of security scheme: oauth2",
																						"key": "Authorization",
																						"value": "<token>"
																					}
																				],
																				"url": {
																					"raw": "{{baseUrl}}/metadata/data/sources/:owner/:sourceid/tables/:tableid/columns/:columnid",
																					"host": [
																						"{{baseUrl}}"
																					],
																					"path": [
																						"metadata",
																						"data",
																						"sources",
																						":owner",
																						":sourceid",
																						"tables",
																						":tableid",
																						"columns",
																						":columnid"
																					],
																					"variable": [
																						{
																							"key": "owner"
																						},
																						{
																							"key": "sourceid"
																						},
																						{
																							"key": "tableid"
																						},
																						{
																							"key": "columnid"
																						}
																					]
																				}
																			},
																			"status": "Internal Server Error",
																			"code": 500,
																			"_postman_previewlanguage": "json",
																			"header": [
																				{
																					"key": "Content-Type",
																					"value": "application/json"
																				}
																			],
																			"cookie": [],
																			"body": "{\n \"code\": 1519430,\n \"message\": \"enim\",\n \"details\": \"do\"\n}"
																		}
																	]
																}
															]
														},
														{
															"name": "Get columns for a given table",
															"request": {
																"auth": {
																	"type": "bearer",
																	"bearer": [
																		{
																			"key": "token",
																			"value": "{{readWrite}}",
																			"type": "string"
																		}
																	]
																},
																"method": "GET",
																"header": [],
																"url": {
																	"raw": "{{baseUrl}}/metadata/data/sources/:owner/:sourceid/tables/:tableid/columns",
																	"host": [
																		"{{baseUrl}}"
																	],
																	"path": [
																		"metadata",
																		"data",
																		"sources",
																		":owner",
																		":sourceid",
																		"tables",
																		":tableid",
																		"columns"
																	],
																	"query": [
																		{
																			"key": "size",
																			"value": "adipisicing elit ullamco",
																			"disabled": true
																		},
																		{
																			"key": "from",
																			"value": "adipisicing elit ullamco",
																			"disabled": true
																		},
																		{
																			"key": "sort",
																			"value": "adipisicing elit ullamco",
																			"disabled": true
																		}
																	],
																	"variable": [
																		{
																			"key": "owner",
																			"value": "{{org}}",
																			"description": "(Required) id of the user or organization"
																		},
																		{
																			"key": "sourceid",
																			"value": "{{sourceid}}",
																			"description": "(Required) database source id"
																		},
																		{
																			"key": "tableid",
																			"value": "{{tableid}}",
																			"description": "(Required) "
																		}
																	]
																}
															},
															"response": [
																{
																	"name": "Successfully retrieved metadata analysis",
																	"originalRequest": {
																		"method": "GET",
																		"header": [
																			{
																				"description": "Added as a part of security scheme: oauth2",
																				"key": "Authorization",
																				"value": "<token>"
																			}
																		],
																		"url": {
																			"raw": "{{baseUrl}}/metadata/data/sources/:owner/:sourceid/tables/:tableid/columns?size=adipisicing elit ullamco&from=adipisicing elit ullamco&sort=adipisicing elit ullamco",
																			"host": [
																				"{{baseUrl}}"
																			],
																			"path": [
																				"metadata",
																				"data",
																				"sources",
																				":owner",
																				":sourceid",
																				"tables",
																				":tableid",
																				"columns"
																			],
																			"query": [
																				{
																					"key": "size",
																					"value": "adipisicing elit ullamco"
																				},
																				{
																					"key": "from",
																					"value": "adipisicing elit ullamco"
																				},
																				{
																					"key": "sort",
																					"value": "adipisicing elit ullamco"
																				}
																			],
																			"variable": [
																				{
																					"key": "owner"
																				},
																				{
																					"key": "sourceid"
																				},
																				{
																					"key": "tableid"
																				}
																			]
																		}
																	},
																	"status": "OK",
																	"code": 200,
																	"_postman_previewlanguage": "json",
																	"header": [
																		{
																			"key": "Content-Type",
																			"value": "application/json"
																		}
																	],
																	"cookie": [],
																	"body": "{\n \"count\": 64160876,\n \"records\": [\n  {\n   \"created\": \"1993-11-09T13:04:36.271Z\",\n   \"id\": \"nulla nisi Excepteur non\",\n   \"owner\": \"ipsum\",\n   \"visibility\": \"PRIVATE\",\n   \"title\": \"proident in et officia\",\n   \"category\": \"et Excepteur incididunt ipsum cupidatat\",\n   \"typeLabel\": \"labo\",\n   \"typeIri\": \"cillum ipsum Lorem dolore\",\n   \"rootParentTypeLabel\": \"proident laboris\",\n   \"rootParentTypeIri\": \"adipisicing non nostrud aliqua\",\n   \"table\": {\n    \"owner\": {\n     \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    \"sourceId\": {\n     \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    \"tableId\": {\n     \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    }\n   },\n   \"dataType\": \"non ad\",\n   \"columnIndex\": 69943645,\n   \"description\": \"labore aliquip velit occaecat\",\n   \"encodedIri\": \"amet officia non\",\n   \"summary\": \"cupidatat officia Ut\",\n   \"url\": \"http://LwKGLADeUPzokbPOdKgLPJvqQMh.yerF-YAmoiMQt\",\n   \"updated\": \"2021-10-07T15:26:29.480Z\",\n   \"collections\": [\n    {\n     \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    {\n     \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    }\n   ],\n   \"relationshipTypes\": [\n    \"sed labore enim\",\n    \"culpa mollit veniam\"\n   ],\n   \"tags\": [\n    \"aliquip qui et veniam\",\n    \"ipsum sit proident dolor officia\"\n   ],\n   \"externalUrls\": [\n    \"in Ut incididunt\",\n    \"adipisicing exercitation esse ex\"\n   ],\n   \"assetStatus\": {\n    \"assetStatusLabel\": \"Duis\",\n    \"dispositionLabel\": \"irure am\"\n   },\n   \"properties\": {}\n  },\n  {\n   \"created\": \"1962-07-17T17:38:02.710Z\",\n   \"id\": \"non dolore pariatur sed\",\n   \"owner\": \"ad\",\n   \"visibility\": \"OPEN\",\n   \"title\": \"aute amet elit\",\n   \"category\": \"velit veniam tempor culpa\",\n   \"typeLabel\": \"sunt ad\",\n   \"typeIri\": \"aute eu elit fugiat aliquip\",\n   \"rootParentTypeLabel\": \"enim sed aliquip reprehenderit in\",\n   \"rootParentTypeIri\": \"nulla occaecat consequat dolor aliqua\",\n   \"table\": {\n    \"owner\": {\n     \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    \"sourceId\": {\n     \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    \"tableId\": {\n     \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    }\n   },\n   \"dataType\": \"cillum es\",\n   \"columnIndex\": 60084365,\n   \"description\": \"esse exercitation consequat sint labore\",\n   \"encodedIri\": \"velit adipisicing\",\n   \"summary\": \"consequat cillum exercitation\",\n   \"url\": \"https://PfeGAnyXpIzcJoWFivKhcbfMBgHMUm.wzE6\",\n   \"updated\": \"2000-11-17T06:04:06.390Z\",\n   \"collections\": [\n    {\n     \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    {\n     \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    }\n   ],\n   \"relationshipTypes\": [\n    \"consectetur anim laborum\",\n    \"commodo dolor\"\n   ],\n   \"tags\": [\n    \"in consectetur irure do Excepteur\",\n    \"ad sit\"\n   ],\n   \"externalUrls\": [\n    \"in est occaecat dolor\",\n    \"sed nostrud elit fugiat Ut\"\n   ],\n   \"assetStatus\": {\n    \"assetStatusLabel\": \"ut tempor officia m\",\n    \"dispositionLabel\": \"cupidatat sunt est\"\n   },\n   \"properties\": {}\n  }\n ],\n \"nextPageToken\": \"deserunt Lorem occaecat nostrud\"\n}"
																},
																{
																	"name": "Bad request",
																	"originalRequest": {
																		"method": "GET",
																		"header": [
																			{
																				"description": "Added as a part of security scheme: oauth2",
																				"key": "Authorization",
																				"value": "<token>"
																			}
																		],
																		"url": {
																			"raw": "{{baseUrl}}/metadata/data/sources/:owner/:sourceid/tables/:tableid/columns?size=adipisicing elit ullamco&from=adipisicing elit ullamco&sort=adipisicing elit ullamco",
																			"host": [
																				"{{baseUrl}}"
																			],
																			"path": [
																				"metadata",
																				"data",
																				"sources",
																				":owner",
																				":sourceid",
																				"tables",
																				":tableid",
																				"columns"
																			],
																			"query": [
																				{
																					"key": "size",
																					"value": "adipisicing elit ullamco"
																				},
																				{
																					"key": "from",
																					"value": "adipisicing elit ullamco"
																				},
																				{
																					"key": "sort",
																					"value": "adipisicing elit ullamco"
																				}
																			],
																			"variable": [
																				{
																					"key": "owner"
																				},
																				{
																					"key": "sourceid"
																				},
																				{
																					"key": "tableid"
																				}
																			]
																		}
																	},
																	"status": "Bad Request",
																	"code": 400,
																	"_postman_previewlanguage": "json",
																	"header": [
																		{
																			"key": "Content-Type",
																			"value": "application/json"
																		}
																	],
																	"cookie": [],
																	"body": "{\n \"code\": 1519430,\n \"message\": \"enim\",\n \"details\": \"do\"\n}"
																},
																{
																	"name": "Unauthorized",
																	"originalRequest": {
																		"method": "GET",
																		"header": [
																			{
																				"description": "Added as a part of security scheme: oauth2",
																				"key": "Authorization",
																				"value": "<token>"
																			}
																		],
																		"url": {
																			"raw": "{{baseUrl}}/metadata/data/sources/:owner/:sourceid/tables/:tableid/columns?size=adipisicing elit ullamco&from=adipisicing elit ullamco&sort=adipisicing elit ullamco",
																			"host": [
																				"{{baseUrl}}"
																			],
																			"path": [
																				"metadata",
																				"data",
																				"sources",
																				":owner",
																				":sourceid",
																				"tables",
																				":tableid",
																				"columns"
																			],
																			"query": [
																				{
																					"key": "size",
																					"value": "adipisicing elit ullamco"
																				},
																				{
																					"key": "from",
																					"value": "adipisicing elit ullamco"
																				},
																				{
																					"key": "sort",
																					"value": "adipisicing elit ullamco"
																				}
																			],
																			"variable": [
																				{
																					"key": "owner"
																				},
																				{
																					"key": "sourceid"
																				},
																				{
																					"key": "tableid"
																				}
																			]
																		}
																	},
																	"status": "Unauthorized",
																	"code": 401,
																	"_postman_previewlanguage": "json",
																	"header": [
																		{
																			"key": "Content-Type",
																			"value": "application/json"
																		}
																	],
																	"cookie": [],
																	"body": "{\n \"code\": 1519430,\n \"message\": \"enim\",\n \"details\": \"do\"\n}"
																},
																{
																	"name": "Forbidden",
																	"originalRequest": {
																		"method": "GET",
																		"header": [
																			{
																				"description": "Added as a part of security scheme: oauth2",
																				"key": "Authorization",
																				"value": "<token>"
																			}
																		],
																		"url": {
																			"raw": "{{baseUrl}}/metadata/data/sources/:owner/:sourceid/tables/:tableid/columns?size=adipisicing elit ullamco&from=adipisicing elit ullamco&sort=adipisicing elit ullamco",
																			"host": [
																				"{{baseUrl}}"
																			],
																			"path": [
																				"metadata",
																				"data",
																				"sources",
																				":owner",
																				":sourceid",
																				"tables",
																				":tableid",
																				"columns"
																			],
																			"query": [
																				{
																					"key": "size",
																					"value": "adipisicing elit ullamco"
																				},
																				{
																					"key": "from",
																					"value": "adipisicing elit ullamco"
																				},
																				{
																					"key": "sort",
																					"value": "adipisicing elit ullamco"
																				}
																			],
																			"variable": [
																				{
																					"key": "owner"
																				},
																				{
																					"key": "sourceid"
																				},
																				{
																					"key": "tableid"
																				}
																			]
																		}
																	},
																	"status": "Forbidden",
																	"code": 403,
																	"_postman_previewlanguage": "json",
																	"header": [
																		{
																			"key": "Content-Type",
																			"value": "application/json"
																		}
																	],
																	"cookie": [],
																	"body": "{\n \"code\": 1519430,\n \"message\": \"enim\",\n \"details\": \"do\"\n}"
																},
																{
																	"name": "Not found",
																	"originalRequest": {
																		"method": "GET",
																		"header": [
																			{
																				"description": "Added as a part of security scheme: oauth2",
																				"key": "Authorization",
																				"value": "<token>"
																			}
																		],
																		"url": {
																			"raw": "{{baseUrl}}/metadata/data/sources/:owner/:sourceid/tables/:tableid/columns?size=adipisicing elit ullamco&from=adipisicing elit ullamco&sort=adipisicing elit ullamco",
																			"host": [
																				"{{baseUrl}}"
																			],
																			"path": [
																				"metadata",
																				"data",
																				"sources",
																				":owner",
																				":sourceid",
																				"tables",
																				":tableid",
																				"columns"
																			],
																			"query": [
																				{
																					"key": "size",
																					"value": "adipisicing elit ullamco"
																				},
																				{
																					"key": "from",
																					"value": "adipisicing elit ullamco"
																				},
																				{
																					"key": "sort",
																					"value": "adipisicing elit ullamco"
																				}
																			],
																			"variable": [
																				{
																					"key": "owner"
																				},
																				{
																					"key": "sourceid"
																				},
																				{
																					"key": "tableid"
																				}
																			]
																		}
																	},
																	"status": "Not Found",
																	"code": 404,
																	"_postman_previewlanguage": "json",
																	"header": [
																		{
																			"key": "Content-Type",
																			"value": "application/json"
																		}
																	],
																	"cookie": [],
																	"body": "{\n \"code\": 1519430,\n \"message\": \"enim\",\n \"details\": \"do\"\n}"
																},
																{
																	"name": "Server error",
																	"originalRequest": {
																		"method": "GET",
																		"header": [
																			{
																				"description": "Added as a part of security scheme: oauth2",
																				"key": "Authorization",
																				"value": "<token>"
																			}
																		],
																		"url": {
																			"raw": "{{baseUrl}}/metadata/data/sources/:owner/:sourceid/tables/:tableid/columns?size=adipisicing elit ullamco&from=adipisicing elit ullamco&sort=adipisicing elit ullamco",
																			"host": [
																				"{{baseUrl}}"
																			],
																			"path": [
																				"metadata",
																				"data",
																				"sources",
																				":owner",
																				":sourceid",
																				"tables",
																				":tableid",
																				"columns"
																			],
																			"query": [
																				{
																					"key": "size",
																					"value": "adipisicing elit ullamco"
																				},
																				{
																					"key": "from",
																					"value": "adipisicing elit ullamco"
																				},
																				{
																					"key": "sort",
																					"value": "adipisicing elit ullamco"
																				}
																			],
																			"variable": [
																				{
																					"key": "owner"
																				},
																				{
																					"key": "sourceid"
																				},
																				{
																					"key": "tableid"
																				}
																			]
																		}
																	},
																	"status": "Internal Server Error",
																	"code": 500,
																	"_postman_previewlanguage": "json",
																	"header": [
																		{
																			"key": "Content-Type",
																			"value": "application/json"
																		}
																	],
																	"cookie": [],
																	"body": "{\n \"code\": 1519430,\n \"message\": \"enim\",\n \"details\": \"do\"\n}"
																}
															]
														},
														{
															"name": "Create a Column.",
															"request": {
																"auth": {
																	"type": "bearer",
																	"bearer": [
																		{
																			"key": "token",
																			"value": "{{readWrite}}",
																			"type": "string"
																		}
																	]
																},
																"method": "POST",
																"header": [
																	{
																		"key": "Content-Type",
																		"value": "application/json"
																	}
																],
																"body": {
																	"mode": "raw",
																	"raw": "{\n    \"collections\": [\n        \"My collection\"\n    ],\n    \"title\": \"column one\",\n    \"description\": \"a column\",\n    \"tags\": [\n        \"hi\"\n    ],\n    \"dataType\": \"BIGINT\",\n    \"columnIndex\": 2\n}"
																},
																"url": {
																	"raw": "{{baseUrl}}/metadata/data/sources/:owner/:sourceid/tables/:tableid/columns",
																	"host": [
																		"{{baseUrl}}"
																	],
																	"path": [
																		"metadata",
																		"data",
																		"sources",
																		":owner",
																		":sourceid",
																		"tables",
																		":tableid",
																		"columns"
																	],
																	"variable": [
																		{
																			"key": "owner",
																			"value": "{{org}}",
																			"description": "(Required) id of the user or organization"
																		},
																		{
																			"key": "sourceid",
																			"value": "{{sourceid}}",
																			"description": "(Required) database source id"
																		},
																		{
																			"key": "tableid",
																			"value": "{{tableid}}",
																			"description": "(Required) "
																		}
																	]
																}
															},
															"response": [
																{
																	"name": "Column Metadata created successfully.",
																	"originalRequest": {
																		"method": "POST",
																		"header": [
																			{
																				"description": "Added as a part of security scheme: oauth2",
																				"key": "Authorization",
																				"value": "<token>"
																			}
																		],
																		"url": {
																			"raw": "{{baseUrl}}/metadata/data/sources/:owner/:sourceid/tables/:tableid/columns",
																			"host": [
																				"{{baseUrl}}"
																			],
																			"path": [
																				"metadata",
																				"data",
																				"sources",
																				":owner",
																				":sourceid",
																				"tables",
																				":tableid",
																				"columns"
																			],
																			"variable": [
																				{
																					"key": "owner"
																				},
																				{
																					"key": "sourceid"
																				},
																				{
																					"key": "tableid"
																				}
																			]
																		}
																	},
																	"status": "OK",
																	"code": 200,
																	"_postman_previewlanguage": "json",
																	"header": [
																		{
																			"key": "Content-Type",
																			"value": "application/json"
																		}
																	],
																	"cookie": [],
																	"body": "{\n \"uri\": \"http://A.sfQ-gVx.2oEMnKdGnZwvPKe1go1ZBeMhzDIKRr\",\n \"message\": \"nisi nulla quis veniam\"\n}"
																},
																{
																	"name": "Bad request",
																	"originalRequest": {
																		"method": "POST",
																		"header": [
																			{
																				"description": "Added as a part of security scheme: oauth2",
																				"key": "Authorization",
																				"value": "<token>"
																			}
																		],
																		"url": {
																			"raw": "{{baseUrl}}/metadata/data/sources/:owner/:sourceid/tables/:tableid/columns",
																			"host": [
																				"{{baseUrl}}"
																			],
																			"path": [
																				"metadata",
																				"data",
																				"sources",
																				":owner",
																				":sourceid",
																				"tables",
																				":tableid",
																				"columns"
																			],
																			"variable": [
																				{
																					"key": "owner"
																				},
																				{
																					"key": "sourceid"
																				},
																				{
																					"key": "tableid"
																				}
																			]
																		}
																	},
																	"status": "Bad Request",
																	"code": 400,
																	"_postman_previewlanguage": "json",
																	"header": [
																		{
																			"key": "Content-Type",
																			"value": "application/json"
																		}
																	],
																	"cookie": [],
																	"body": "{\n \"code\": 1519430,\n \"message\": \"enim\",\n \"details\": \"do\"\n}"
																},
																{
																	"name": "Unauthorized",
																	"originalRequest": {
																		"method": "POST",
																		"header": [
																			{
																				"description": "Added as a part of security scheme: oauth2",
																				"key": "Authorization",
																				"value": "<token>"
																			}
																		],
																		"url": {
																			"raw": "{{baseUrl}}/metadata/data/sources/:owner/:sourceid/tables/:tableid/columns",
																			"host": [
																				"{{baseUrl}}"
																			],
																			"path": [
																				"metadata",
																				"data",
																				"sources",
																				":owner",
																				":sourceid",
																				"tables",
																				":tableid",
																				"columns"
																			],
																			"variable": [
																				{
																					"key": "owner"
																				},
																				{
																					"key": "sourceid"
																				},
																				{
																					"key": "tableid"
																				}
																			]
																		}
																	},
																	"status": "Unauthorized",
																	"code": 401,
																	"_postman_previewlanguage": "json",
																	"header": [
																		{
																			"key": "Content-Type",
																			"value": "application/json"
																		}
																	],
																	"cookie": [],
																	"body": "{\n \"code\": 1519430,\n \"message\": \"enim\",\n \"details\": \"do\"\n}"
																},
																{
																	"name": "Forbidden",
																	"originalRequest": {
																		"method": "POST",
																		"header": [
																			{
																				"description": "Added as a part of security scheme: oauth2",
																				"key": "Authorization",
																				"value": "<token>"
																			}
																		],
																		"url": {
																			"raw": "{{baseUrl}}/metadata/data/sources/:owner/:sourceid/tables/:tableid/columns",
																			"host": [
																				"{{baseUrl}}"
																			],
																			"path": [
																				"metadata",
																				"data",
																				"sources",
																				":owner",
																				":sourceid",
																				"tables",
																				":tableid",
																				"columns"
																			],
																			"variable": [
																				{
																					"key": "owner"
																				},
																				{
																					"key": "sourceid"
																				},
																				{
																					"key": "tableid"
																				}
																			]
																		}
																	},
																	"status": "Forbidden",
																	"code": 403,
																	"_postman_previewlanguage": "json",
																	"header": [
																		{
																			"key": "Content-Type",
																			"value": "application/json"
																		}
																	],
																	"cookie": [],
																	"body": "{\n \"code\": 1519430,\n \"message\": \"enim\",\n \"details\": \"do\"\n}"
																},
																{
																	"name": "Not found",
																	"originalRequest": {
																		"method": "POST",
																		"header": [
																			{
																				"description": "Added as a part of security scheme: oauth2",
																				"key": "Authorization",
																				"value": "<token>"
																			}
																		],
																		"url": {
																			"raw": "{{baseUrl}}/metadata/data/sources/:owner/:sourceid/tables/:tableid/columns",
																			"host": [
																				"{{baseUrl}}"
																			],
																			"path": [
																				"metadata",
																				"data",
																				"sources",
																				":owner",
																				":sourceid",
																				"tables",
																				":tableid",
																				"columns"
																			],
																			"variable": [
																				{
																					"key": "owner"
																				},
																				{
																					"key": "sourceid"
																				},
																				{
																					"key": "tableid"
																				}
																			]
																		}
																	},
																	"status": "Not Found",
																	"code": 404,
																	"_postman_previewlanguage": "json",
																	"header": [
																		{
																			"key": "Content-Type",
																			"value": "application/json"
																		}
																	],
																	"cookie": [],
																	"body": "{\n \"code\": 1519430,\n \"message\": \"enim\",\n \"details\": \"do\"\n}"
																},
																{
																	"name": "Conflict",
																	"originalRequest": {
																		"method": "POST",
																		"header": [
																			{
																				"description": "Added as a part of security scheme: oauth2",
																				"key": "Authorization",
																				"value": "<token>"
																			}
																		],
																		"url": {
																			"raw": "{{baseUrl}}/metadata/data/sources/:owner/:sourceid/tables/:tableid/columns",
																			"host": [
																				"{{baseUrl}}"
																			],
																			"path": [
																				"metadata",
																				"data",
																				"sources",
																				":owner",
																				":sourceid",
																				"tables",
																				":tableid",
																				"columns"
																			],
																			"variable": [
																				{
																					"key": "owner"
																				},
																				{
																					"key": "sourceid"
																				},
																				{
																					"key": "tableid"
																				}
																			]
																		}
																	},
																	"status": "Conflict",
																	"code": 409,
																	"_postman_previewlanguage": "json",
																	"header": [
																		{
																			"key": "Content-Type",
																			"value": "application/json"
																		}
																	],
																	"cookie": [],
																	"body": "{\n \"code\": 1519430,\n \"message\": \"enim\",\n \"details\": \"do\"\n}"
																},
																{
																	"name": "Bad request",
																	"originalRequest": {
																		"method": "POST",
																		"header": [
																			{
																				"description": "Added as a part of security scheme: oauth2",
																				"key": "Authorization",
																				"value": "<token>"
																			}
																		],
																		"url": {
																			"raw": "{{baseUrl}}/metadata/data/sources/:owner/:sourceid/tables/:tableid/columns",
																			"host": [
																				"{{baseUrl}}"
																			],
																			"path": [
																				"metadata",
																				"data",
																				"sources",
																				":owner",
																				":sourceid",
																				"tables",
																				":tableid",
																				"columns"
																			],
																			"variable": [
																				{
																					"key": "owner"
																				},
																				{
																					"key": "sourceid"
																				},
																				{
																					"key": "tableid"
																				}
																			]
																		}
																	},
																	"status": "Unprocessable Entity (WebDAV) (RFC 4918)",
																	"code": 422,
																	"_postman_previewlanguage": "json",
																	"header": [
																		{
																			"key": "Content-Type",
																			"value": "application/json"
																		}
																	],
																	"cookie": [],
																	"body": "{\n \"code\": 1519430,\n \"message\": \"enim\",\n \"details\": \"do\"\n}"
																},
																{
																	"name": "Server error",
																	"originalRequest": {
																		"method": "POST",
																		"header": [
																			{
																				"description": "Added as a part of security scheme: oauth2",
																				"key": "Authorization",
																				"value": "<token>"
																			}
																		],
																		"url": {
																			"raw": "{{baseUrl}}/metadata/data/sources/:owner/:sourceid/tables/:tableid/columns",
																			"host": [
																				"{{baseUrl}}"
																			],
																			"path": [
																				"metadata",
																				"data",
																				"sources",
																				":owner",
																				":sourceid",
																				"tables",
																				":tableid",
																				"columns"
																			],
																			"variable": [
																				{
																					"key": "owner"
																				},
																				{
																					"key": "sourceid"
																				},
																				{
																					"key": "tableid"
																				}
																			]
																		}
																	},
																	"status": "Internal Server Error",
																	"code": 500,
																	"_postman_previewlanguage": "json",
																	"header": [
																		{
																			"key": "Content-Type",
																			"value": "application/json"
																		}
																	],
																	"cookie": [],
																	"body": "{\n \"code\": 1519430,\n \"message\": \"enim\",\n \"details\": \"do\"\n}"
																}
															]
														}
													]
												},
												{
													"name": "Get an individual table metadata",
													"request": {
														"auth": {
															"type": "oauth2"
														},
														"method": "GET",
														"header": [],
														"url": {
															"raw": "{{baseUrl}}/metadata/data/sources/:owner/:sourceid/tables/:tableid",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"metadata",
																"data",
																"sources",
																":owner",
																":sourceid",
																"tables",
																":tableid"
															],
															"variable": [
																{
																	"key": "owner",
																	"value": "adipisicing elit ullamco",
																	"description": "(Required) id of the user or organization"
																},
																{
																	"key": "sourceid",
																	"value": "adipisicing elit ullamco",
																	"description": "(Required) database source id"
																},
																{
																	"key": "tableid",
																	"value": "adipisicing elit ullamco",
																	"description": "(Required) "
																}
															]
														}
													},
													"response": [
														{
															"name": "successful operation",
															"originalRequest": {
																"method": "GET",
																"header": [
																	{
																		"description": "Added as a part of security scheme: oauth2",
																		"key": "Authorization",
																		"value": "<token>"
																	}
																],
																"url": {
																	"raw": "{{baseUrl}}/metadata/data/sources/:owner/:sourceid/tables/:tableid",
																	"host": [
																		"{{baseUrl}}"
																	],
																	"path": [
																		"metadata",
																		"data",
																		"sources",
																		":owner",
																		":sourceid",
																		"tables",
																		":tableid"
																	],
																	"variable": [
																		{
																			"key": "owner"
																		},
																		{
																			"key": "sourceid"
																		},
																		{
																			"key": "tableid"
																		}
																	]
																}
															},
															"status": "OK",
															"code": 200,
															"_postman_previewlanguage": "json",
															"header": [
																{
																	"key": "Content-Type",
																	"value": "application/json"
																}
															],
															"cookie": [],
															"body": "{\n \"created\": \"1988-06-04T23:43:49.655Z\",\n \"id\": \"anim et eiusmod cupidatat\",\n \"owner\": \"in fugiat officia\",\n \"visibility\": \"OPEN\",\n \"title\": \"sed ut\",\n \"category\": \"ad cupidatat\",\n \"typeLabel\": \"elit\",\n \"typeIri\": \"esse nostrud magna id\",\n \"rootParentTypeLabel\": \"velit esse\",\n \"rootParentTypeIri\": \"dolore mollit irure officia\",\n \"table\": {\n  \"owner\": \"mollit\",\n  \"sourceId\": \"occaecat eu\",\n  \"tableId\": \"sunt\"\n },\n \"dataType\": \"quis eiusmod\",\n \"columnIndex\": 56482049,\n \"description\": \"non d\",\n \"encodedIri\": \"nostrud magna mollit non\",\n \"summary\": \"veniam non nostrud\",\n \"url\": \"http://l.oincbiP+ZuKrkwFxuvi\",\n \"updated\": \"1958-10-08T08:29:55.084Z\",\n \"collections\": [\n  {\n   \"agentid\": \"magna\",\n   \"catalogid\": \"consequat cupidatat non\",\n   \"referent\": \"adipisicing officia ut dolore\"\n  },\n  {\n   \"agentid\": \"deserunt veniam\",\n   \"catalogid\": \"voluptate amet aliqua sed reprehenderit\",\n   \"referent\": \"cillum reprehenderit amet\"\n  }\n ],\n \"relationshipTypes\": [\n  \"incididunt consequat ad\",\n  \"esse Excepteur sed in\"\n ],\n \"tags\": [\n  \"cillum \",\n  \"dolor labore in Duis\"\n ],\n \"externalUrls\": [\n  \"ut dolor non minim\",\n  \"id\"\n ],\n \"assetStatus\": {\n  \"assetStatusLabel\": \"sunt ex aute do\",\n  \"dispositionLabel\": \"laboris re\"\n },\n \"properties\": {}\n}"
														},
														{
															"name": "Bad Request",
															"originalRequest": {
																"method": "GET",
																"header": [
																	{
																		"description": "Added as a part of security scheme: oauth2",
																		"key": "Authorization",
																		"value": "<token>"
																	}
																],
																"url": {
																	"raw": "{{baseUrl}}/metadata/data/sources/:owner/:sourceid/tables/:tableid",
																	"host": [
																		"{{baseUrl}}"
																	],
																	"path": [
																		"metadata",
																		"data",
																		"sources",
																		":owner",
																		":sourceid",
																		"tables",
																		":tableid"
																	],
																	"variable": [
																		{
																			"key": "owner"
																		},
																		{
																			"key": "sourceid"
																		},
																		{
																			"key": "tableid"
																		}
																	]
																}
															},
															"status": "Bad Request",
															"code": 400,
															"_postman_previewlanguage": "json",
															"header": [
																{
																	"key": "Content-Type",
																	"value": "application/json"
																}
															],
															"cookie": [],
															"body": "{\n \"code\": 1519430,\n \"message\": \"enim\",\n \"details\": \"do\"\n}"
														},
														{
															"name": "Not found",
															"originalRequest": {
																"method": "GET",
																"header": [
																	{
																		"description": "Added as a part of security scheme: oauth2",
																		"key": "Authorization",
																		"value": "<token>"
																	}
																],
																"url": {
																	"raw": "{{baseUrl}}/metadata/data/sources/:owner/:sourceid/tables/:tableid",
																	"host": [
																		"{{baseUrl}}"
																	],
																	"path": [
																		"metadata",
																		"data",
																		"sources",
																		":owner",
																		":sourceid",
																		"tables",
																		":tableid"
																	],
																	"variable": [
																		{
																			"key": "owner"
																		},
																		{
																			"key": "sourceid"
																		},
																		{
																			"key": "tableid"
																		}
																	]
																}
															},
															"status": "Not Found",
															"code": 404,
															"_postman_previewlanguage": "json",
															"header": [
																{
																	"key": "Content-Type",
																	"value": "application/json"
																}
															],
															"cookie": [],
															"body": "{\n \"code\": 1519430,\n \"message\": \"enim\",\n \"details\": \"do\"\n}"
														}
													]
												},
												{
													"name": "Replace an existing table",
													"request": {
														"auth": {
															"type": "bearer",
															"bearer": [
																{
																	"key": "token",
																	"value": "{{readWrite}}",
																	"type": "string"
																}
															]
														},
														"method": "PUT",
														"header": [
															{
																"key": "Content-Type",
																"value": "application/json"
															}
														],
														"body": {
															"mode": "raw",
															"raw": "{\n    \"collections\": [\n        \"My collection\"\n    ],\n    \"title\": \"table one\",\n    \"description\": \"replaced\",\n    \"tags\": [\n        \"sayonara\"\n    ]\n}"
														},
														"url": {
															"raw": "{{baseUrl}}/metadata/data/sources/:owner/:sourceid/tables/:tableid",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"metadata",
																"data",
																"sources",
																":owner",
																":sourceid",
																"tables",
																":tableid"
															],
															"variable": [
																{
																	"key": "owner",
																	"value": "{{org}}",
																	"description": "(Required) id of the user or organization"
																},
																{
																	"key": "sourceid",
																	"value": "{{sourceid}}",
																	"description": "(Required) database source id"
																},
																{
																	"key": "tableid",
																	"value": "{{tableid}}",
																	"description": "(Required) "
																}
															]
														}
													},
													"response": [
														{
															"name": "Table replaced successfully.",
															"originalRequest": {
																"method": "PUT",
																"header": [
																	{
																		"description": "Added as a part of security scheme: oauth2",
																		"key": "Authorization",
																		"value": "<token>"
																	}
																],
																"url": {
																	"raw": "{{baseUrl}}/metadata/data/sources/:owner/:sourceid/tables/:tableid",
																	"host": [
																		"{{baseUrl}}"
																	],
																	"path": [
																		"metadata",
																		"data",
																		"sources",
																		":owner",
																		":sourceid",
																		"tables",
																		":tableid"
																	],
																	"variable": [
																		{
																			"key": "owner"
																		},
																		{
																			"key": "sourceid"
																		},
																		{
																			"key": "tableid"
																		}
																	]
																}
															},
															"status": "OK",
															"code": 200,
															"_postman_previewlanguage": "json",
															"header": [
																{
																	"key": "Content-Type",
																	"value": "application/json"
																}
															],
															"cookie": [],
															"body": "{\n \"message\": \"voluptate culpa nulla esse\"\n}"
														},
														{
															"name": "Bad request",
															"originalRequest": {
																"method": "PUT",
																"header": [
																	{
																		"description": "Added as a part of security scheme: oauth2",
																		"key": "Authorization",
																		"value": "<token>"
																	}
																],
																"url": {
																	"raw": "{{baseUrl}}/metadata/data/sources/:owner/:sourceid/tables/:tableid",
																	"host": [
																		"{{baseUrl}}"
																	],
																	"path": [
																		"metadata",
																		"data",
																		"sources",
																		":owner",
																		":sourceid",
																		"tables",
																		":tableid"
																	],
																	"variable": [
																		{
																			"key": "owner"
																		},
																		{
																			"key": "sourceid"
																		},
																		{
																			"key": "tableid"
																		}
																	]
																}
															},
															"status": "Bad Request",
															"code": 400,
															"_postman_previewlanguage": "json",
															"header": [
																{
																	"key": "Content-Type",
																	"value": "application/json"
																}
															],
															"cookie": [],
															"body": "{\n \"code\": 1519430,\n \"message\": \"enim\",\n \"details\": \"do\"\n}"
														},
														{
															"name": "Unauthorized",
															"originalRequest": {
																"method": "PUT",
																"header": [
																	{
																		"description": "Added as a part of security scheme: oauth2",
																		"key": "Authorization",
																		"value": "<token>"
																	}
																],
																"url": {
																	"raw": "{{baseUrl}}/metadata/data/sources/:owner/:sourceid/tables/:tableid",
																	"host": [
																		"{{baseUrl}}"
																	],
																	"path": [
																		"metadata",
																		"data",
																		"sources",
																		":owner",
																		":sourceid",
																		"tables",
																		":tableid"
																	],
																	"variable": [
																		{
																			"key": "owner"
																		},
																		{
																			"key": "sourceid"
																		},
																		{
																			"key": "tableid"
																		}
																	]
																}
															},
															"status": "Unauthorized",
															"code": 401,
															"_postman_previewlanguage": "json",
															"header": [
																{
																	"key": "Content-Type",
																	"value": "application/json"
																}
															],
															"cookie": [],
															"body": "{\n \"code\": 1519430,\n \"message\": \"enim\",\n \"details\": \"do\"\n}"
														},
														{
															"name": "Forbidden",
															"originalRequest": {
																"method": "PUT",
																"header": [
																	{
																		"description": "Added as a part of security scheme: oauth2",
																		"key": "Authorization",
																		"value": "<token>"
																	}
																],
																"url": {
																	"raw": "{{baseUrl}}/metadata/data/sources/:owner/:sourceid/tables/:tableid",
																	"host": [
																		"{{baseUrl}}"
																	],
																	"path": [
																		"metadata",
																		"data",
																		"sources",
																		":owner",
																		":sourceid",
																		"tables",
																		":tableid"
																	],
																	"variable": [
																		{
																			"key": "owner"
																		},
																		{
																			"key": "sourceid"
																		},
																		{
																			"key": "tableid"
																		}
																	]
																}
															},
															"status": "Forbidden",
															"code": 403,
															"_postman_previewlanguage": "json",
															"header": [
																{
																	"key": "Content-Type",
																	"value": "application/json"
																}
															],
															"cookie": [],
															"body": "{\n \"code\": 1519430,\n \"message\": \"enim\",\n \"details\": \"do\"\n}"
														},
														{
															"name": "Not found",
															"originalRequest": {
																"method": "PUT",
																"header": [
																	{
																		"description": "Added as a part of security scheme: oauth2",
																		"key": "Authorization",
																		"value": "<token>"
																	}
																],
																"url": {
																	"raw": "{{baseUrl}}/metadata/data/sources/:owner/:sourceid/tables/:tableid",
																	"host": [
																		"{{baseUrl}}"
																	],
																	"path": [
																		"metadata",
																		"data",
																		"sources",
																		":owner",
																		":sourceid",
																		"tables",
																		":tableid"
																	],
																	"variable": [
																		{
																			"key": "owner"
																		},
																		{
																			"key": "sourceid"
																		},
																		{
																			"key": "tableid"
																		}
																	]
																}
															},
															"status": "Not Found",
															"code": 404,
															"_postman_previewlanguage": "json",
															"header": [
																{
																	"key": "Content-Type",
																	"value": "application/json"
																}
															],
															"cookie": [],
															"body": "{\n \"code\": 1519430,\n \"message\": \"enim\",\n \"details\": \"do\"\n}"
														},
														{
															"name": "Bad request",
															"originalRequest": {
																"method": "PUT",
																"header": [
																	{
																		"description": "Added as a part of security scheme: oauth2",
																		"key": "Authorization",
																		"value": "<token>"
																	}
																],
																"url": {
																	"raw": "{{baseUrl}}/metadata/data/sources/:owner/:sourceid/tables/:tableid",
																	"host": [
																		"{{baseUrl}}"
																	],
																	"path": [
																		"metadata",
																		"data",
																		"sources",
																		":owner",
																		":sourceid",
																		"tables",
																		":tableid"
																	],
																	"variable": [
																		{
																			"key": "owner"
																		},
																		{
																			"key": "sourceid"
																		},
																		{
																			"key": "tableid"
																		}
																	]
																}
															},
															"status": "Unprocessable Entity (WebDAV) (RFC 4918)",
															"code": 422,
															"_postman_previewlanguage": "json",
															"header": [
																{
																	"key": "Content-Type",
																	"value": "application/json"
																}
															],
															"cookie": [],
															"body": "{\n \"code\": 1519430,\n \"message\": \"enim\",\n \"details\": \"do\"\n}"
														},
														{
															"name": "Server error",
															"originalRequest": {
																"method": "PUT",
																"header": [
																	{
																		"description": "Added as a part of security scheme: oauth2",
																		"key": "Authorization",
																		"value": "<token>"
																	}
																],
																"url": {
																	"raw": "{{baseUrl}}/metadata/data/sources/:owner/:sourceid/tables/:tableid",
																	"host": [
																		"{{baseUrl}}"
																	],
																	"path": [
																		"metadata",
																		"data",
																		"sources",
																		":owner",
																		":sourceid",
																		"tables",
																		":tableid"
																	],
																	"variable": [
																		{
																			"key": "owner"
																		},
																		{
																			"key": "sourceid"
																		},
																		{
																			"key": "tableid"
																		}
																	]
																}
															},
															"status": "Internal Server Error",
															"code": 500,
															"_postman_previewlanguage": "json",
															"header": [
																{
																	"key": "Content-Type",
																	"value": "application/json"
																}
															],
															"cookie": [],
															"body": "{\n \"code\": 1519430,\n \"message\": \"enim\",\n \"details\": \"do\"\n}"
														}
													]
												},
												{
													"name": "Delete a table.",
													"request": {
														"auth": {
															"type": "bearer",
															"bearer": [
																{
																	"key": "token",
																	"value": "{{readWrite}}",
																	"type": "string"
																}
															]
														},
														"method": "DELETE",
														"header": [],
														"url": {
															"raw": "{{baseUrl}}/metadata/data/sources/:owner/:sourceid/tables/:tableid",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"metadata",
																"data",
																"sources",
																":owner",
																":sourceid",
																"tables",
																":tableid"
															],
															"variable": [
																{
																	"key": "owner",
																	"value": "{{org}}",
																	"description": "(Required) id of the user or organization"
																},
																{
																	"key": "sourceid",
																	"value": "{{sourceid}}",
																	"description": "(Required) database source id"
																},
																{
																	"key": "tableid",
																	"value": "{{tableid}}",
																	"description": "(Required) "
																}
															]
														}
													},
													"response": [
														{
															"name": "Table has been successfully deleted.",
															"originalRequest": {
																"method": "DELETE",
																"header": [
																	{
																		"description": "Added as a part of security scheme: oauth2",
																		"key": "Authorization",
																		"value": "<token>"
																	}
																],
																"url": {
																	"raw": "{{baseUrl}}/metadata/data/sources/:owner/:sourceid/tables/:tableid",
																	"host": [
																		"{{baseUrl}}"
																	],
																	"path": [
																		"metadata",
																		"data",
																		"sources",
																		":owner",
																		":sourceid",
																		"tables",
																		":tableid"
																	],
																	"variable": [
																		{
																			"key": "owner"
																		},
																		{
																			"key": "sourceid"
																		},
																		{
																			"key": "tableid"
																		}
																	]
																}
															},
															"status": "OK",
															"code": 200,
															"_postman_previewlanguage": "json",
															"header": [
																{
																	"key": "Content-Type",
																	"value": "application/json"
																}
															],
															"cookie": [],
															"body": "{\n \"message\": \"voluptate culpa nulla esse\"\n}"
														},
														{
															"name": "Bad request",
															"originalRequest": {
																"method": "DELETE",
																"header": [
																	{
																		"description": "Added as a part of security scheme: oauth2",
																		"key": "Authorization",
																		"value": "<token>"
																	}
																],
																"url": {
																	"raw": "{{baseUrl}}/metadata/data/sources/:owner/:sourceid/tables/:tableid",
																	"host": [
																		"{{baseUrl}}"
																	],
																	"path": [
																		"metadata",
																		"data",
																		"sources",
																		":owner",
																		":sourceid",
																		"tables",
																		":tableid"
																	],
																	"variable": [
																		{
																			"key": "owner"
																		},
																		{
																			"key": "sourceid"
																		},
																		{
																			"key": "tableid"
																		}
																	]
																}
															},
															"status": "Bad Request",
															"code": 400,
															"_postman_previewlanguage": "json",
															"header": [
																{
																	"key": "Content-Type",
																	"value": "application/json"
																}
															],
															"cookie": [],
															"body": "{\n \"code\": 1519430,\n \"message\": \"enim\",\n \"details\": \"do\"\n}"
														},
														{
															"name": "Unauthorized",
															"originalRequest": {
																"method": "DELETE",
																"header": [
																	{
																		"description": "Added as a part of security scheme: oauth2",
																		"key": "Authorization",
																		"value": "<token>"
																	}
																],
																"url": {
																	"raw": "{{baseUrl}}/metadata/data/sources/:owner/:sourceid/tables/:tableid",
																	"host": [
																		"{{baseUrl}}"
																	],
																	"path": [
																		"metadata",
																		"data",
																		"sources",
																		":owner",
																		":sourceid",
																		"tables",
																		":tableid"
																	],
																	"variable": [
																		{
																			"key": "owner"
																		},
																		{
																			"key": "sourceid"
																		},
																		{
																			"key": "tableid"
																		}
																	]
																}
															},
															"status": "Unauthorized",
															"code": 401,
															"_postman_previewlanguage": "json",
															"header": [
																{
																	"key": "Content-Type",
																	"value": "application/json"
																}
															],
															"cookie": [],
															"body": "{\n \"code\": 1519430,\n \"message\": \"enim\",\n \"details\": \"do\"\n}"
														},
														{
															"name": "Forbidden",
															"originalRequest": {
																"method": "DELETE",
																"header": [
																	{
																		"description": "Added as a part of security scheme: oauth2",
																		"key": "Authorization",
																		"value": "<token>"
																	}
																],
																"url": {
																	"raw": "{{baseUrl}}/metadata/data/sources/:owner/:sourceid/tables/:tableid",
																	"host": [
																		"{{baseUrl}}"
																	],
																	"path": [
																		"metadata",
																		"data",
																		"sources",
																		":owner",
																		":sourceid",
																		"tables",
																		":tableid"
																	],
																	"variable": [
																		{
																			"key": "owner"
																		},
																		{
																			"key": "sourceid"
																		},
																		{
																			"key": "tableid"
																		}
																	]
																}
															},
															"status": "Forbidden",
															"code": 403,
															"_postman_previewlanguage": "json",
															"header": [
																{
																	"key": "Content-Type",
																	"value": "application/json"
																}
															],
															"cookie": [],
															"body": "{\n \"code\": 1519430,\n \"message\": \"enim\",\n \"details\": \"do\"\n}"
														},
														{
															"name": "Not found",
															"originalRequest": {
																"method": "DELETE",
																"header": [
																	{
																		"description": "Added as a part of security scheme: oauth2",
																		"key": "Authorization",
																		"value": "<token>"
																	}
																],
																"url": {
																	"raw": "{{baseUrl}}/metadata/data/sources/:owner/:sourceid/tables/:tableid",
																	"host": [
																		"{{baseUrl}}"
																	],
																	"path": [
																		"metadata",
																		"data",
																		"sources",
																		":owner",
																		":sourceid",
																		"tables",
																		":tableid"
																	],
																	"variable": [
																		{
																			"key": "owner"
																		},
																		{
																			"key": "sourceid"
																		},
																		{
																			"key": "tableid"
																		}
																	]
																}
															},
															"status": "Not Found",
															"code": 404,
															"_postman_previewlanguage": "json",
															"header": [
																{
																	"key": "Content-Type",
																	"value": "application/json"
																}
															],
															"cookie": [],
															"body": "{\n \"code\": 1519430,\n \"message\": \"enim\",\n \"details\": \"do\"\n}"
														},
														{
															"name": "Server error",
															"originalRequest": {
																"method": "DELETE",
																"header": [
																	{
																		"description": "Added as a part of security scheme: oauth2",
																		"key": "Authorization",
																		"value": "<token>"
																	}
																],
																"url": {
																	"raw": "{{baseUrl}}/metadata/data/sources/:owner/:sourceid/tables/:tableid",
																	"host": [
																		"{{baseUrl}}"
																	],
																	"path": [
																		"metadata",
																		"data",
																		"sources",
																		":owner",
																		":sourceid",
																		"tables",
																		":tableid"
																	],
																	"variable": [
																		{
																			"key": "owner"
																		},
																		{
																			"key": "sourceid"
																		},
																		{
																			"key": "tableid"
																		}
																	]
																}
															},
															"status": "Internal Server Error",
															"code": 500,
															"_postman_previewlanguage": "json",
															"header": [
																{
																	"key": "Content-Type",
																	"value": "application/json"
																}
															],
															"cookie": [],
															"body": "{\n \"code\": 1519430,\n \"message\": \"enim\",\n \"details\": \"do\"\n}"
														}
													]
												},
												{
													"name": "Update an existing table.",
													"request": {
														"auth": {
															"type": "bearer",
															"bearer": [
																{
																	"key": "token",
																	"value": "{{readWrite}}",
																	"type": "string"
																}
															]
														},
														"method": "PATCH",
														"header": [
															{
																"key": "Content-Type",
																"value": "application/json"
															}
														],
														"body": {
															"mode": "raw",
															"raw": "{\n    \"collections\": [\n        \"My collection\"\n    ],\n    \"title\": \"table one\",\n    \"description\": \"changed my description\",\n    \"tags\": [\n        \"bye\"\n    ]\n}"
														},
														"url": {
															"raw": "{{baseUrl}}/metadata/data/sources/:owner/:sourceid/tables/:tableid",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"metadata",
																"data",
																"sources",
																":owner",
																":sourceid",
																"tables",
																":tableid"
															],
															"variable": [
																{
																	"key": "owner",
																	"value": "{{org}}",
																	"description": "(Required) id of the user or organization"
																},
																{
																	"key": "sourceid",
																	"value": "{{sourceid}}",
																	"description": "(Required) database source id"
																},
																{
																	"key": "tableid",
																	"value": "{{tableid}}",
																	"description": "(Required) "
																}
															]
														}
													},
													"response": [
														{
															"name": "Table updated successfully.",
															"originalRequest": {
																"method": "PATCH",
																"header": [
																	{
																		"description": "Added as a part of security scheme: oauth2",
																		"key": "Authorization",
																		"value": "<token>"
																	}
																],
																"url": {
																	"raw": "{{baseUrl}}/metadata/data/sources/:owner/:sourceid/tables/:tableid",
																	"host": [
																		"{{baseUrl}}"
																	],
																	"path": [
																		"metadata",
																		"data",
																		"sources",
																		":owner",
																		":sourceid",
																		"tables",
																		":tableid"
																	],
																	"variable": [
																		{
																			"key": "owner"
																		},
																		{
																			"key": "sourceid"
																		},
																		{
																			"key": "tableid"
																		}
																	]
																}
															},
															"status": "OK",
															"code": 200,
															"_postman_previewlanguage": "json",
															"header": [
																{
																	"key": "Content-Type",
																	"value": "application/json"
																}
															],
															"cookie": [],
															"body": "{\n \"message\": \"voluptate culpa nulla esse\"\n}"
														},
														{
															"name": "Bad request",
															"originalRequest": {
																"method": "PATCH",
																"header": [
																	{
																		"description": "Added as a part of security scheme: oauth2",
																		"key": "Authorization",
																		"value": "<token>"
																	}
																],
																"url": {
																	"raw": "{{baseUrl}}/metadata/data/sources/:owner/:sourceid/tables/:tableid",
																	"host": [
																		"{{baseUrl}}"
																	],
																	"path": [
																		"metadata",
																		"data",
																		"sources",
																		":owner",
																		":sourceid",
																		"tables",
																		":tableid"
																	],
																	"variable": [
																		{
																			"key": "owner"
																		},
																		{
																			"key": "sourceid"
																		},
																		{
																			"key": "tableid"
																		}
																	]
																}
															},
															"status": "Bad Request",
															"code": 400,
															"_postman_previewlanguage": "json",
															"header": [
																{
																	"key": "Content-Type",
																	"value": "application/json"
																}
															],
															"cookie": [],
															"body": "{\n \"code\": 1519430,\n \"message\": \"enim\",\n \"details\": \"do\"\n}"
														},
														{
															"name": "Unauthorized",
															"originalRequest": {
																"method": "PATCH",
																"header": [
																	{
																		"description": "Added as a part of security scheme: oauth2",
																		"key": "Authorization",
																		"value": "<token>"
																	}
																],
																"url": {
																	"raw": "{{baseUrl}}/metadata/data/sources/:owner/:sourceid/tables/:tableid",
																	"host": [
																		"{{baseUrl}}"
																	],
																	"path": [
																		"metadata",
																		"data",
																		"sources",
																		":owner",
																		":sourceid",
																		"tables",
																		":tableid"
																	],
																	"variable": [
																		{
																			"key": "owner"
																		},
																		{
																			"key": "sourceid"
																		},
																		{
																			"key": "tableid"
																		}
																	]
																}
															},
															"status": "Unauthorized",
															"code": 401,
															"_postman_previewlanguage": "json",
															"header": [
																{
																	"key": "Content-Type",
																	"value": "application/json"
																}
															],
															"cookie": [],
															"body": "{\n \"code\": 1519430,\n \"message\": \"enim\",\n \"details\": \"do\"\n}"
														},
														{
															"name": "Forbidden",
															"originalRequest": {
																"method": "PATCH",
																"header": [
																	{
																		"description": "Added as a part of security scheme: oauth2",
																		"key": "Authorization",
																		"value": "<token>"
																	}
																],
																"url": {
																	"raw": "{{baseUrl}}/metadata/data/sources/:owner/:sourceid/tables/:tableid",
																	"host": [
																		"{{baseUrl}}"
																	],
																	"path": [
																		"metadata",
																		"data",
																		"sources",
																		":owner",
																		":sourceid",
																		"tables",
																		":tableid"
																	],
																	"variable": [
																		{
																			"key": "owner"
																		},
																		{
																			"key": "sourceid"
																		},
																		{
																			"key": "tableid"
																		}
																	]
																}
															},
															"status": "Forbidden",
															"code": 403,
															"_postman_previewlanguage": "json",
															"header": [
																{
																	"key": "Content-Type",
																	"value": "application/json"
																}
															],
															"cookie": [],
															"body": "{\n \"code\": 1519430,\n \"message\": \"enim\",\n \"details\": \"do\"\n}"
														},
														{
															"name": "Not found",
															"originalRequest": {
																"method": "PATCH",
																"header": [
																	{
																		"description": "Added as a part of security scheme: oauth2",
																		"key": "Authorization",
																		"value": "<token>"
																	}
																],
																"url": {
																	"raw": "{{baseUrl}}/metadata/data/sources/:owner/:sourceid/tables/:tableid",
																	"host": [
																		"{{baseUrl}}"
																	],
																	"path": [
																		"metadata",
																		"data",
																		"sources",
																		":owner",
																		":sourceid",
																		"tables",
																		":tableid"
																	],
																	"variable": [
																		{
																			"key": "owner"
																		},
																		{
																			"key": "sourceid"
																		},
																		{
																			"key": "tableid"
																		}
																	]
																}
															},
															"status": "Not Found",
															"code": 404,
															"_postman_previewlanguage": "json",
															"header": [
																{
																	"key": "Content-Type",
																	"value": "application/json"
																}
															],
															"cookie": [],
															"body": "{\n \"code\": 1519430,\n \"message\": \"enim\",\n \"details\": \"do\"\n}"
														},
														{
															"name": "Bad request",
															"originalRequest": {
																"method": "PATCH",
																"header": [
																	{
																		"description": "Added as a part of security scheme: oauth2",
																		"key": "Authorization",
																		"value": "<token>"
																	}
																],
																"url": {
																	"raw": "{{baseUrl}}/metadata/data/sources/:owner/:sourceid/tables/:tableid",
																	"host": [
																		"{{baseUrl}}"
																	],
																	"path": [
																		"metadata",
																		"data",
																		"sources",
																		":owner",
																		":sourceid",
																		"tables",
																		":tableid"
																	],
																	"variable": [
																		{
																			"key": "owner"
																		},
																		{
																			"key": "sourceid"
																		},
																		{
																			"key": "tableid"
																		}
																	]
																}
															},
															"status": "Unprocessable Entity (WebDAV) (RFC 4918)",
															"code": 422,
															"_postman_previewlanguage": "json",
															"header": [
																{
																	"key": "Content-Type",
																	"value": "application/json"
																}
															],
															"cookie": [],
															"body": "{\n \"code\": 1519430,\n \"message\": \"enim\",\n \"details\": \"do\"\n}"
														},
														{
															"name": "Server error",
															"originalRequest": {
																"method": "PATCH",
																"header": [
																	{
																		"description": "Added as a part of security scheme: oauth2",
																		"key": "Authorization",
																		"value": "<token>"
																	}
																],
																"url": {
																	"raw": "{{baseUrl}}/metadata/data/sources/:owner/:sourceid/tables/:tableid",
																	"host": [
																		"{{baseUrl}}"
																	],
																	"path": [
																		"metadata",
																		"data",
																		"sources",
																		":owner",
																		":sourceid",
																		"tables",
																		":tableid"
																	],
																	"variable": [
																		{
																			"key": "owner"
																		},
																		{
																			"key": "sourceid"
																		},
																		{
																			"key": "tableid"
																		}
																	]
																}
															},
															"status": "Internal Server Error",
															"code": 500,
															"_postman_previewlanguage": "json",
															"header": [
																{
																	"key": "Content-Type",
																	"value": "application/json"
																}
															],
															"cookie": [],
															"body": "{\n \"code\": 1519430,\n \"message\": \"enim\",\n \"details\": \"do\"\n}"
														}
													]
												}
											]
										},
										{
											"name": "Get tables for a data source",
											"request": {
												"auth": {
													"type": "bearer",
													"bearer": [
														{
															"key": "token",
															"value": "{{readWrite}}",
															"type": "string"
														}
													]
												},
												"method": "GET",
												"header": [],
												"url": {
													"raw": "{{baseUrl}}/metadata/data/sources/:owner/:sourceid/tables",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"metadata",
														"data",
														"sources",
														":owner",
														":sourceid",
														"tables"
													],
													"query": [
														{
															"key": "typelabel",
															"value": "adipisicing elit ullamco",
															"disabled": true
														},
														{
															"key": "typeiri",
															"value": "adipisicing elit ullamco",
															"disabled": true
														},
														{
															"key": "size",
															"value": "adipisicing elit ullamco",
															"disabled": true
														},
														{
															"key": "from",
															"value": "adipisicing elit ullamco",
															"disabled": true
														},
														{
															"key": "sort",
															"value": "adipisicing elit ullamco",
															"disabled": true
														}
													],
													"variable": [
														{
															"key": "owner",
															"value": "{{org}}",
															"description": "(Required) id of the user or organization"
														},
														{
															"key": "sourceid",
															"value": "{{sourceid}}",
															"description": "(Required) database source id"
														}
													]
												}
											},
											"response": [
												{
													"name": "Successfully retrieved tables metadata",
													"originalRequest": {
														"method": "GET",
														"header": [
															{
																"description": "Added as a part of security scheme: oauth2",
																"key": "Authorization",
																"value": "<token>"
															}
														],
														"url": {
															"raw": "{{baseUrl}}/metadata/data/sources/:owner/:sourceid/tables?typelabel=adipisicing elit ullamco&typeiri=adipisicing elit ullamco&size=adipisicing elit ullamco&from=adipisicing elit ullamco&sort=adipisicing elit ullamco",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"metadata",
																"data",
																"sources",
																":owner",
																":sourceid",
																"tables"
															],
															"query": [
																{
																	"key": "typelabel",
																	"value": "adipisicing elit ullamco"
																},
																{
																	"key": "typeiri",
																	"value": "adipisicing elit ullamco"
																},
																{
																	"key": "size",
																	"value": "adipisicing elit ullamco"
																},
																{
																	"key": "from",
																	"value": "adipisicing elit ullamco"
																},
																{
																	"key": "sort",
																	"value": "adipisicing elit ullamco"
																}
															],
															"variable": [
																{
																	"key": "owner"
																},
																{
																	"key": "sourceid"
																}
															]
														}
													},
													"status": "OK",
													"code": 200,
													"_postman_previewlanguage": "json",
													"header": [
														{
															"key": "Content-Type",
															"value": "application/json"
														}
													],
													"cookie": [],
													"body": "{\n \"count\": 64160876,\n \"records\": [\n  {\n   \"created\": \"1993-11-09T13:04:36.271Z\",\n   \"id\": \"nulla nisi Excepteur non\",\n   \"owner\": \"ipsum\",\n   \"visibility\": \"PRIVATE\",\n   \"title\": \"proident in et officia\",\n   \"category\": \"et Excepteur incididunt ipsum cupidatat\",\n   \"typeLabel\": \"labo\",\n   \"typeIri\": \"cillum ipsum Lorem dolore\",\n   \"rootParentTypeLabel\": \"proident laboris\",\n   \"rootParentTypeIri\": \"adipisicing non nostrud aliqua\",\n   \"table\": {\n    \"owner\": {\n     \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    \"sourceId\": {\n     \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    \"tableId\": {\n     \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    }\n   },\n   \"dataType\": \"non ad\",\n   \"columnIndex\": 69943645,\n   \"description\": \"labore aliquip velit occaecat\",\n   \"encodedIri\": \"amet officia non\",\n   \"summary\": \"cupidatat officia Ut\",\n   \"url\": \"http://LwKGLADeUPzokbPOdKgLPJvqQMh.yerF-YAmoiMQt\",\n   \"updated\": \"2021-10-07T15:26:29.480Z\",\n   \"collections\": [\n    {\n     \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    {\n     \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    }\n   ],\n   \"relationshipTypes\": [\n    \"sed labore enim\",\n    \"culpa mollit veniam\"\n   ],\n   \"tags\": [\n    \"aliquip qui et veniam\",\n    \"ipsum sit proident dolor officia\"\n   ],\n   \"externalUrls\": [\n    \"in Ut incididunt\",\n    \"adipisicing exercitation esse ex\"\n   ],\n   \"assetStatus\": {\n    \"assetStatusLabel\": \"Duis\",\n    \"dispositionLabel\": \"irure am\"\n   },\n   \"properties\": {}\n  },\n  {\n   \"created\": \"1962-07-17T17:38:02.710Z\",\n   \"id\": \"non dolore pariatur sed\",\n   \"owner\": \"ad\",\n   \"visibility\": \"OPEN\",\n   \"title\": \"aute amet elit\",\n   \"category\": \"velit veniam tempor culpa\",\n   \"typeLabel\": \"sunt ad\",\n   \"typeIri\": \"aute eu elit fugiat aliquip\",\n   \"rootParentTypeLabel\": \"enim sed aliquip reprehenderit in\",\n   \"rootParentTypeIri\": \"nulla occaecat consequat dolor aliqua\",\n   \"table\": {\n    \"owner\": {\n     \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    \"sourceId\": {\n     \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    \"tableId\": {\n     \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    }\n   },\n   \"dataType\": \"cillum es\",\n   \"columnIndex\": 60084365,\n   \"description\": \"esse exercitation consequat sint labore\",\n   \"encodedIri\": \"velit adipisicing\",\n   \"summary\": \"consequat cillum exercitation\",\n   \"url\": \"https://PfeGAnyXpIzcJoWFivKhcbfMBgHMUm.wzE6\",\n   \"updated\": \"2000-11-17T06:04:06.390Z\",\n   \"collections\": [\n    {\n     \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    {\n     \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    }\n   ],\n   \"relationshipTypes\": [\n    \"consectetur anim laborum\",\n    \"commodo dolor\"\n   ],\n   \"tags\": [\n    \"in consectetur irure do Excepteur\",\n    \"ad sit\"\n   ],\n   \"externalUrls\": [\n    \"in est occaecat dolor\",\n    \"sed nostrud elit fugiat Ut\"\n   ],\n   \"assetStatus\": {\n    \"assetStatusLabel\": \"ut tempor officia m\",\n    \"dispositionLabel\": \"cupidatat sunt est\"\n   },\n   \"properties\": {}\n  }\n ],\n \"nextPageToken\": \"deserunt Lorem occaecat nostrud\"\n}"
												},
												{
													"name": "Bad request",
													"originalRequest": {
														"method": "GET",
														"header": [
															{
																"description": "Added as a part of security scheme: oauth2",
																"key": "Authorization",
																"value": "<token>"
															}
														],
														"url": {
															"raw": "{{baseUrl}}/metadata/data/sources/:owner/:sourceid/tables?typelabel=adipisicing elit ullamco&typeiri=adipisicing elit ullamco&size=adipisicing elit ullamco&from=adipisicing elit ullamco&sort=adipisicing elit ullamco",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"metadata",
																"data",
																"sources",
																":owner",
																":sourceid",
																"tables"
															],
															"query": [
																{
																	"key": "typelabel",
																	"value": "adipisicing elit ullamco"
																},
																{
																	"key": "typeiri",
																	"value": "adipisicing elit ullamco"
																},
																{
																	"key": "size",
																	"value": "adipisicing elit ullamco"
																},
																{
																	"key": "from",
																	"value": "adipisicing elit ullamco"
																},
																{
																	"key": "sort",
																	"value": "adipisicing elit ullamco"
																}
															],
															"variable": [
																{
																	"key": "owner"
																},
																{
																	"key": "sourceid"
																}
															]
														}
													},
													"status": "Bad Request",
													"code": 400,
													"_postman_previewlanguage": "json",
													"header": [
														{
															"key": "Content-Type",
															"value": "application/json"
														}
													],
													"cookie": [],
													"body": "{\n \"code\": 1519430,\n \"message\": \"enim\",\n \"details\": \"do\"\n}"
												},
												{
													"name": "Unauthorized",
													"originalRequest": {
														"method": "GET",
														"header": [
															{
																"description": "Added as a part of security scheme: oauth2",
																"key": "Authorization",
																"value": "<token>"
															}
														],
														"url": {
															"raw": "{{baseUrl}}/metadata/data/sources/:owner/:sourceid/tables?typelabel=adipisicing elit ullamco&typeiri=adipisicing elit ullamco&size=adipisicing elit ullamco&from=adipisicing elit ullamco&sort=adipisicing elit ullamco",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"metadata",
																"data",
																"sources",
																":owner",
																":sourceid",
																"tables"
															],
															"query": [
																{
																	"key": "typelabel",
																	"value": "adipisicing elit ullamco"
																},
																{
																	"key": "typeiri",
																	"value": "adipisicing elit ullamco"
																},
																{
																	"key": "size",
																	"value": "adipisicing elit ullamco"
																},
																{
																	"key": "from",
																	"value": "adipisicing elit ullamco"
																},
																{
																	"key": "sort",
																	"value": "adipisicing elit ullamco"
																}
															],
															"variable": [
																{
																	"key": "owner"
																},
																{
																	"key": "sourceid"
																}
															]
														}
													},
													"status": "Unauthorized",
													"code": 401,
													"_postman_previewlanguage": "json",
													"header": [
														{
															"key": "Content-Type",
															"value": "application/json"
														}
													],
													"cookie": [],
													"body": "{\n \"code\": 1519430,\n \"message\": \"enim\",\n \"details\": \"do\"\n}"
												},
												{
													"name": "Forbidden",
													"originalRequest": {
														"method": "GET",
														"header": [
															{
																"description": "Added as a part of security scheme: oauth2",
																"key": "Authorization",
																"value": "<token>"
															}
														],
														"url": {
															"raw": "{{baseUrl}}/metadata/data/sources/:owner/:sourceid/tables?typelabel=adipisicing elit ullamco&typeiri=adipisicing elit ullamco&size=adipisicing elit ullamco&from=adipisicing elit ullamco&sort=adipisicing elit ullamco",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"metadata",
																"data",
																"sources",
																":owner",
																":sourceid",
																"tables"
															],
															"query": [
																{
																	"key": "typelabel",
																	"value": "adipisicing elit ullamco"
																},
																{
																	"key": "typeiri",
																	"value": "adipisicing elit ullamco"
																},
																{
																	"key": "size",
																	"value": "adipisicing elit ullamco"
																},
																{
																	"key": "from",
																	"value": "adipisicing elit ullamco"
																},
																{
																	"key": "sort",
																	"value": "adipisicing elit ullamco"
																}
															],
															"variable": [
																{
																	"key": "owner"
																},
																{
																	"key": "sourceid"
																}
															]
														}
													},
													"status": "Forbidden",
													"code": 403,
													"_postman_previewlanguage": "json",
													"header": [
														{
															"key": "Content-Type",
															"value": "application/json"
														}
													],
													"cookie": [],
													"body": "{\n \"code\": 1519430,\n \"message\": \"enim\",\n \"details\": \"do\"\n}"
												},
												{
													"name": "Not found",
													"originalRequest": {
														"method": "GET",
														"header": [
															{
																"description": "Added as a part of security scheme: oauth2",
																"key": "Authorization",
																"value": "<token>"
															}
														],
														"url": {
															"raw": "{{baseUrl}}/metadata/data/sources/:owner/:sourceid/tables?typelabel=adipisicing elit ullamco&typeiri=adipisicing elit ullamco&size=adipisicing elit ullamco&from=adipisicing elit ullamco&sort=adipisicing elit ullamco",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"metadata",
																"data",
																"sources",
																":owner",
																":sourceid",
																"tables"
															],
															"query": [
																{
																	"key": "typelabel",
																	"value": "adipisicing elit ullamco"
																},
																{
																	"key": "typeiri",
																	"value": "adipisicing elit ullamco"
																},
																{
																	"key": "size",
																	"value": "adipisicing elit ullamco"
																},
																{
																	"key": "from",
																	"value": "adipisicing elit ullamco"
																},
																{
																	"key": "sort",
																	"value": "adipisicing elit ullamco"
																}
															],
															"variable": [
																{
																	"key": "owner"
																},
																{
																	"key": "sourceid"
																}
															]
														}
													},
													"status": "Not Found",
													"code": 404,
													"_postman_previewlanguage": "json",
													"header": [
														{
															"key": "Content-Type",
															"value": "application/json"
														}
													],
													"cookie": [],
													"body": "{\n \"code\": 1519430,\n \"message\": \"enim\",\n \"details\": \"do\"\n}"
												},
												{
													"name": "Server error",
													"originalRequest": {
														"method": "GET",
														"header": [
															{
																"description": "Added as a part of security scheme: oauth2",
																"key": "Authorization",
																"value": "<token>"
															}
														],
														"url": {
															"raw": "{{baseUrl}}/metadata/data/sources/:owner/:sourceid/tables?typelabel=adipisicing elit ullamco&typeiri=adipisicing elit ullamco&size=adipisicing elit ullamco&from=adipisicing elit ullamco&sort=adipisicing elit ullamco",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"metadata",
																"data",
																"sources",
																":owner",
																":sourceid",
																"tables"
															],
															"query": [
																{
																	"key": "typelabel",
																	"value": "adipisicing elit ullamco"
																},
																{
																	"key": "typeiri",
																	"value": "adipisicing elit ullamco"
																},
																{
																	"key": "size",
																	"value": "adipisicing elit ullamco"
																},
																{
																	"key": "from",
																	"value": "adipisicing elit ullamco"
																},
																{
																	"key": "sort",
																	"value": "adipisicing elit ullamco"
																}
															],
															"variable": [
																{
																	"key": "owner"
																},
																{
																	"key": "sourceid"
																}
															]
														}
													},
													"status": "Internal Server Error",
													"code": 500,
													"_postman_previewlanguage": "json",
													"header": [
														{
															"key": "Content-Type",
															"value": "application/json"
														}
													],
													"cookie": [],
													"body": "{\n \"code\": 1519430,\n \"message\": \"enim\",\n \"details\": \"do\"\n}"
												}
											]
										},
										{
											"name": "Create a new table metadata.",
											"request": {
												"auth": {
													"type": "bearer",
													"bearer": [
														{
															"key": "token",
															"value": "{{readWrite}}",
															"type": "string"
														}
													]
												},
												"method": "POST",
												"header": [
													{
														"key": "Content-Type",
														"value": "application/json"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\n    \"collections\": [\n        \"My collection\"\n    ],\n    \"title\": \"table one\",\n    \"description\": \"I'm a table\",\n    \"tags\": [\n        \"hi\"\n    ]\n}"
												},
												"url": {
													"raw": "{{baseUrl}}/metadata/data/sources/:owner/:sourceid/tables",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"metadata",
														"data",
														"sources",
														":owner",
														":sourceid",
														"tables"
													],
													"variable": [
														{
															"key": "owner",
															"value": "{{org}}",
															"description": "(Required) id of the user or organization"
														},
														{
															"key": "sourceid",
															"value": "{{sourceid}}",
															"description": "(Required) database source id"
														}
													]
												}
											},
											"response": [
												{
													"name": "Table Metadata created successfully.",
													"originalRequest": {
														"method": "POST",
														"header": [
															{
																"description": "Added as a part of security scheme: oauth2",
																"key": "Authorization",
																"value": "<token>"
															}
														],
														"url": {
															"raw": "{{baseUrl}}/metadata/data/sources/:owner/:sourceid/tables",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"metadata",
																"data",
																"sources",
																":owner",
																":sourceid",
																"tables"
															],
															"variable": [
																{
																	"key": "owner"
																},
																{
																	"key": "sourceid"
																}
															]
														}
													},
													"status": "OK",
													"code": 200,
													"_postman_previewlanguage": "json",
													"header": [
														{
															"key": "Content-Type",
															"value": "application/json"
														}
													],
													"cookie": [],
													"body": "{\n \"uri\": \"http://A.sfQ-gVx.2oEMnKdGnZwvPKe1go1ZBeMhzDIKRr\",\n \"message\": \"nisi nulla quis veniam\"\n}"
												},
												{
													"name": "Bad request",
													"originalRequest": {
														"method": "POST",
														"header": [
															{
																"description": "Added as a part of security scheme: oauth2",
																"key": "Authorization",
																"value": "<token>"
															}
														],
														"url": {
															"raw": "{{baseUrl}}/metadata/data/sources/:owner/:sourceid/tables",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"metadata",
																"data",
																"sources",
																":owner",
																":sourceid",
																"tables"
															],
															"variable": [
																{
																	"key": "owner"
																},
																{
																	"key": "sourceid"
																}
															]
														}
													},
													"status": "Bad Request",
													"code": 400,
													"_postman_previewlanguage": "json",
													"header": [
														{
															"key": "Content-Type",
															"value": "application/json"
														}
													],
													"cookie": [],
													"body": "{\n \"code\": 1519430,\n \"message\": \"enim\",\n \"details\": \"do\"\n}"
												},
												{
													"name": "Unauthorized",
													"originalRequest": {
														"method": "POST",
														"header": [
															{
																"description": "Added as a part of security scheme: oauth2",
																"key": "Authorization",
																"value": "<token>"
															}
														],
														"url": {
															"raw": "{{baseUrl}}/metadata/data/sources/:owner/:sourceid/tables",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"metadata",
																"data",
																"sources",
																":owner",
																":sourceid",
																"tables"
															],
															"variable": [
																{
																	"key": "owner"
																},
																{
																	"key": "sourceid"
																}
															]
														}
													},
													"status": "Unauthorized",
													"code": 401,
													"_postman_previewlanguage": "json",
													"header": [
														{
															"key": "Content-Type",
															"value": "application/json"
														}
													],
													"cookie": [],
													"body": "{\n \"code\": 1519430,\n \"message\": \"enim\",\n \"details\": \"do\"\n}"
												},
												{
													"name": "Forbidden",
													"originalRequest": {
														"method": "POST",
														"header": [
															{
																"description": "Added as a part of security scheme: oauth2",
																"key": "Authorization",
																"value": "<token>"
															}
														],
														"url": {
															"raw": "{{baseUrl}}/metadata/data/sources/:owner/:sourceid/tables",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"metadata",
																"data",
																"sources",
																":owner",
																":sourceid",
																"tables"
															],
															"variable": [
																{
																	"key": "owner"
																},
																{
																	"key": "sourceid"
																}
															]
														}
													},
													"status": "Forbidden",
													"code": 403,
													"_postman_previewlanguage": "json",
													"header": [
														{
															"key": "Content-Type",
															"value": "application/json"
														}
													],
													"cookie": [],
													"body": "{\n \"code\": 1519430,\n \"message\": \"enim\",\n \"details\": \"do\"\n}"
												},
												{
													"name": "Not found",
													"originalRequest": {
														"method": "POST",
														"header": [
															{
																"description": "Added as a part of security scheme: oauth2",
																"key": "Authorization",
																"value": "<token>"
															}
														],
														"url": {
															"raw": "{{baseUrl}}/metadata/data/sources/:owner/:sourceid/tables",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"metadata",
																"data",
																"sources",
																":owner",
																":sourceid",
																"tables"
															],
															"variable": [
																{
																	"key": "owner"
																},
																{
																	"key": "sourceid"
																}
															]
														}
													},
													"status": "Not Found",
													"code": 404,
													"_postman_previewlanguage": "json",
													"header": [
														{
															"key": "Content-Type",
															"value": "application/json"
														}
													],
													"cookie": [],
													"body": "{\n \"code\": 1519430,\n \"message\": \"enim\",\n \"details\": \"do\"\n}"
												},
												{
													"name": "Conflict",
													"originalRequest": {
														"method": "POST",
														"header": [
															{
																"description": "Added as a part of security scheme: oauth2",
																"key": "Authorization",
																"value": "<token>"
															}
														],
														"url": {
															"raw": "{{baseUrl}}/metadata/data/sources/:owner/:sourceid/tables",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"metadata",
																"data",
																"sources",
																":owner",
																":sourceid",
																"tables"
															],
															"variable": [
																{
																	"key": "owner"
																},
																{
																	"key": "sourceid"
																}
															]
														}
													},
													"status": "Conflict",
													"code": 409,
													"_postman_previewlanguage": "json",
													"header": [
														{
															"key": "Content-Type",
															"value": "application/json"
														}
													],
													"cookie": [],
													"body": "{\n \"code\": 1519430,\n \"message\": \"enim\",\n \"details\": \"do\"\n}"
												},
												{
													"name": "Bad request",
													"originalRequest": {
														"method": "POST",
														"header": [
															{
																"description": "Added as a part of security scheme: oauth2",
																"key": "Authorization",
																"value": "<token>"
															}
														],
														"url": {
															"raw": "{{baseUrl}}/metadata/data/sources/:owner/:sourceid/tables",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"metadata",
																"data",
																"sources",
																":owner",
																":sourceid",
																"tables"
															],
															"variable": [
																{
																	"key": "owner"
																},
																{
																	"key": "sourceid"
																}
															]
														}
													},
													"status": "Unprocessable Entity (WebDAV) (RFC 4918)",
													"code": 422,
													"_postman_previewlanguage": "json",
													"header": [
														{
															"key": "Content-Type",
															"value": "application/json"
														}
													],
													"cookie": [],
													"body": "{\n \"code\": 1519430,\n \"message\": \"enim\",\n \"details\": \"do\"\n}"
												},
												{
													"name": "Server error",
													"originalRequest": {
														"method": "POST",
														"header": [
															{
																"description": "Added as a part of security scheme: oauth2",
																"key": "Authorization",
																"value": "<token>"
															}
														],
														"url": {
															"raw": "{{baseUrl}}/metadata/data/sources/:owner/:sourceid/tables",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"metadata",
																"data",
																"sources",
																":owner",
																":sourceid",
																"tables"
															],
															"variable": [
																{
																	"key": "owner"
																},
																{
																	"key": "sourceid"
																}
															]
														}
													},
													"status": "Internal Server Error",
													"code": 500,
													"_postman_previewlanguage": "json",
													"header": [
														{
															"key": "Content-Type",
															"value": "application/json"
														}
													],
													"cookie": [],
													"body": "{\n \"code\": 1519430,\n \"message\": \"enim\",\n \"details\": \"do\"\n}"
												}
											]
										}
									]
								},
								{
									"name": "Get an individual datasource metadata",
									"request": {
										"auth": {
											"type": "bearer",
											"bearer": [
												{
													"key": "token",
													"value": "{{readWrite}}",
													"type": "string"
												}
											]
										},
										"method": "GET",
										"header": [],
										"url": {
											"raw": "{{baseUrl}}/metadata/data/sources/:owner/:sourceid",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"metadata",
												"data",
												"sources",
												":owner",
												":sourceid"
											],
											"variable": [
												{
													"key": "owner",
													"value": "{{org}}",
													"description": "(Required) id of the user or organization"
												},
												{
													"key": "sourceid",
													"value": "{{sourceid}}",
													"description": "(Required) database source id"
												}
											]
										}
									},
									"response": [
										{
											"name": "successful operation",
											"originalRequest": {
												"method": "GET",
												"header": [
													{
														"description": "Added as a part of security scheme: oauth2",
														"key": "Authorization",
														"value": "<token>"
													}
												],
												"url": {
													"raw": "{{baseUrl}}/metadata/data/sources/:owner/:sourceid",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"metadata",
														"data",
														"sources",
														":owner",
														":sourceid"
													],
													"variable": [
														{
															"key": "owner"
														},
														{
															"key": "sourceid"
														}
													]
												}
											},
											"status": "OK",
											"code": 200,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"body": "{\n \"id\": \"nostrud\",\n \"environment\": \"mollit\",\n \"type\": \"Excepteur cillum culpa tempor\",\n \"server\": \"eu ut elit mollit adipisicing\",\n \"port\": -32713782,\n \"catalog\": \"ex magna voluptate velit\",\n \"schema\": \"magna deserunt id\",\n \"created\": \"1990-01-07T12:16:47.487Z\",\n \"updated\": \"1945-08-26T05:42:04.597Z\"\n}"
										},
										{
											"name": "Bad Request",
											"originalRequest": {
												"method": "GET",
												"header": [
													{
														"description": "Added as a part of security scheme: oauth2",
														"key": "Authorization",
														"value": "<token>"
													}
												],
												"url": {
													"raw": "{{baseUrl}}/metadata/data/sources/:owner/:sourceid",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"metadata",
														"data",
														"sources",
														":owner",
														":sourceid"
													],
													"variable": [
														{
															"key": "owner"
														},
														{
															"key": "sourceid"
														}
													]
												}
											},
											"status": "Bad Request",
											"code": 400,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"body": "{\n \"code\": 1519430,\n \"message\": \"enim\",\n \"details\": \"do\"\n}"
										},
										{
											"name": "Not found",
											"originalRequest": {
												"method": "GET",
												"header": [
													{
														"description": "Added as a part of security scheme: oauth2",
														"key": "Authorization",
														"value": "<token>"
													}
												],
												"url": {
													"raw": "{{baseUrl}}/metadata/data/sources/:owner/:sourceid",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"metadata",
														"data",
														"sources",
														":owner",
														":sourceid"
													],
													"variable": [
														{
															"key": "owner"
														},
														{
															"key": "sourceid"
														}
													]
												}
											},
											"status": "Not Found",
											"code": 404,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"body": "{\n \"code\": 1519430,\n \"message\": \"enim\",\n \"details\": \"do\"\n}"
										}
									]
								}
							]
						},
						{
							"name": "Gets datasources by owner.",
							"request": {
								"auth": {
									"type": "bearer",
									"bearer": [
										{
											"key": "token",
											"value": "{{readWrite}}",
											"type": "string"
										}
									]
								},
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{baseUrl}}/metadata/data/sources/:owner",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"metadata",
										"data",
										"sources",
										":owner"
									],
									"query": [
										{
											"key": "size",
											"value": "adipisicing elit ullamco",
											"disabled": true
										},
										{
											"key": "from",
											"value": "adipisicing elit ullamco",
											"disabled": true
										},
										{
											"key": "sort",
											"value": "adipisicing elit ullamco",
											"disabled": true
										}
									],
									"variable": [
										{
											"key": "owner",
											"value": "{{org}}",
											"description": "(Required) id of the user or organization"
										}
									]
								}
							},
							"response": [
								{
									"name": "Successfully retrieved datasource metadata",
									"originalRequest": {
										"method": "GET",
										"header": [
											{
												"description": "Added as a part of security scheme: oauth2",
												"key": "Authorization",
												"value": "<token>"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/metadata/data/sources/:owner?size=adipisicing elit ullamco&from=adipisicing elit ullamco&sort=adipisicing elit ullamco",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"metadata",
												"data",
												"sources",
												":owner"
											],
											"query": [
												{
													"key": "size",
													"value": "adipisicing elit ullamco"
												},
												{
													"key": "from",
													"value": "adipisicing elit ullamco"
												},
												{
													"key": "sort",
													"value": "adipisicing elit ullamco"
												}
											],
											"variable": [
												{
													"key": "owner"
												}
											]
										}
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "[]"
								},
								{
									"name": "Bad request",
									"originalRequest": {
										"method": "GET",
										"header": [
											{
												"description": "Added as a part of security scheme: oauth2",
												"key": "Authorization",
												"value": "<token>"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/metadata/data/sources/:owner?size=adipisicing elit ullamco&from=adipisicing elit ullamco&sort=adipisicing elit ullamco",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"metadata",
												"data",
												"sources",
												":owner"
											],
											"query": [
												{
													"key": "size",
													"value": "adipisicing elit ullamco"
												},
												{
													"key": "from",
													"value": "adipisicing elit ullamco"
												},
												{
													"key": "sort",
													"value": "adipisicing elit ullamco"
												}
											],
											"variable": [
												{
													"key": "owner"
												}
											]
										}
									},
									"status": "Bad Request",
									"code": 400,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n \"code\": 1519430,\n \"message\": \"enim\",\n \"details\": \"do\"\n}"
								},
								{
									"name": "Unauthorized",
									"originalRequest": {
										"method": "GET",
										"header": [
											{
												"description": "Added as a part of security scheme: oauth2",
												"key": "Authorization",
												"value": "<token>"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/metadata/data/sources/:owner?size=adipisicing elit ullamco&from=adipisicing elit ullamco&sort=adipisicing elit ullamco",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"metadata",
												"data",
												"sources",
												":owner"
											],
											"query": [
												{
													"key": "size",
													"value": "adipisicing elit ullamco"
												},
												{
													"key": "from",
													"value": "adipisicing elit ullamco"
												},
												{
													"key": "sort",
													"value": "adipisicing elit ullamco"
												}
											],
											"variable": [
												{
													"key": "owner"
												}
											]
										}
									},
									"status": "Unauthorized",
									"code": 401,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n \"code\": 1519430,\n \"message\": \"enim\",\n \"details\": \"do\"\n}"
								},
								{
									"name": "Forbidden",
									"originalRequest": {
										"method": "GET",
										"header": [
											{
												"description": "Added as a part of security scheme: oauth2",
												"key": "Authorization",
												"value": "<token>"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/metadata/data/sources/:owner?size=adipisicing elit ullamco&from=adipisicing elit ullamco&sort=adipisicing elit ullamco",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"metadata",
												"data",
												"sources",
												":owner"
											],
											"query": [
												{
													"key": "size",
													"value": "adipisicing elit ullamco"
												},
												{
													"key": "from",
													"value": "adipisicing elit ullamco"
												},
												{
													"key": "sort",
													"value": "adipisicing elit ullamco"
												}
											],
											"variable": [
												{
													"key": "owner"
												}
											]
										}
									},
									"status": "Forbidden",
									"code": 403,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n \"code\": 1519430,\n \"message\": \"enim\",\n \"details\": \"do\"\n}"
								},
								{
									"name": "Not found",
									"originalRequest": {
										"method": "GET",
										"header": [
											{
												"description": "Added as a part of security scheme: oauth2",
												"key": "Authorization",
												"value": "<token>"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/metadata/data/sources/:owner?size=adipisicing elit ullamco&from=adipisicing elit ullamco&sort=adipisicing elit ullamco",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"metadata",
												"data",
												"sources",
												":owner"
											],
											"query": [
												{
													"key": "size",
													"value": "adipisicing elit ullamco"
												},
												{
													"key": "from",
													"value": "adipisicing elit ullamco"
												},
												{
													"key": "sort",
													"value": "adipisicing elit ullamco"
												}
											],
											"variable": [
												{
													"key": "owner"
												}
											]
										}
									},
									"status": "Not Found",
									"code": 404,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n \"code\": 1519430,\n \"message\": \"enim\",\n \"details\": \"do\"\n}"
								},
								{
									"name": "Server error",
									"originalRequest": {
										"method": "GET",
										"header": [
											{
												"description": "Added as a part of security scheme: oauth2",
												"key": "Authorization",
												"value": "<token>"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/metadata/data/sources/:owner?size=adipisicing elit ullamco&from=adipisicing elit ullamco&sort=adipisicing elit ullamco",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"metadata",
												"data",
												"sources",
												":owner"
											],
											"query": [
												{
													"key": "size",
													"value": "adipisicing elit ullamco"
												},
												{
													"key": "from",
													"value": "adipisicing elit ullamco"
												},
												{
													"key": "sort",
													"value": "adipisicing elit ullamco"
												}
											],
											"variable": [
												{
													"key": "owner"
												}
											]
										}
									},
									"status": "Internal Server Error",
									"code": 500,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n \"code\": 1519430,\n \"message\": \"enim\",\n \"details\": \"do\"\n}"
								}
							]
						}
					]
				},
				{
					"name": "glossary/{owner}",
					"item": [
						{
							"name": "{id}",
							"item": [
								{
									"name": "Get an individual metadata glossary",
									"request": {
										"auth": {
											"type": "bearer",
											"bearer": [
												{
													"key": "token",
													"value": "{{readWrite}}",
													"type": "string"
												}
											]
										},
										"method": "GET",
										"header": [],
										"url": {
											"raw": "{{baseUrl}}/metadata/glossary/:owner/:id",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"metadata",
												"glossary",
												":owner",
												":id"
											],
											"variable": [
												{
													"key": "owner",
													"value": "{{org}}",
													"description": "(Required) "
												},
												{
													"key": "id",
													"value": "{{termid}}",
													"description": "(Required) "
												}
											]
										}
									},
									"response": [
										{
											"name": "successful operation",
											"originalRequest": {
												"method": "GET",
												"header": [
													{
														"description": "Added as a part of security scheme: oauth2",
														"key": "Authorization",
														"value": "<token>"
													}
												],
												"url": {
													"raw": "{{baseUrl}}/metadata/glossary/:owner/:id",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"metadata",
														"glossary",
														":owner",
														":id"
													],
													"variable": [
														{
															"key": "owner"
														},
														{
															"key": "id"
														}
													]
												}
											},
											"status": "OK",
											"code": 200,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"body": "{\n \"created\": \"1988-06-04T23:43:49.655Z\",\n \"id\": \"anim et eiusmod cupidatat\",\n \"owner\": \"in fugiat officia\",\n \"visibility\": \"OPEN\",\n \"title\": \"sed ut\",\n \"category\": \"ad cupidatat\",\n \"typeLabel\": \"elit\",\n \"typeIri\": \"esse nostrud magna id\",\n \"rootParentTypeLabel\": \"velit esse\",\n \"rootParentTypeIri\": \"dolore mollit irure officia\",\n \"table\": {\n  \"owner\": \"mollit\",\n  \"sourceId\": \"occaecat eu\",\n  \"tableId\": \"sunt\"\n },\n \"dataType\": \"quis eiusmod\",\n \"columnIndex\": 56482049,\n \"description\": \"non d\",\n \"encodedIri\": \"nostrud magna mollit non\",\n \"summary\": \"veniam non nostrud\",\n \"url\": \"http://l.oincbiP+ZuKrkwFxuvi\",\n \"updated\": \"1958-10-08T08:29:55.084Z\",\n \"collections\": [\n  {\n   \"agentid\": \"magna\",\n   \"catalogid\": \"consequat cupidatat non\",\n   \"referent\": \"adipisicing officia ut dolore\"\n  },\n  {\n   \"agentid\": \"deserunt veniam\",\n   \"catalogid\": \"voluptate amet aliqua sed reprehenderit\",\n   \"referent\": \"cillum reprehenderit amet\"\n  }\n ],\n \"relationshipTypes\": [\n  \"incididunt consequat ad\",\n  \"esse Excepteur sed in\"\n ],\n \"tags\": [\n  \"cillum \",\n  \"dolor labore in Duis\"\n ],\n \"externalUrls\": [\n  \"ut dolor non minim\",\n  \"id\"\n ],\n \"assetStatus\": {\n  \"assetStatusLabel\": \"sunt ex aute do\",\n  \"dispositionLabel\": \"laboris re\"\n },\n \"properties\": {}\n}"
										},
										{
											"name": "Bad Request",
											"originalRequest": {
												"method": "GET",
												"header": [
													{
														"description": "Added as a part of security scheme: oauth2",
														"key": "Authorization",
														"value": "<token>"
													}
												],
												"url": {
													"raw": "{{baseUrl}}/metadata/glossary/:owner/:id",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"metadata",
														"glossary",
														":owner",
														":id"
													],
													"variable": [
														{
															"key": "owner"
														},
														{
															"key": "id"
														}
													]
												}
											},
											"status": "Bad Request",
											"code": 400,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"body": "{\n \"code\": 1519430,\n \"message\": \"enim\",\n \"details\": \"do\"\n}"
										},
										{
											"name": "Not found",
											"originalRequest": {
												"method": "GET",
												"header": [
													{
														"description": "Added as a part of security scheme: oauth2",
														"key": "Authorization",
														"value": "<token>"
													}
												],
												"url": {
													"raw": "{{baseUrl}}/metadata/glossary/:owner/:id",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"metadata",
														"glossary",
														":owner",
														":id"
													],
													"variable": [
														{
															"key": "owner"
														},
														{
															"key": "id"
														}
													]
												}
											},
											"status": "Not Found",
											"code": 404,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"body": "{\n \"code\": 1519430,\n \"message\": \"enim\",\n \"details\": \"do\"\n}"
										}
									]
								},
								{
									"name": "Replace an existing glossary",
									"request": {
										"auth": {
											"type": "bearer",
											"bearer": [
												{
													"key": "token",
													"value": "{{readWrite}}",
													"type": "string"
												}
											]
										},
										"method": "PUT",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/json"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n    \"collections\": [\n        \"My collection\"\n    ],\n    \"title\": \"Orders\",\n    \"description\": \"Many orders\",\n    \"tags\": [\n        \"enim ut\",\n        \"qui cillum\"\n    ],\n    \"summary\": \"aliqua conse\"\n}"
										},
										"url": {
											"raw": "{{baseUrl}}/metadata/glossary/:owner/:id",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"metadata",
												"glossary",
												":owner",
												":id"
											],
											"variable": [
												{
													"key": "owner",
													"value": "{{org}}",
													"description": "(Required) "
												},
												{
													"key": "id",
													"value": "{{termid}}",
													"description": "(Required) "
												}
											]
										}
									},
									"response": [
										{
											"name": "Glossary replaced successfully.",
											"originalRequest": {
												"method": "PUT",
												"header": [
													{
														"description": "Added as a part of security scheme: oauth2",
														"key": "Authorization",
														"value": "<token>"
													}
												],
												"url": {
													"raw": "{{baseUrl}}/metadata/glossary/:owner/:id",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"metadata",
														"glossary",
														":owner",
														":id"
													],
													"variable": [
														{
															"key": "owner"
														},
														{
															"key": "id"
														}
													]
												}
											},
											"status": "OK",
											"code": 200,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"body": "{\n \"message\": \"voluptate culpa nulla esse\"\n}"
										},
										{
											"name": "Bad request",
											"originalRequest": {
												"method": "PUT",
												"header": [
													{
														"description": "Added as a part of security scheme: oauth2",
														"key": "Authorization",
														"value": "<token>"
													}
												],
												"url": {
													"raw": "{{baseUrl}}/metadata/glossary/:owner/:id",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"metadata",
														"glossary",
														":owner",
														":id"
													],
													"variable": [
														{
															"key": "owner"
														},
														{
															"key": "id"
														}
													]
												}
											},
											"status": "Bad Request",
											"code": 400,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"body": "{\n \"code\": 1519430,\n \"message\": \"enim\",\n \"details\": \"do\"\n}"
										},
										{
											"name": "Unauthorized",
											"originalRequest": {
												"method": "PUT",
												"header": [
													{
														"description": "Added as a part of security scheme: oauth2",
														"key": "Authorization",
														"value": "<token>"
													}
												],
												"url": {
													"raw": "{{baseUrl}}/metadata/glossary/:owner/:id",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"metadata",
														"glossary",
														":owner",
														":id"
													],
													"variable": [
														{
															"key": "owner"
														},
														{
															"key": "id"
														}
													]
												}
											},
											"status": "Unauthorized",
											"code": 401,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"body": "{\n \"code\": 1519430,\n \"message\": \"enim\",\n \"details\": \"do\"\n}"
										},
										{
											"name": "Forbidden",
											"originalRequest": {
												"method": "PUT",
												"header": [
													{
														"description": "Added as a part of security scheme: oauth2",
														"key": "Authorization",
														"value": "<token>"
													}
												],
												"url": {
													"raw": "{{baseUrl}}/metadata/glossary/:owner/:id",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"metadata",
														"glossary",
														":owner",
														":id"
													],
													"variable": [
														{
															"key": "owner"
														},
														{
															"key": "id"
														}
													]
												}
											},
											"status": "Forbidden",
											"code": 403,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"body": "{\n \"code\": 1519430,\n \"message\": \"enim\",\n \"details\": \"do\"\n}"
										},
										{
											"name": "Not found",
											"originalRequest": {
												"method": "PUT",
												"header": [
													{
														"description": "Added as a part of security scheme: oauth2",
														"key": "Authorization",
														"value": "<token>"
													}
												],
												"url": {
													"raw": "{{baseUrl}}/metadata/glossary/:owner/:id",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"metadata",
														"glossary",
														":owner",
														":id"
													],
													"variable": [
														{
															"key": "owner"
														},
														{
															"key": "id"
														}
													]
												}
											},
											"status": "Not Found",
											"code": 404,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"body": "{\n \"code\": 1519430,\n \"message\": \"enim\",\n \"details\": \"do\"\n}"
										},
										{
											"name": "Bad request",
											"originalRequest": {
												"method": "PUT",
												"header": [
													{
														"description": "Added as a part of security scheme: oauth2",
														"key": "Authorization",
														"value": "<token>"
													}
												],
												"url": {
													"raw": "{{baseUrl}}/metadata/glossary/:owner/:id",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"metadata",
														"glossary",
														":owner",
														":id"
													],
													"variable": [
														{
															"key": "owner"
														},
														{
															"key": "id"
														}
													]
												}
											},
											"status": "Unprocessable Entity (WebDAV) (RFC 4918)",
											"code": 422,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"body": "{\n \"code\": 1519430,\n \"message\": \"enim\",\n \"details\": \"do\"\n}"
										},
										{
											"name": "Server error",
											"originalRequest": {
												"method": "PUT",
												"header": [
													{
														"description": "Added as a part of security scheme: oauth2",
														"key": "Authorization",
														"value": "<token>"
													}
												],
												"url": {
													"raw": "{{baseUrl}}/metadata/glossary/:owner/:id",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"metadata",
														"glossary",
														":owner",
														":id"
													],
													"variable": [
														{
															"key": "owner"
														},
														{
															"key": "id"
														}
													]
												}
											},
											"status": "Internal Server Error",
											"code": 500,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"body": "{\n \"code\": 1519430,\n \"message\": \"enim\",\n \"details\": \"do\"\n}"
										}
									]
								},
								{
									"name": "Delete a Glossary.",
									"request": {
										"auth": {
											"type": "bearer",
											"bearer": [
												{
													"key": "token",
													"value": "{{readWrite}}",
													"type": "string"
												}
											]
										},
										"method": "DELETE",
										"header": [],
										"url": {
											"raw": "{{baseUrl}}/metadata/glossary/:owner/:id",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"metadata",
												"glossary",
												":owner",
												":id"
											],
											"variable": [
												{
													"key": "owner",
													"value": "{{org}}",
													"description": "(Required) "
												},
												{
													"key": "id",
													"value": "{{termid2}}",
													"description": "(Required) "
												}
											]
										}
									},
									"response": [
										{
											"name": "Glossary has been successfully deleted.",
											"originalRequest": {
												"method": "DELETE",
												"header": [
													{
														"description": "Added as a part of security scheme: oauth2",
														"key": "Authorization",
														"value": "<token>"
													}
												],
												"url": {
													"raw": "{{baseUrl}}/metadata/glossary/:owner/:id",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"metadata",
														"glossary",
														":owner",
														":id"
													],
													"variable": [
														{
															"key": "owner"
														},
														{
															"key": "id"
														}
													]
												}
											},
											"status": "OK",
											"code": 200,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"body": "{\n \"message\": \"voluptate culpa nulla esse\"\n}"
										},
										{
											"name": "Bad request",
											"originalRequest": {
												"method": "DELETE",
												"header": [
													{
														"description": "Added as a part of security scheme: oauth2",
														"key": "Authorization",
														"value": "<token>"
													}
												],
												"url": {
													"raw": "{{baseUrl}}/metadata/glossary/:owner/:id",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"metadata",
														"glossary",
														":owner",
														":id"
													],
													"variable": [
														{
															"key": "owner"
														},
														{
															"key": "id"
														}
													]
												}
											},
											"status": "Bad Request",
											"code": 400,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"body": "{\n \"code\": 1519430,\n \"message\": \"enim\",\n \"details\": \"do\"\n}"
										},
										{
											"name": "Unauthorized",
											"originalRequest": {
												"method": "DELETE",
												"header": [
													{
														"description": "Added as a part of security scheme: oauth2",
														"key": "Authorization",
														"value": "<token>"
													}
												],
												"url": {
													"raw": "{{baseUrl}}/metadata/glossary/:owner/:id",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"metadata",
														"glossary",
														":owner",
														":id"
													],
													"variable": [
														{
															"key": "owner"
														},
														{
															"key": "id"
														}
													]
												}
											},
											"status": "Unauthorized",
											"code": 401,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"body": "{\n \"code\": 1519430,\n \"message\": \"enim\",\n \"details\": \"do\"\n}"
										},
										{
											"name": "Forbidden",
											"originalRequest": {
												"method": "DELETE",
												"header": [
													{
														"description": "Added as a part of security scheme: oauth2",
														"key": "Authorization",
														"value": "<token>"
													}
												],
												"url": {
													"raw": "{{baseUrl}}/metadata/glossary/:owner/:id",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"metadata",
														"glossary",
														":owner",
														":id"
													],
													"variable": [
														{
															"key": "owner"
														},
														{
															"key": "id"
														}
													]
												}
											},
											"status": "Forbidden",
											"code": 403,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"body": "{\n \"code\": 1519430,\n \"message\": \"enim\",\n \"details\": \"do\"\n}"
										},
										{
											"name": "Not found",
											"originalRequest": {
												"method": "DELETE",
												"header": [
													{
														"description": "Added as a part of security scheme: oauth2",
														"key": "Authorization",
														"value": "<token>"
													}
												],
												"url": {
													"raw": "{{baseUrl}}/metadata/glossary/:owner/:id",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"metadata",
														"glossary",
														":owner",
														":id"
													],
													"variable": [
														{
															"key": "owner"
														},
														{
															"key": "id"
														}
													]
												}
											},
											"status": "Not Found",
											"code": 404,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"body": "{\n \"code\": 1519430,\n \"message\": \"enim\",\n \"details\": \"do\"\n}"
										},
										{
											"name": "Server error",
											"originalRequest": {
												"method": "DELETE",
												"header": [
													{
														"description": "Added as a part of security scheme: oauth2",
														"key": "Authorization",
														"value": "<token>"
													}
												],
												"url": {
													"raw": "{{baseUrl}}/metadata/glossary/:owner/:id",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"metadata",
														"glossary",
														":owner",
														":id"
													],
													"variable": [
														{
															"key": "owner"
														},
														{
															"key": "id"
														}
													]
												}
											},
											"status": "Internal Server Error",
											"code": 500,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"body": "{\n \"code\": 1519430,\n \"message\": \"enim\",\n \"details\": \"do\"\n}"
										}
									]
								},
								{
									"name": "Update an existing glossary.",
									"request": {
										"auth": {
											"type": "bearer",
											"bearer": [
												{
													"key": "token",
													"value": "{{readWrite}}",
													"type": "string"
												}
											]
										},
										"method": "PATCH",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/json"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n    \"collections\": [\n        \"My collection\"\n    ],\n    \"title\": \"Orders\",\n    \"description\": \"orderino\",\n    \"tags\": [\n        \"enim ut\",\n        \"qui cillum\"\n    ],\n    \"summary\": \"aliqua conse\"\n}"
										},
										"url": {
											"raw": "{{baseUrl}}/metadata/glossary/:owner/:id",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"metadata",
												"glossary",
												":owner",
												":id"
											],
											"variable": [
												{
													"key": "owner",
													"value": "{{org}}",
													"description": "(Required) "
												},
												{
													"key": "id",
													"value": "{{termid}}",
													"description": "(Required) "
												}
											]
										}
									},
									"response": [
										{
											"name": "Glossary updated successfully.",
											"originalRequest": {
												"method": "PATCH",
												"header": [
													{
														"description": "Added as a part of security scheme: oauth2",
														"key": "Authorization",
														"value": "<token>"
													}
												],
												"url": {
													"raw": "{{baseUrl}}/metadata/glossary/:owner/:id",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"metadata",
														"glossary",
														":owner",
														":id"
													],
													"variable": [
														{
															"key": "owner"
														},
														{
															"key": "id"
														}
													]
												}
											},
											"status": "OK",
											"code": 200,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"body": "{\n \"message\": \"voluptate culpa nulla esse\"\n}"
										},
										{
											"name": "Bad request",
											"originalRequest": {
												"method": "PATCH",
												"header": [
													{
														"description": "Added as a part of security scheme: oauth2",
														"key": "Authorization",
														"value": "<token>"
													}
												],
												"url": {
													"raw": "{{baseUrl}}/metadata/glossary/:owner/:id",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"metadata",
														"glossary",
														":owner",
														":id"
													],
													"variable": [
														{
															"key": "owner"
														},
														{
															"key": "id"
														}
													]
												}
											},
											"status": "Bad Request",
											"code": 400,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"body": "{\n \"code\": 1519430,\n \"message\": \"enim\",\n \"details\": \"do\"\n}"
										},
										{
											"name": "Unauthorized",
											"originalRequest": {
												"method": "PATCH",
												"header": [
													{
														"description": "Added as a part of security scheme: oauth2",
														"key": "Authorization",
														"value": "<token>"
													}
												],
												"url": {
													"raw": "{{baseUrl}}/metadata/glossary/:owner/:id",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"metadata",
														"glossary",
														":owner",
														":id"
													],
													"variable": [
														{
															"key": "owner"
														},
														{
															"key": "id"
														}
													]
												}
											},
											"status": "Unauthorized",
											"code": 401,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"body": "{\n \"code\": 1519430,\n \"message\": \"enim\",\n \"details\": \"do\"\n}"
										},
										{
											"name": "Forbidden",
											"originalRequest": {
												"method": "PATCH",
												"header": [
													{
														"description": "Added as a part of security scheme: oauth2",
														"key": "Authorization",
														"value": "<token>"
													}
												],
												"url": {
													"raw": "{{baseUrl}}/metadata/glossary/:owner/:id",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"metadata",
														"glossary",
														":owner",
														":id"
													],
													"variable": [
														{
															"key": "owner"
														},
														{
															"key": "id"
														}
													]
												}
											},
											"status": "Forbidden",
											"code": 403,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"body": "{\n \"code\": 1519430,\n \"message\": \"enim\",\n \"details\": \"do\"\n}"
										},
										{
											"name": "Not found",
											"originalRequest": {
												"method": "PATCH",
												"header": [
													{
														"description": "Added as a part of security scheme: oauth2",
														"key": "Authorization",
														"value": "<token>"
													}
												],
												"url": {
													"raw": "{{baseUrl}}/metadata/glossary/:owner/:id",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"metadata",
														"glossary",
														":owner",
														":id"
													],
													"variable": [
														{
															"key": "owner"
														},
														{
															"key": "id"
														}
													]
												}
											},
											"status": "Not Found",
											"code": 404,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"body": "{\n \"code\": 1519430,\n \"message\": \"enim\",\n \"details\": \"do\"\n}"
										},
										{
											"name": "Bad request",
											"originalRequest": {
												"method": "PATCH",
												"header": [
													{
														"description": "Added as a part of security scheme: oauth2",
														"key": "Authorization",
														"value": "<token>"
													}
												],
												"url": {
													"raw": "{{baseUrl}}/metadata/glossary/:owner/:id",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"metadata",
														"glossary",
														":owner",
														":id"
													],
													"variable": [
														{
															"key": "owner"
														},
														{
															"key": "id"
														}
													]
												}
											},
											"status": "Unprocessable Entity (WebDAV) (RFC 4918)",
											"code": 422,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"body": "{\n \"code\": 1519430,\n \"message\": \"enim\",\n \"details\": \"do\"\n}"
										},
										{
											"name": "Server error",
											"originalRequest": {
												"method": "PATCH",
												"header": [
													{
														"description": "Added as a part of security scheme: oauth2",
														"key": "Authorization",
														"value": "<token>"
													}
												],
												"url": {
													"raw": "{{baseUrl}}/metadata/glossary/:owner/:id",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"metadata",
														"glossary",
														":owner",
														":id"
													],
													"variable": [
														{
															"key": "owner"
														},
														{
															"key": "id"
														}
													]
												}
											},
											"status": "Internal Server Error",
											"code": 500,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"body": "{\n \"code\": 1519430,\n \"message\": \"enim\",\n \"details\": \"do\"\n}"
										}
									]
								}
							]
						},
						{
							"name": "Gets metadata glossary by owner.",
							"request": {
								"auth": {
									"type": "bearer",
									"bearer": [
										{
											"key": "token",
											"value": "{{readWrite}}",
											"type": "string"
										}
									]
								},
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{baseUrl}}/metadata/glossary/:owner",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"metadata",
										"glossary",
										":owner"
									],
									"query": [
										{
											"key": "typelabel",
											"value": "adipisicing elit ullamco",
											"disabled": true
										},
										{
											"key": "typeiri",
											"value": "adipisicing elit ullamco",
											"disabled": true
										},
										{
											"key": "size",
											"value": "adipisicing elit ullamco",
											"disabled": true
										},
										{
											"key": "from",
											"value": "adipisicing elit ullamco",
											"disabled": true
										},
										{
											"key": "sort",
											"value": "adipisicing elit ullamco",
											"disabled": true
										}
									],
									"variable": [
										{
											"key": "owner",
											"value": "{{org}}",
											"description": "(Required) "
										}
									]
								}
							},
							"response": [
								{
									"name": "Successfully retrieved metadata glossary",
									"originalRequest": {
										"method": "GET",
										"header": [
											{
												"description": "Added as a part of security scheme: oauth2",
												"key": "Authorization",
												"value": "<token>"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/metadata/glossary/:owner?typelabel=adipisicing elit ullamco&typeiri=adipisicing elit ullamco&size=adipisicing elit ullamco&from=adipisicing elit ullamco&sort=adipisicing elit ullamco",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"metadata",
												"glossary",
												":owner"
											],
											"query": [
												{
													"key": "typelabel",
													"value": "adipisicing elit ullamco"
												},
												{
													"key": "typeiri",
													"value": "adipisicing elit ullamco"
												},
												{
													"key": "size",
													"value": "adipisicing elit ullamco"
												},
												{
													"key": "from",
													"value": "adipisicing elit ullamco"
												},
												{
													"key": "sort",
													"value": "adipisicing elit ullamco"
												}
											],
											"variable": [
												{
													"key": "owner"
												}
											]
										}
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n \"count\": 64160876,\n \"records\": [\n  {\n   \"created\": \"1993-11-09T13:04:36.271Z\",\n   \"id\": \"nulla nisi Excepteur non\",\n   \"owner\": \"ipsum\",\n   \"visibility\": \"PRIVATE\",\n   \"title\": \"proident in et officia\",\n   \"category\": \"et Excepteur incididunt ipsum cupidatat\",\n   \"typeLabel\": \"labo\",\n   \"typeIri\": \"cillum ipsum Lorem dolore\",\n   \"rootParentTypeLabel\": \"proident laboris\",\n   \"rootParentTypeIri\": \"adipisicing non nostrud aliqua\",\n   \"table\": {\n    \"owner\": {\n     \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    \"sourceId\": {\n     \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    \"tableId\": {\n     \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    }\n   },\n   \"dataType\": \"non ad\",\n   \"columnIndex\": 69943645,\n   \"description\": \"labore aliquip velit occaecat\",\n   \"encodedIri\": \"amet officia non\",\n   \"summary\": \"cupidatat officia Ut\",\n   \"url\": \"http://LwKGLADeUPzokbPOdKgLPJvqQMh.yerF-YAmoiMQt\",\n   \"updated\": \"2021-10-07T15:26:29.480Z\",\n   \"collections\": [\n    {\n     \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    {\n     \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    }\n   ],\n   \"relationshipTypes\": [\n    \"sed labore enim\",\n    \"culpa mollit veniam\"\n   ],\n   \"tags\": [\n    \"aliquip qui et veniam\",\n    \"ipsum sit proident dolor officia\"\n   ],\n   \"externalUrls\": [\n    \"in Ut incididunt\",\n    \"adipisicing exercitation esse ex\"\n   ],\n   \"assetStatus\": {\n    \"assetStatusLabel\": \"Duis\",\n    \"dispositionLabel\": \"irure am\"\n   },\n   \"properties\": {}\n  },\n  {\n   \"created\": \"1962-07-17T17:38:02.710Z\",\n   \"id\": \"non dolore pariatur sed\",\n   \"owner\": \"ad\",\n   \"visibility\": \"OPEN\",\n   \"title\": \"aute amet elit\",\n   \"category\": \"velit veniam tempor culpa\",\n   \"typeLabel\": \"sunt ad\",\n   \"typeIri\": \"aute eu elit fugiat aliquip\",\n   \"rootParentTypeLabel\": \"enim sed aliquip reprehenderit in\",\n   \"rootParentTypeIri\": \"nulla occaecat consequat dolor aliqua\",\n   \"table\": {\n    \"owner\": {\n     \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    \"sourceId\": {\n     \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    \"tableId\": {\n     \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    }\n   },\n   \"dataType\": \"cillum es\",\n   \"columnIndex\": 60084365,\n   \"description\": \"esse exercitation consequat sint labore\",\n   \"encodedIri\": \"velit adipisicing\",\n   \"summary\": \"consequat cillum exercitation\",\n   \"url\": \"https://PfeGAnyXpIzcJoWFivKhcbfMBgHMUm.wzE6\",\n   \"updated\": \"2000-11-17T06:04:06.390Z\",\n   \"collections\": [\n    {\n     \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    {\n     \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    }\n   ],\n   \"relationshipTypes\": [\n    \"consectetur anim laborum\",\n    \"commodo dolor\"\n   ],\n   \"tags\": [\n    \"in consectetur irure do Excepteur\",\n    \"ad sit\"\n   ],\n   \"externalUrls\": [\n    \"in est occaecat dolor\",\n    \"sed nostrud elit fugiat Ut\"\n   ],\n   \"assetStatus\": {\n    \"assetStatusLabel\": \"ut tempor officia m\",\n    \"dispositionLabel\": \"cupidatat sunt est\"\n   },\n   \"properties\": {}\n  }\n ],\n \"nextPageToken\": \"deserunt Lorem occaecat nostrud\"\n}"
								},
								{
									"name": "Bad request",
									"originalRequest": {
										"method": "GET",
										"header": [
											{
												"description": "Added as a part of security scheme: oauth2",
												"key": "Authorization",
												"value": "<token>"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/metadata/glossary/:owner?typelabel=adipisicing elit ullamco&typeiri=adipisicing elit ullamco&size=adipisicing elit ullamco&from=adipisicing elit ullamco&sort=adipisicing elit ullamco",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"metadata",
												"glossary",
												":owner"
											],
											"query": [
												{
													"key": "typelabel",
													"value": "adipisicing elit ullamco"
												},
												{
													"key": "typeiri",
													"value": "adipisicing elit ullamco"
												},
												{
													"key": "size",
													"value": "adipisicing elit ullamco"
												},
												{
													"key": "from",
													"value": "adipisicing elit ullamco"
												},
												{
													"key": "sort",
													"value": "adipisicing elit ullamco"
												}
											],
											"variable": [
												{
													"key": "owner"
												}
											]
										}
									},
									"status": "Bad Request",
									"code": 400,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n \"code\": 1519430,\n \"message\": \"enim\",\n \"details\": \"do\"\n}"
								},
								{
									"name": "Unauthorized",
									"originalRequest": {
										"method": "GET",
										"header": [
											{
												"description": "Added as a part of security scheme: oauth2",
												"key": "Authorization",
												"value": "<token>"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/metadata/glossary/:owner?typelabel=adipisicing elit ullamco&typeiri=adipisicing elit ullamco&size=adipisicing elit ullamco&from=adipisicing elit ullamco&sort=adipisicing elit ullamco",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"metadata",
												"glossary",
												":owner"
											],
											"query": [
												{
													"key": "typelabel",
													"value": "adipisicing elit ullamco"
												},
												{
													"key": "typeiri",
													"value": "adipisicing elit ullamco"
												},
												{
													"key": "size",
													"value": "adipisicing elit ullamco"
												},
												{
													"key": "from",
													"value": "adipisicing elit ullamco"
												},
												{
													"key": "sort",
													"value": "adipisicing elit ullamco"
												}
											],
											"variable": [
												{
													"key": "owner"
												}
											]
										}
									},
									"status": "Unauthorized",
									"code": 401,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n \"code\": 1519430,\n \"message\": \"enim\",\n \"details\": \"do\"\n}"
								},
								{
									"name": "Forbidden",
									"originalRequest": {
										"method": "GET",
										"header": [
											{
												"description": "Added as a part of security scheme: oauth2",
												"key": "Authorization",
												"value": "<token>"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/metadata/glossary/:owner?typelabel=adipisicing elit ullamco&typeiri=adipisicing elit ullamco&size=adipisicing elit ullamco&from=adipisicing elit ullamco&sort=adipisicing elit ullamco",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"metadata",
												"glossary",
												":owner"
											],
											"query": [
												{
													"key": "typelabel",
													"value": "adipisicing elit ullamco"
												},
												{
													"key": "typeiri",
													"value": "adipisicing elit ullamco"
												},
												{
													"key": "size",
													"value": "adipisicing elit ullamco"
												},
												{
													"key": "from",
													"value": "adipisicing elit ullamco"
												},
												{
													"key": "sort",
													"value": "adipisicing elit ullamco"
												}
											],
											"variable": [
												{
													"key": "owner"
												}
											]
										}
									},
									"status": "Forbidden",
									"code": 403,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n \"code\": 1519430,\n \"message\": \"enim\",\n \"details\": \"do\"\n}"
								},
								{
									"name": "Not found",
									"originalRequest": {
										"method": "GET",
										"header": [
											{
												"description": "Added as a part of security scheme: oauth2",
												"key": "Authorization",
												"value": "<token>"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/metadata/glossary/:owner?typelabel=adipisicing elit ullamco&typeiri=adipisicing elit ullamco&size=adipisicing elit ullamco&from=adipisicing elit ullamco&sort=adipisicing elit ullamco",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"metadata",
												"glossary",
												":owner"
											],
											"query": [
												{
													"key": "typelabel",
													"value": "adipisicing elit ullamco"
												},
												{
													"key": "typeiri",
													"value": "adipisicing elit ullamco"
												},
												{
													"key": "size",
													"value": "adipisicing elit ullamco"
												},
												{
													"key": "from",
													"value": "adipisicing elit ullamco"
												},
												{
													"key": "sort",
													"value": "adipisicing elit ullamco"
												}
											],
											"variable": [
												{
													"key": "owner"
												}
											]
										}
									},
									"status": "Not Found",
									"code": 404,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n \"code\": 1519430,\n \"message\": \"enim\",\n \"details\": \"do\"\n}"
								},
								{
									"name": "Server error",
									"originalRequest": {
										"method": "GET",
										"header": [
											{
												"description": "Added as a part of security scheme: oauth2",
												"key": "Authorization",
												"value": "<token>"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/metadata/glossary/:owner?typelabel=adipisicing elit ullamco&typeiri=adipisicing elit ullamco&size=adipisicing elit ullamco&from=adipisicing elit ullamco&sort=adipisicing elit ullamco",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"metadata",
												"glossary",
												":owner"
											],
											"query": [
												{
													"key": "typelabel",
													"value": "adipisicing elit ullamco"
												},
												{
													"key": "typeiri",
													"value": "adipisicing elit ullamco"
												},
												{
													"key": "size",
													"value": "adipisicing elit ullamco"
												},
												{
													"key": "from",
													"value": "adipisicing elit ullamco"
												},
												{
													"key": "sort",
													"value": "adipisicing elit ullamco"
												}
											],
											"variable": [
												{
													"key": "owner"
												}
											]
										}
									},
									"status": "Internal Server Error",
									"code": 500,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n \"code\": 1519430,\n \"message\": \"enim\",\n \"details\": \"do\"\n}"
								}
							]
						},
						{
							"name": "Create a new glossary metadata.",
							"request": {
								"auth": {
									"type": "bearer",
									"bearer": [
										{
											"key": "token",
											"value": "{{readWrite}}",
											"type": "string"
										}
									]
								},
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"collections\": [\n        \"My collection\"\n    ],\n    \"title\": \"Sales\",\n    \"description\": \"A sale\",\n    \"tags\": [\n        \"laborum dolor enim\",\n        \"Excepteur aliquip ut\"\n    ],\n    \"summary\": \"I'm an order\"\n}"
								},
								"url": {
									"raw": "{{baseUrl}}/metadata/glossary/:owner",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"metadata",
										"glossary",
										":owner"
									],
									"variable": [
										{
											"key": "owner",
											"value": "{{org}}",
											"description": "(Required) "
										}
									]
								}
							},
							"response": [
								{
									"name": "Glossary Metadata created successfully.",
									"originalRequest": {
										"method": "POST",
										"header": [
											{
												"description": "Added as a part of security scheme: oauth2",
												"key": "Authorization",
												"value": "<token>"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/metadata/glossary/:owner",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"metadata",
												"glossary",
												":owner"
											],
											"variable": [
												{
													"key": "owner"
												}
											]
										}
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n \"uri\": \"http://A.sfQ-gVx.2oEMnKdGnZwvPKe1go1ZBeMhzDIKRr\",\n \"message\": \"nisi nulla quis veniam\"\n}"
								},
								{
									"name": "Bad request",
									"originalRequest": {
										"method": "POST",
										"header": [
											{
												"description": "Added as a part of security scheme: oauth2",
												"key": "Authorization",
												"value": "<token>"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/metadata/glossary/:owner",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"metadata",
												"glossary",
												":owner"
											],
											"variable": [
												{
													"key": "owner"
												}
											]
										}
									},
									"status": "Bad Request",
									"code": 400,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n \"code\": 1519430,\n \"message\": \"enim\",\n \"details\": \"do\"\n}"
								},
								{
									"name": "Unauthorized",
									"originalRequest": {
										"method": "POST",
										"header": [
											{
												"description": "Added as a part of security scheme: oauth2",
												"key": "Authorization",
												"value": "<token>"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/metadata/glossary/:owner",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"metadata",
												"glossary",
												":owner"
											],
											"variable": [
												{
													"key": "owner"
												}
											]
										}
									},
									"status": "Unauthorized",
									"code": 401,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n \"code\": 1519430,\n \"message\": \"enim\",\n \"details\": \"do\"\n}"
								},
								{
									"name": "Forbidden",
									"originalRequest": {
										"method": "POST",
										"header": [
											{
												"description": "Added as a part of security scheme: oauth2",
												"key": "Authorization",
												"value": "<token>"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/metadata/glossary/:owner",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"metadata",
												"glossary",
												":owner"
											],
											"variable": [
												{
													"key": "owner"
												}
											]
										}
									},
									"status": "Forbidden",
									"code": 403,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n \"code\": 1519430,\n \"message\": \"enim\",\n \"details\": \"do\"\n}"
								},
								{
									"name": "Not found",
									"originalRequest": {
										"method": "POST",
										"header": [
											{
												"description": "Added as a part of security scheme: oauth2",
												"key": "Authorization",
												"value": "<token>"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/metadata/glossary/:owner",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"metadata",
												"glossary",
												":owner"
											],
											"variable": [
												{
													"key": "owner"
												}
											]
										}
									},
									"status": "Not Found",
									"code": 404,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n \"code\": 1519430,\n \"message\": \"enim\",\n \"details\": \"do\"\n}"
								},
								{
									"name": "Conflict",
									"originalRequest": {
										"method": "POST",
										"header": [
											{
												"description": "Added as a part of security scheme: oauth2",
												"key": "Authorization",
												"value": "<token>"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/metadata/glossary/:owner",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"metadata",
												"glossary",
												":owner"
											],
											"variable": [
												{
													"key": "owner"
												}
											]
										}
									},
									"status": "Conflict",
									"code": 409,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n \"code\": 1519430,\n \"message\": \"enim\",\n \"details\": \"do\"\n}"
								},
								{
									"name": "Bad request",
									"originalRequest": {
										"method": "POST",
										"header": [
											{
												"description": "Added as a part of security scheme: oauth2",
												"key": "Authorization",
												"value": "<token>"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/metadata/glossary/:owner",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"metadata",
												"glossary",
												":owner"
											],
											"variable": [
												{
													"key": "owner"
												}
											]
										}
									},
									"status": "Unprocessable Entity (WebDAV) (RFC 4918)",
									"code": 422,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n \"code\": 1519430,\n \"message\": \"enim\",\n \"details\": \"do\"\n}"
								},
								{
									"name": "Server error",
									"originalRequest": {
										"method": "POST",
										"header": [
											{
												"description": "Added as a part of security scheme: oauth2",
												"key": "Authorization",
												"value": "<token>"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/metadata/glossary/:owner",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"metadata",
												"glossary",
												":owner"
											],
											"variable": [
												{
													"key": "owner"
												}
											]
										}
									},
									"status": "Internal Server Error",
									"code": 500,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n \"code\": 1519430,\n \"message\": \"enim\",\n \"details\": \"do\"\n}"
								}
							]
						}
					]
				},
				{
					"name": "relationships/{owner}",
					"item": [
						{
							"name": "Creates a relationship between two catalog resources",
							"request": {
								"auth": {
									"type": "bearer",
									"bearer": [
										{
											"key": "token",
											"value": "{{readWrite}}",
											"type": "string"
										}
									]
								},
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"relationshipType\": \"https://dwec.data.world/v0/related\",\n    \"sourceId\": \"analysis-69c7895c-be9b-411a-800b-ebb83d60dab7\",\n    \"sourceType\": \"ANALYSIS\",\n    \"targetId\": \"businessTerm-fef1ea9f-4cfe-44b3-bd18-31c41531dc4c\",\n    \"targetType\": \"BUSINESS_TERM\"\n}"
								},
								"url": {
									"raw": "{{baseUrl}}/metadata/relationships/:owner",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"metadata",
										"relationships",
										":owner"
									],
									"variable": [
										{
											"key": "owner",
											"value": "{{org}}",
											"description": "(Required) "
										}
									]
								}
							},
							"response": [
								{
									"name": "successful operation",
									"originalRequest": {
										"method": "POST",
										"header": [],
										"url": {
											"raw": "{{baseUrl}}/metadata/relationships/:owner",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"metadata",
												"relationships",
												":owner"
											],
											"variable": [
												{
													"key": "owner"
												}
											]
										}
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n \"activityBatchId\": \"020bc7b4-b861-36df-2928-350a601979f1\",\n \"timeStarted\": \"laborum officia qui\",\n \"timeEnded\": \"dolore amet\",\n \"activityResults\": [\n  \"aliqua tempor\",\n  \"nisi Lorem\"\n ]\n}"
								},
								{
									"name": "Bad request",
									"originalRequest": {
										"method": "POST",
										"header": [],
										"url": {
											"raw": "{{baseUrl}}/metadata/relationships/:owner",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"metadata",
												"relationships",
												":owner"
											],
											"variable": [
												{
													"key": "owner"
												}
											]
										}
									},
									"status": "Bad Request",
									"code": 400,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n \"code\": 1519430,\n \"message\": \"enim\",\n \"details\": \"do\"\n}"
								},
								{
									"name": "Unauthorized",
									"originalRequest": {
										"method": "POST",
										"header": [],
										"url": {
											"raw": "{{baseUrl}}/metadata/relationships/:owner",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"metadata",
												"relationships",
												":owner"
											],
											"variable": [
												{
													"key": "owner"
												}
											]
										}
									},
									"status": "Unauthorized",
									"code": 401,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n \"code\": 1519430,\n \"message\": \"enim\",\n \"details\": \"do\"\n}"
								},
								{
									"name": "Forbidden",
									"originalRequest": {
										"method": "POST",
										"header": [],
										"url": {
											"raw": "{{baseUrl}}/metadata/relationships/:owner",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"metadata",
												"relationships",
												":owner"
											],
											"variable": [
												{
													"key": "owner"
												}
											]
										}
									},
									"status": "Forbidden",
									"code": 403,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n \"code\": 1519430,\n \"message\": \"enim\",\n \"details\": \"do\"\n}"
								},
								{
									"name": "Not found",
									"originalRequest": {
										"method": "POST",
										"header": [],
										"url": {
											"raw": "{{baseUrl}}/metadata/relationships/:owner",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"metadata",
												"relationships",
												":owner"
											],
											"variable": [
												{
													"key": "owner"
												}
											]
										}
									},
									"status": "Not Found",
									"code": 404,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n \"code\": 1519430,\n \"message\": \"enim\",\n \"details\": \"do\"\n}"
								},
								{
									"name": "Server error",
									"originalRequest": {
										"method": "POST",
										"header": [],
										"url": {
											"raw": "{{baseUrl}}/metadata/relationships/:owner",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"metadata",
												"relationships",
												":owner"
											],
											"variable": [
												{
													"key": "owner"
												}
											]
										}
									},
									"status": "Internal Server Error",
									"code": 500,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n \"code\": 1519430,\n \"message\": \"enim\",\n \"details\": \"do\"\n}"
								}
							]
						},
						{
							"name": "Deletes a relationship between two catalog resources",
							"request": {
								"auth": {
									"type": "bearer",
									"bearer": [
										{
											"key": "token",
											"value": "{{readWrite}}",
											"type": "string"
										}
									]
								},
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"relationshipType\": \"https://dwec.data.world/v0/related\",\n    \"sourceId\": \"analysis-69c7895c-be9b-411a-800b-ebb83d60dab7\",\n    \"sourceType\": \"ANALYSIS\",\n    \"targetId\": \"businessTerm-fef1ea9f-4cfe-44b3-bd18-31c41531dc4c\",\n    \"targetType\": \"BUSINESS_TERM\"\n}"
								},
								"url": {
									"raw": "{{baseUrl}}/metadata/relationships/:owner/delete",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"metadata",
										"relationships",
										":owner",
										"delete"
									],
									"variable": [
										{
											"key": "owner",
											"value": "{{org}}",
											"description": "(Required) "
										}
									]
								}
							},
							"response": [
								{
									"name": "successful operation",
									"originalRequest": {
										"method": "POST",
										"header": [],
										"url": {
											"raw": "{{baseUrl}}/metadata/relationships/:owner/delete",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"metadata",
												"relationships",
												":owner",
												"delete"
											],
											"variable": [
												{
													"key": "owner"
												}
											]
										}
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n \"activityBatchId\": \"urn:uuid:3d34be0a-e4d9-8958-28ab-1257b172c332\",\n \"timeStarted\": \"velit non paria\",\n \"timeEnded\": \"culpa aute amet\",\n \"activityResults\": [\n  \"eu id\",\n  \"magna id\"\n ]\n}"
								},
								{
									"name": "Bad request",
									"originalRequest": {
										"method": "POST",
										"header": [],
										"url": {
											"raw": "{{baseUrl}}/metadata/relationships/:owner/delete",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"metadata",
												"relationships",
												":owner",
												"delete"
											],
											"variable": [
												{
													"key": "owner"
												}
											]
										}
									},
									"status": "Bad Request",
									"code": 400,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n \"code\": 1519430,\n \"message\": \"enim\",\n \"details\": \"do\"\n}"
								},
								{
									"name": "Unauthorized",
									"originalRequest": {
										"method": "POST",
										"header": [],
										"url": {
											"raw": "{{baseUrl}}/metadata/relationships/:owner/delete",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"metadata",
												"relationships",
												":owner",
												"delete"
											],
											"variable": [
												{
													"key": "owner"
												}
											]
										}
									},
									"status": "Unauthorized",
									"code": 401,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n \"code\": 1519430,\n \"message\": \"enim\",\n \"details\": \"do\"\n}"
								},
								{
									"name": "Forbidden",
									"originalRequest": {
										"method": "POST",
										"header": [],
										"url": {
											"raw": "{{baseUrl}}/metadata/relationships/:owner/delete",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"metadata",
												"relationships",
												":owner",
												"delete"
											],
											"variable": [
												{
													"key": "owner"
												}
											]
										}
									},
									"status": "Forbidden",
									"code": 403,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n \"code\": 1519430,\n \"message\": \"enim\",\n \"details\": \"do\"\n}"
								},
								{
									"name": "Not found",
									"originalRequest": {
										"method": "POST",
										"header": [],
										"url": {
											"raw": "{{baseUrl}}/metadata/relationships/:owner/delete",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"metadata",
												"relationships",
												":owner",
												"delete"
											],
											"variable": [
												{
													"key": "owner"
												}
											]
										}
									},
									"status": "Not Found",
									"code": 404,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n \"code\": 1519430,\n \"message\": \"enim\",\n \"details\": \"do\"\n}"
								},
								{
									"name": "Server error",
									"originalRequest": {
										"method": "POST",
										"header": [],
										"url": {
											"raw": "{{baseUrl}}/metadata/relationships/:owner/delete",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"metadata",
												"relationships",
												":owner",
												"delete"
											],
											"variable": [
												{
													"key": "owner"
												}
											]
										}
									},
									"status": "Internal Server Error",
									"code": 500,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n \"code\": 1519430,\n \"message\": \"enim\",\n \"details\": \"do\"\n}"
								}
							]
						},
						{
							"name": "Get resources that are related to a resource",
							"request": {
								"auth": {
									"type": "bearer",
									"bearer": [
										{
											"key": "token",
											"value": "{{readWrite}}",
											"type": "string"
										}
									]
								},
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"resourceType\": \"ANALYSIS\",\n    \"byResourceTypes\": [\n        \"DATASET\",\n        \"BUSINESS_TERM\"\n    ]\n}"
								},
								"url": {
									"raw": "{{baseUrl}}/metadata/relationships/:owner/resource/:resourceId",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"metadata",
										"relationships",
										":owner",
										"resource",
										":resourceId"
									],
									"query": [
										{
											"key": "limit",
											"value": "adipisicing elit ullamco",
											"disabled": true
										},
										{
											"key": "next",
											"value": "adipisicing elit ullamco",
											"disabled": true
										}
									],
									"variable": [
										{
											"key": "owner",
											"value": "{{org}}",
											"description": "(Required) ID of organization"
										},
										{
											"key": "resourceId",
											"value": "{{analysisid}}",
											"description": "(Required) "
										}
									]
								}
							},
							"response": [
								{
									"name": "successful operation",
									"originalRequest": {
										"method": "POST",
										"header": [],
										"body": {
											"mode": "raw",
											"raw": "{\n    \"resourceType\": \"BUSINESS_TERM\",\n    \"byResourceTypes\": [\n        \"BUSINESS_TERM\",\n        \"DATA_TYPE\"\n    ],\n    \"byRelationTypes\": [\n        \"pariatur in ipsum Lorem\",\n        \"in Duis\"\n    ]\n}"
										},
										"url": {
											"raw": "{{baseUrl}}/metadata/relationships/:owner/resource/:resourceId?limit=adipisicing elit ullamco&next=adipisicing elit ullamco",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"metadata",
												"relationships",
												":owner",
												"resource",
												":resourceId"
											],
											"query": [
												{
													"key": "limit",
													"value": "adipisicing elit ullamco"
												},
												{
													"key": "next",
													"value": "adipisicing elit ullamco"
												}
											],
											"variable": [
												{
													"key": "owner"
												},
												{
													"key": "resourceId"
												}
											]
										}
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n \"count\": 64160876,\n \"records\": [\n  {\n   \"created\": \"1993-11-09T13:04:36.271Z\",\n   \"id\": \"nulla nisi Excepteur non\",\n   \"owner\": \"ipsum\",\n   \"visibility\": \"PRIVATE\",\n   \"title\": \"proident in et officia\",\n   \"category\": \"et Excepteur incididunt ipsum cupidatat\",\n   \"typeLabel\": \"labo\",\n   \"typeIri\": \"cillum ipsum Lorem dolore\",\n   \"rootParentTypeLabel\": \"proident laboris\",\n   \"rootParentTypeIri\": \"adipisicing non nostrud aliqua\",\n   \"table\": {\n    \"owner\": {\n     \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    \"sourceId\": {\n     \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    \"tableId\": {\n     \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    }\n   },\n   \"dataType\": \"non ad\",\n   \"columnIndex\": 69943645,\n   \"description\": \"labore aliquip velit occaecat\",\n   \"encodedIri\": \"amet officia non\",\n   \"summary\": \"cupidatat officia Ut\",\n   \"url\": \"http://LwKGLADeUPzokbPOdKgLPJvqQMh.yerF-YAmoiMQt\",\n   \"updated\": \"2021-10-07T15:26:29.480Z\",\n   \"collections\": [\n    {\n     \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    {\n     \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    }\n   ],\n   \"relationshipTypes\": [\n    \"sed labore enim\",\n    \"culpa mollit veniam\"\n   ],\n   \"tags\": [\n    \"aliquip qui et veniam\",\n    \"ipsum sit proident dolor officia\"\n   ],\n   \"externalUrls\": [\n    \"in Ut incididunt\",\n    \"adipisicing exercitation esse ex\"\n   ],\n   \"assetStatus\": {\n    \"assetStatusLabel\": \"Duis\",\n    \"dispositionLabel\": \"irure am\"\n   },\n   \"properties\": {}\n  },\n  {\n   \"created\": \"1962-07-17T17:38:02.710Z\",\n   \"id\": \"non dolore pariatur sed\",\n   \"owner\": \"ad\",\n   \"visibility\": \"OPEN\",\n   \"title\": \"aute amet elit\",\n   \"category\": \"velit veniam tempor culpa\",\n   \"typeLabel\": \"sunt ad\",\n   \"typeIri\": \"aute eu elit fugiat aliquip\",\n   \"rootParentTypeLabel\": \"enim sed aliquip reprehenderit in\",\n   \"rootParentTypeIri\": \"nulla occaecat consequat dolor aliqua\",\n   \"table\": {\n    \"owner\": {\n     \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    \"sourceId\": {\n     \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    \"tableId\": {\n     \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    }\n   },\n   \"dataType\": \"cillum es\",\n   \"columnIndex\": 60084365,\n   \"description\": \"esse exercitation consequat sint labore\",\n   \"encodedIri\": \"velit adipisicing\",\n   \"summary\": \"consequat cillum exercitation\",\n   \"url\": \"https://PfeGAnyXpIzcJoWFivKhcbfMBgHMUm.wzE6\",\n   \"updated\": \"2000-11-17T06:04:06.390Z\",\n   \"collections\": [\n    {\n     \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    {\n     \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    }\n   ],\n   \"relationshipTypes\": [\n    \"consectetur anim laborum\",\n    \"commodo dolor\"\n   ],\n   \"tags\": [\n    \"in consectetur irure do Excepteur\",\n    \"ad sit\"\n   ],\n   \"externalUrls\": [\n    \"in est occaecat dolor\",\n    \"sed nostrud elit fugiat Ut\"\n   ],\n   \"assetStatus\": {\n    \"assetStatusLabel\": \"ut tempor officia m\",\n    \"dispositionLabel\": \"cupidatat sunt est\"\n   },\n   \"properties\": {}\n  }\n ],\n \"nextPageToken\": \"deserunt Lorem occaecat nostrud\"\n}"
								},
								{
									"name": "Bad request",
									"originalRequest": {
										"method": "POST",
										"header": [],
										"body": {
											"mode": "raw",
											"raw": "{\n    \"resourceType\": \"BUSINESS_TERM\",\n    \"byResourceTypes\": [\n        \"BUSINESS_TERM\",\n        \"DATA_TYPE\"\n    ],\n    \"byRelationTypes\": [\n        \"pariatur in ipsum Lorem\",\n        \"in Duis\"\n    ]\n}"
										},
										"url": {
											"raw": "{{baseUrl}}/metadata/relationships/:owner/resource/:resourceId?limit=adipisicing elit ullamco&next=adipisicing elit ullamco",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"metadata",
												"relationships",
												":owner",
												"resource",
												":resourceId"
											],
											"query": [
												{
													"key": "limit",
													"value": "adipisicing elit ullamco"
												},
												{
													"key": "next",
													"value": "adipisicing elit ullamco"
												}
											],
											"variable": [
												{
													"key": "owner"
												},
												{
													"key": "resourceId"
												}
											]
										}
									},
									"status": "Bad Request",
									"code": 400,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n \"code\": 1519430,\n \"message\": \"enim\",\n \"details\": \"do\"\n}"
								},
								{
									"name": "Unauthorized",
									"originalRequest": {
										"method": "POST",
										"header": [],
										"body": {
											"mode": "raw",
											"raw": "{\n    \"resourceType\": \"BUSINESS_TERM\",\n    \"byResourceTypes\": [\n        \"BUSINESS_TERM\",\n        \"DATA_TYPE\"\n    ],\n    \"byRelationTypes\": [\n        \"pariatur in ipsum Lorem\",\n        \"in Duis\"\n    ]\n}"
										},
										"url": {
											"raw": "{{baseUrl}}/metadata/relationships/:owner/resource/:resourceId?limit=adipisicing elit ullamco&next=adipisicing elit ullamco",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"metadata",
												"relationships",
												":owner",
												"resource",
												":resourceId"
											],
											"query": [
												{
													"key": "limit",
													"value": "adipisicing elit ullamco"
												},
												{
													"key": "next",
													"value": "adipisicing elit ullamco"
												}
											],
											"variable": [
												{
													"key": "owner"
												},
												{
													"key": "resourceId"
												}
											]
										}
									},
									"status": "Unauthorized",
									"code": 401,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n \"code\": 1519430,\n \"message\": \"enim\",\n \"details\": \"do\"\n}"
								},
								{
									"name": "Forbidden",
									"originalRequest": {
										"method": "POST",
										"header": [],
										"body": {
											"mode": "raw",
											"raw": "{\n    \"resourceType\": \"BUSINESS_TERM\",\n    \"byResourceTypes\": [\n        \"BUSINESS_TERM\",\n        \"DATA_TYPE\"\n    ],\n    \"byRelationTypes\": [\n        \"pariatur in ipsum Lorem\",\n        \"in Duis\"\n    ]\n}"
										},
										"url": {
											"raw": "{{baseUrl}}/metadata/relationships/:owner/resource/:resourceId?limit=adipisicing elit ullamco&next=adipisicing elit ullamco",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"metadata",
												"relationships",
												":owner",
												"resource",
												":resourceId"
											],
											"query": [
												{
													"key": "limit",
													"value": "adipisicing elit ullamco"
												},
												{
													"key": "next",
													"value": "adipisicing elit ullamco"
												}
											],
											"variable": [
												{
													"key": "owner"
												},
												{
													"key": "resourceId"
												}
											]
										}
									},
									"status": "Forbidden",
									"code": 403,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n \"code\": 1519430,\n \"message\": \"enim\",\n \"details\": \"do\"\n}"
								},
								{
									"name": "Not found",
									"originalRequest": {
										"method": "POST",
										"header": [],
										"body": {
											"mode": "raw",
											"raw": "{\n    \"resourceType\": \"BUSINESS_TERM\",\n    \"byResourceTypes\": [\n        \"BUSINESS_TERM\",\n        \"DATA_TYPE\"\n    ],\n    \"byRelationTypes\": [\n        \"pariatur in ipsum Lorem\",\n        \"in Duis\"\n    ]\n}"
										},
										"url": {
											"raw": "{{baseUrl}}/metadata/relationships/:owner/resource/:resourceId?limit=adipisicing elit ullamco&next=adipisicing elit ullamco",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"metadata",
												"relationships",
												":owner",
												"resource",
												":resourceId"
											],
											"query": [
												{
													"key": "limit",
													"value": "adipisicing elit ullamco"
												},
												{
													"key": "next",
													"value": "adipisicing elit ullamco"
												}
											],
											"variable": [
												{
													"key": "owner"
												},
												{
													"key": "resourceId"
												}
											]
										}
									},
									"status": "Not Found",
									"code": 404,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n \"code\": 1519430,\n \"message\": \"enim\",\n \"details\": \"do\"\n}"
								},
								{
									"name": "Server error",
									"originalRequest": {
										"method": "POST",
										"header": [],
										"body": {
											"mode": "raw",
											"raw": "{\n    \"resourceType\": \"BUSINESS_TERM\",\n    \"byResourceTypes\": [\n        \"BUSINESS_TERM\",\n        \"DATA_TYPE\"\n    ],\n    \"byRelationTypes\": [\n        \"pariatur in ipsum Lorem\",\n        \"in Duis\"\n    ]\n}"
										},
										"url": {
											"raw": "{{baseUrl}}/metadata/relationships/:owner/resource/:resourceId?limit=adipisicing elit ullamco&next=adipisicing elit ullamco",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"metadata",
												"relationships",
												":owner",
												"resource",
												":resourceId"
											],
											"query": [
												{
													"key": "limit",
													"value": "adipisicing elit ullamco"
												},
												{
													"key": "next",
													"value": "adipisicing elit ullamco"
												}
											],
											"variable": [
												{
													"key": "owner"
												},
												{
													"key": "resourceId"
												}
											]
										}
									},
									"status": "Internal Server Error",
									"code": 500,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n \"code\": 1519430,\n \"message\": \"enim\",\n \"details\": \"do\"\n}"
								}
							]
						},
						{
							"name": "Get resources that are related to a table",
							"request": {
								"auth": {
									"type": "bearer",
									"bearer": [
										{
											"key": "token",
											"value": "{{readWrite}}",
											"type": "string"
										}
									]
								},
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"byResourceTypes\": [\n        \"CATALOG\",\n        \"ANALYSIS\"\n    ],\n    \"byRelationTypes\": [\n        \"commodo\",\n        \"labore proident ut\"\n    ]\n}"
								},
								"url": {
									"raw": "{{baseUrl}}/metadata/relationships/:owner/table/:sourceId/:tableId",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"metadata",
										"relationships",
										":owner",
										"table",
										":sourceId",
										":tableId"
									],
									"query": [
										{
											"key": "limit",
											"value": "adipisicing elit ullamco",
											"disabled": true
										},
										{
											"key": "next",
											"value": "adipisicing elit ullamco",
											"disabled": true
										}
									],
									"variable": [
										{
											"key": "owner",
											"value": "{{org}}",
											"description": "(Required) ID of organization"
										},
										{
											"key": "sourceId",
											"value": "{{sourceid}}",
											"description": "(Required) ID of dataset that the table is in"
										},
										{
											"key": "tableId",
											"value": "{{tableid}}",
											"description": "(Required) "
										}
									]
								}
							},
							"response": [
								{
									"name": "successful operation",
									"originalRequest": {
										"method": "POST",
										"header": [],
										"body": {
											"mode": "raw",
											"raw": "{\n    \"byResourceTypes\": [\n        \"DATA_TYPE\",\n        \"CATALOG\"\n    ],\n    \"byRelationTypes\": [\n        \"ex Duis laborum magna\",\n        \"in minim voluptate cillum\"\n    ]\n}"
										},
										"url": {
											"raw": "{{baseUrl}}/metadata/relationships/:owner/table/:sourceId/:tableId?limit=adipisicing elit ullamco&next=adipisicing elit ullamco",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"metadata",
												"relationships",
												":owner",
												"table",
												":sourceId",
												":tableId"
											],
											"query": [
												{
													"key": "limit",
													"value": "adipisicing elit ullamco"
												},
												{
													"key": "next",
													"value": "adipisicing elit ullamco"
												}
											],
											"variable": [
												{
													"key": "owner"
												},
												{
													"key": "sourceId"
												},
												{
													"key": "tableId"
												}
											]
										}
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n \"count\": 64160876,\n \"records\": [\n  {\n   \"created\": \"1993-11-09T13:04:36.271Z\",\n   \"id\": \"nulla nisi Excepteur non\",\n   \"owner\": \"ipsum\",\n   \"visibility\": \"PRIVATE\",\n   \"title\": \"proident in et officia\",\n   \"category\": \"et Excepteur incididunt ipsum cupidatat\",\n   \"typeLabel\": \"labo\",\n   \"typeIri\": \"cillum ipsum Lorem dolore\",\n   \"rootParentTypeLabel\": \"proident laboris\",\n   \"rootParentTypeIri\": \"adipisicing non nostrud aliqua\",\n   \"table\": {\n    \"owner\": {\n     \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    \"sourceId\": {\n     \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    \"tableId\": {\n     \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    }\n   },\n   \"dataType\": \"non ad\",\n   \"columnIndex\": 69943645,\n   \"description\": \"labore aliquip velit occaecat\",\n   \"encodedIri\": \"amet officia non\",\n   \"summary\": \"cupidatat officia Ut\",\n   \"url\": \"http://LwKGLADeUPzokbPOdKgLPJvqQMh.yerF-YAmoiMQt\",\n   \"updated\": \"2021-10-07T15:26:29.480Z\",\n   \"collections\": [\n    {\n     \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    {\n     \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    }\n   ],\n   \"relationshipTypes\": [\n    \"sed labore enim\",\n    \"culpa mollit veniam\"\n   ],\n   \"tags\": [\n    \"aliquip qui et veniam\",\n    \"ipsum sit proident dolor officia\"\n   ],\n   \"externalUrls\": [\n    \"in Ut incididunt\",\n    \"adipisicing exercitation esse ex\"\n   ],\n   \"assetStatus\": {\n    \"assetStatusLabel\": \"Duis\",\n    \"dispositionLabel\": \"irure am\"\n   },\n   \"properties\": {}\n  },\n  {\n   \"created\": \"1962-07-17T17:38:02.710Z\",\n   \"id\": \"non dolore pariatur sed\",\n   \"owner\": \"ad\",\n   \"visibility\": \"OPEN\",\n   \"title\": \"aute amet elit\",\n   \"category\": \"velit veniam tempor culpa\",\n   \"typeLabel\": \"sunt ad\",\n   \"typeIri\": \"aute eu elit fugiat aliquip\",\n   \"rootParentTypeLabel\": \"enim sed aliquip reprehenderit in\",\n   \"rootParentTypeIri\": \"nulla occaecat consequat dolor aliqua\",\n   \"table\": {\n    \"owner\": {\n     \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    \"sourceId\": {\n     \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    \"tableId\": {\n     \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    }\n   },\n   \"dataType\": \"cillum es\",\n   \"columnIndex\": 60084365,\n   \"description\": \"esse exercitation consequat sint labore\",\n   \"encodedIri\": \"velit adipisicing\",\n   \"summary\": \"consequat cillum exercitation\",\n   \"url\": \"https://PfeGAnyXpIzcJoWFivKhcbfMBgHMUm.wzE6\",\n   \"updated\": \"2000-11-17T06:04:06.390Z\",\n   \"collections\": [\n    {\n     \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    {\n     \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    }\n   ],\n   \"relationshipTypes\": [\n    \"consectetur anim laborum\",\n    \"commodo dolor\"\n   ],\n   \"tags\": [\n    \"in consectetur irure do Excepteur\",\n    \"ad sit\"\n   ],\n   \"externalUrls\": [\n    \"in est occaecat dolor\",\n    \"sed nostrud elit fugiat Ut\"\n   ],\n   \"assetStatus\": {\n    \"assetStatusLabel\": \"ut tempor officia m\",\n    \"dispositionLabel\": \"cupidatat sunt est\"\n   },\n   \"properties\": {}\n  }\n ],\n \"nextPageToken\": \"deserunt Lorem occaecat nostrud\"\n}"
								},
								{
									"name": "Bad request",
									"originalRequest": {
										"method": "POST",
										"header": [],
										"body": {
											"mode": "raw",
											"raw": "{\n    \"byResourceTypes\": [\n        \"DATA_TYPE\",\n        \"CATALOG\"\n    ],\n    \"byRelationTypes\": [\n        \"ex Duis laborum magna\",\n        \"in minim voluptate cillum\"\n    ]\n}"
										},
										"url": {
											"raw": "{{baseUrl}}/metadata/relationships/:owner/table/:sourceId/:tableId?limit=adipisicing elit ullamco&next=adipisicing elit ullamco",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"metadata",
												"relationships",
												":owner",
												"table",
												":sourceId",
												":tableId"
											],
											"query": [
												{
													"key": "limit",
													"value": "adipisicing elit ullamco"
												},
												{
													"key": "next",
													"value": "adipisicing elit ullamco"
												}
											],
											"variable": [
												{
													"key": "owner"
												},
												{
													"key": "sourceId"
												},
												{
													"key": "tableId"
												}
											]
										}
									},
									"status": "Bad Request",
									"code": 400,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n \"code\": 1519430,\n \"message\": \"enim\",\n \"details\": \"do\"\n}"
								},
								{
									"name": "Unauthorized",
									"originalRequest": {
										"method": "POST",
										"header": [],
										"body": {
											"mode": "raw",
											"raw": "{\n    \"byResourceTypes\": [\n        \"DATA_TYPE\",\n        \"CATALOG\"\n    ],\n    \"byRelationTypes\": [\n        \"ex Duis laborum magna\",\n        \"in minim voluptate cillum\"\n    ]\n}"
										},
										"url": {
											"raw": "{{baseUrl}}/metadata/relationships/:owner/table/:sourceId/:tableId?limit=adipisicing elit ullamco&next=adipisicing elit ullamco",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"metadata",
												"relationships",
												":owner",
												"table",
												":sourceId",
												":tableId"
											],
											"query": [
												{
													"key": "limit",
													"value": "adipisicing elit ullamco"
												},
												{
													"key": "next",
													"value": "adipisicing elit ullamco"
												}
											],
											"variable": [
												{
													"key": "owner"
												},
												{
													"key": "sourceId"
												},
												{
													"key": "tableId"
												}
											]
										}
									},
									"status": "Unauthorized",
									"code": 401,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n \"code\": 1519430,\n \"message\": \"enim\",\n \"details\": \"do\"\n}"
								},
								{
									"name": "Forbidden",
									"originalRequest": {
										"method": "POST",
										"header": [],
										"body": {
											"mode": "raw",
											"raw": "{\n    \"byResourceTypes\": [\n        \"DATA_TYPE\",\n        \"CATALOG\"\n    ],\n    \"byRelationTypes\": [\n        \"ex Duis laborum magna\",\n        \"in minim voluptate cillum\"\n    ]\n}"
										},
										"url": {
											"raw": "{{baseUrl}}/metadata/relationships/:owner/table/:sourceId/:tableId?limit=adipisicing elit ullamco&next=adipisicing elit ullamco",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"metadata",
												"relationships",
												":owner",
												"table",
												":sourceId",
												":tableId"
											],
											"query": [
												{
													"key": "limit",
													"value": "adipisicing elit ullamco"
												},
												{
													"key": "next",
													"value": "adipisicing elit ullamco"
												}
											],
											"variable": [
												{
													"key": "owner"
												},
												{
													"key": "sourceId"
												},
												{
													"key": "tableId"
												}
											]
										}
									},
									"status": "Forbidden",
									"code": 403,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n \"code\": 1519430,\n \"message\": \"enim\",\n \"details\": \"do\"\n}"
								},
								{
									"name": "Not found",
									"originalRequest": {
										"method": "POST",
										"header": [],
										"body": {
											"mode": "raw",
											"raw": "{\n    \"byResourceTypes\": [\n        \"DATA_TYPE\",\n        \"CATALOG\"\n    ],\n    \"byRelationTypes\": [\n        \"ex Duis laborum magna\",\n        \"in minim voluptate cillum\"\n    ]\n}"
										},
										"url": {
											"raw": "{{baseUrl}}/metadata/relationships/:owner/table/:sourceId/:tableId?limit=adipisicing elit ullamco&next=adipisicing elit ullamco",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"metadata",
												"relationships",
												":owner",
												"table",
												":sourceId",
												":tableId"
											],
											"query": [
												{
													"key": "limit",
													"value": "adipisicing elit ullamco"
												},
												{
													"key": "next",
													"value": "adipisicing elit ullamco"
												}
											],
											"variable": [
												{
													"key": "owner"
												},
												{
													"key": "sourceId"
												},
												{
													"key": "tableId"
												}
											]
										}
									},
									"status": "Not Found",
									"code": 404,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n \"code\": 1519430,\n \"message\": \"enim\",\n \"details\": \"do\"\n}"
								},
								{
									"name": "Server error",
									"originalRequest": {
										"method": "POST",
										"header": [],
										"body": {
											"mode": "raw",
											"raw": "{\n    \"byResourceTypes\": [\n        \"DATA_TYPE\",\n        \"CATALOG\"\n    ],\n    \"byRelationTypes\": [\n        \"ex Duis laborum magna\",\n        \"in minim voluptate cillum\"\n    ]\n}"
										},
										"url": {
											"raw": "{{baseUrl}}/metadata/relationships/:owner/table/:sourceId/:tableId?limit=adipisicing elit ullamco&next=adipisicing elit ullamco",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"metadata",
												"relationships",
												":owner",
												"table",
												":sourceId",
												":tableId"
											],
											"query": [
												{
													"key": "limit",
													"value": "adipisicing elit ullamco"
												},
												{
													"key": "next",
													"value": "adipisicing elit ullamco"
												}
											],
											"variable": [
												{
													"key": "owner"
												},
												{
													"key": "sourceId"
												},
												{
													"key": "tableId"
												}
											]
										}
									},
									"status": "Internal Server Error",
									"code": 500,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n \"code\": 1519430,\n \"message\": \"enim\",\n \"details\": \"do\"\n}"
								}
							]
						}
					]
				}
			]
		},
		{
			"name": "partners/stitchdata/uploads/{account}",
			"item": [
				{
					"name": "{integration Name}",
					"item": [
						{
							"name": "Create a target dataset if it doesn't exist already.",
							"request": {
								"auth": {
									"type": "oauth2"
								},
								"method": "POST",
								"header": [],
								"url": {
									"raw": "{{baseUrl}}/partners/stitchdata/uploads/:account/:integrationName",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"partners",
										"stitchdata",
										"uploads",
										":account",
										":integrationName"
									],
									"variable": [
										{
											"key": "account",
											"value": "adipisicing elit ullamco",
											"description": "(Required) "
										},
										{
											"key": "integrationName",
											"value": "adipisicing elit ullamco",
											"description": "(Required) "
										}
									]
								}
							},
							"response": [
								{
									"name": "successful operation",
									"originalRequest": {
										"method": "POST",
										"header": [
											{
												"description": "Added as a part of security scheme: oauth2",
												"key": "Authorization",
												"value": "<token>"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/partners/stitchdata/uploads/:account/:integrationName",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"partners",
												"stitchdata",
												"uploads",
												":account",
												":integrationName"
											],
											"variable": [
												{
													"key": "account"
												},
												{
													"key": "integrationName"
												}
											]
										}
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n \"id\": \"elit commodo reprehenderit sit sint\",\n \"owner\": \"in cillum Excepteur\"\n}"
								}
							]
						},
						{
							"name": "Notify data.world that new files have been uploaded to S3.",
							"request": {
								"auth": {
									"type": "oauth2"
								},
								"method": "POST",
								"header": [],
								"url": {
									"raw": "{{baseUrl}}/partners/stitchdata/uploads/:account/:integrationName/manifest",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"partners",
										"stitchdata",
										"uploads",
										":account",
										":integrationName",
										"manifest"
									],
									"variable": [
										{
											"key": "account",
											"value": "adipisicing elit ullamco",
											"description": "(Required) "
										},
										{
											"key": "integrationName",
											"value": "adipisicing elit ullamco",
											"description": "(Required) "
										}
									]
								}
							},
							"response": [
								{
									"name": "successful operation",
									"originalRequest": {
										"method": "POST",
										"header": [
											{
												"description": "Added as a part of security scheme: oauth2",
												"key": "Authorization",
												"value": "<token>"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/partners/stitchdata/uploads/:account/:integrationName/manifest",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"partners",
												"stitchdata",
												"uploads",
												":account",
												":integrationName",
												"manifest"
											],
											"variable": [
												{
													"key": "account"
												},
												{
													"key": "integrationName"
												}
											]
										}
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n \"id\": \"elit commodo reprehenderit sit sint\",\n \"owner\": \"in cillum Excepteur\"\n}"
								}
							]
						}
					]
				},
				{
					"name": "Check whether user credentials allow write access to the specified data.world account.",
					"request": {
						"auth": {
							"type": "oauth2"
						},
						"method": "HEAD",
						"header": [],
						"url": {
							"raw": "{{baseUrl}}/partners/stitchdata/uploads/:account",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"partners",
								"stitchdata",
								"uploads",
								":account"
							],
							"variable": [
								{
									"key": "account",
									"value": "adipisicing elit ullamco",
									"description": "(Required) "
								}
							]
						}
					},
					"response": [
						{
							"name": "successful operation",
							"originalRequest": {
								"method": "HEAD",
								"header": [
									{
										"description": "Added as a part of security scheme: oauth2",
										"key": "Authorization",
										"value": "<token>"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/partners/stitchdata/uploads/:account",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"partners",
										"stitchdata",
										"uploads",
										":account"
									],
									"variable": [
										{
											"key": "account"
										}
									]
								}
							},
							"status": "Internal Server Error",
							"code": 500,
							"_postman_previewlanguage": "text",
							"header": [
								{
									"key": "Content-Type",
									"value": "text/plain"
								}
							],
							"cookie": [],
							"body": ""
						}
					]
				}
			]
		},
		{
			"name": "projects/{owner}",
			"item": [
				{
					"name": "{id}",
					"item": [
						{
							"name": "linked Datasets/{linked Dataset Owner}/{linked Dataset Id}",
							"item": [
								{
									"name": "Link a dataset to a project.",
									"request": {
										"auth": {
											"type": "bearer",
											"bearer": [
												{
													"key": "token",
													"value": "{{readWrite}}",
													"type": "string"
												}
											]
										},
										"method": "PUT",
										"header": [],
										"url": {
											"raw": "{{baseUrl}}/projects/:owner/:id/linkedDatasets/:linkedDatasetOwner/:linkedDatasetId",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"projects",
												":owner",
												":id",
												"linkedDatasets",
												":linkedDatasetOwner",
												":linkedDatasetId"
											],
											"variable": [
												{
													"key": "owner",
													"value": "{{org}}",
													"description": "(Required) "
												},
												{
													"key": "id",
													"value": "{{projectid}}",
													"description": "(Required) "
												},
												{
													"key": "linkedDatasetOwner",
													"value": "{{owner}}",
													"description": "(Required) "
												},
												{
													"key": "linkedDatasetId",
													"value": "{{datasetid}}",
													"description": "(Required) "
												}
											]
										}
									},
									"response": [
										{
											"name": "Dataset linked successfully.",
											"originalRequest": {
												"method": "PUT",
												"header": [
													{
														"description": "Added as a part of security scheme: oauth2",
														"key": "Authorization",
														"value": "<token>"
													}
												],
												"url": {
													"raw": "{{baseUrl}}/projects/:owner/:id/linkedDatasets/:linkedDatasetOwner/:linkedDatasetId",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"projects",
														":owner",
														":id",
														"linkedDatasets",
														":linkedDatasetOwner",
														":linkedDatasetId"
													],
													"variable": [
														{
															"key": "owner"
														},
														{
															"key": "id"
														},
														{
															"key": "linkedDatasetOwner"
														},
														{
															"key": "linkedDatasetId"
														}
													]
												}
											},
											"status": "OK",
											"code": 200,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"body": "{\n \"message\": \"voluptate culpa nulla esse\"\n}"
										},
										{
											"name": "Bad request",
											"originalRequest": {
												"method": "PUT",
												"header": [
													{
														"description": "Added as a part of security scheme: oauth2",
														"key": "Authorization",
														"value": "<token>"
													}
												],
												"url": {
													"raw": "{{baseUrl}}/projects/:owner/:id/linkedDatasets/:linkedDatasetOwner/:linkedDatasetId",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"projects",
														":owner",
														":id",
														"linkedDatasets",
														":linkedDatasetOwner",
														":linkedDatasetId"
													],
													"variable": [
														{
															"key": "owner"
														},
														{
															"key": "id"
														},
														{
															"key": "linkedDatasetOwner"
														},
														{
															"key": "linkedDatasetId"
														}
													]
												}
											},
											"status": "Bad Request",
											"code": 400,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"body": "{\n \"code\": 1519430,\n \"message\": \"enim\",\n \"details\": \"do\"\n}"
										},
										{
											"name": "Unauthorized",
											"originalRequest": {
												"method": "PUT",
												"header": [
													{
														"description": "Added as a part of security scheme: oauth2",
														"key": "Authorization",
														"value": "<token>"
													}
												],
												"url": {
													"raw": "{{baseUrl}}/projects/:owner/:id/linkedDatasets/:linkedDatasetOwner/:linkedDatasetId",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"projects",
														":owner",
														":id",
														"linkedDatasets",
														":linkedDatasetOwner",
														":linkedDatasetId"
													],
													"variable": [
														{
															"key": "owner"
														},
														{
															"key": "id"
														},
														{
															"key": "linkedDatasetOwner"
														},
														{
															"key": "linkedDatasetId"
														}
													]
												}
											},
											"status": "Unauthorized",
											"code": 401,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"body": "{\n \"code\": 1519430,\n \"message\": \"enim\",\n \"details\": \"do\"\n}"
										},
										{
											"name": "Forbidden",
											"originalRequest": {
												"method": "PUT",
												"header": [
													{
														"description": "Added as a part of security scheme: oauth2",
														"key": "Authorization",
														"value": "<token>"
													}
												],
												"url": {
													"raw": "{{baseUrl}}/projects/:owner/:id/linkedDatasets/:linkedDatasetOwner/:linkedDatasetId",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"projects",
														":owner",
														":id",
														"linkedDatasets",
														":linkedDatasetOwner",
														":linkedDatasetId"
													],
													"variable": [
														{
															"key": "owner"
														},
														{
															"key": "id"
														},
														{
															"key": "linkedDatasetOwner"
														},
														{
															"key": "linkedDatasetId"
														}
													]
												}
											},
											"status": "Forbidden",
											"code": 403,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"body": "{\n \"code\": 1519430,\n \"message\": \"enim\",\n \"details\": \"do\"\n}"
										},
										{
											"name": "Not found",
											"originalRequest": {
												"method": "PUT",
												"header": [
													{
														"description": "Added as a part of security scheme: oauth2",
														"key": "Authorization",
														"value": "<token>"
													}
												],
												"url": {
													"raw": "{{baseUrl}}/projects/:owner/:id/linkedDatasets/:linkedDatasetOwner/:linkedDatasetId",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"projects",
														":owner",
														":id",
														"linkedDatasets",
														":linkedDatasetOwner",
														":linkedDatasetId"
													],
													"variable": [
														{
															"key": "owner"
														},
														{
															"key": "id"
														},
														{
															"key": "linkedDatasetOwner"
														},
														{
															"key": "linkedDatasetId"
														}
													]
												}
											},
											"status": "Not Found",
											"code": 404,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"body": "{\n \"code\": 1519430,\n \"message\": \"enim\",\n \"details\": \"do\"\n}"
										},
										{
											"name": "Server error",
											"originalRequest": {
												"method": "PUT",
												"header": [
													{
														"description": "Added as a part of security scheme: oauth2",
														"key": "Authorization",
														"value": "<token>"
													}
												],
												"url": {
													"raw": "{{baseUrl}}/projects/:owner/:id/linkedDatasets/:linkedDatasetOwner/:linkedDatasetId",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"projects",
														":owner",
														":id",
														"linkedDatasets",
														":linkedDatasetOwner",
														":linkedDatasetId"
													],
													"variable": [
														{
															"key": "owner"
														},
														{
															"key": "id"
														},
														{
															"key": "linkedDatasetOwner"
														},
														{
															"key": "linkedDatasetId"
														}
													]
												}
											},
											"status": "Internal Server Error",
											"code": 500,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"body": "{\n \"code\": 1519430,\n \"message\": \"enim\",\n \"details\": \"do\"\n}"
										}
									]
								},
								{
									"name": "Remove a linked dataset from a project.",
									"request": {
										"auth": {
											"type": "bearer",
											"bearer": [
												{
													"key": "token",
													"value": "{{readWrite}}",
													"type": "string"
												}
											]
										},
										"method": "DELETE",
										"header": [],
										"url": {
											"raw": "{{baseUrl}}/projects/:owner/:id/linkedDatasets/:linkedDatasetOwner/:linkedDatasetId",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"projects",
												":owner",
												":id",
												"linkedDatasets",
												":linkedDatasetOwner",
												":linkedDatasetId"
											],
											"variable": [
												{
													"key": "owner",
													"value": "{{org}}",
													"description": "(Required) "
												},
												{
													"key": "id",
													"value": "{{projectid}}",
													"description": "(Required) "
												},
												{
													"key": "linkedDatasetOwner",
													"value": "{{owner}}",
													"description": "(Required) "
												},
												{
													"key": "linkedDatasetId",
													"value": "{{datasetid}}",
													"description": "(Required) "
												}
											]
										}
									},
									"response": [
										{
											"name": "Dataset linked successfully.",
											"originalRequest": {
												"method": "DELETE",
												"header": [
													{
														"description": "Added as a part of security scheme: oauth2",
														"key": "Authorization",
														"value": "<token>"
													}
												],
												"url": {
													"raw": "{{baseUrl}}/projects/:owner/:id/linkedDatasets/:linkedDatasetOwner/:linkedDatasetId",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"projects",
														":owner",
														":id",
														"linkedDatasets",
														":linkedDatasetOwner",
														":linkedDatasetId"
													],
													"variable": [
														{
															"key": "owner"
														},
														{
															"key": "id"
														},
														{
															"key": "linkedDatasetOwner"
														},
														{
															"key": "linkedDatasetId"
														}
													]
												}
											},
											"status": "OK",
											"code": 200,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"body": "{\n \"message\": \"voluptate culpa nulla esse\"\n}"
										},
										{
											"name": "Bad request",
											"originalRequest": {
												"method": "DELETE",
												"header": [
													{
														"description": "Added as a part of security scheme: oauth2",
														"key": "Authorization",
														"value": "<token>"
													}
												],
												"url": {
													"raw": "{{baseUrl}}/projects/:owner/:id/linkedDatasets/:linkedDatasetOwner/:linkedDatasetId",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"projects",
														":owner",
														":id",
														"linkedDatasets",
														":linkedDatasetOwner",
														":linkedDatasetId"
													],
													"variable": [
														{
															"key": "owner"
														},
														{
															"key": "id"
														},
														{
															"key": "linkedDatasetOwner"
														},
														{
															"key": "linkedDatasetId"
														}
													]
												}
											},
											"status": "Bad Request",
											"code": 400,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"body": "{\n \"code\": 1519430,\n \"message\": \"enim\",\n \"details\": \"do\"\n}"
										},
										{
											"name": "Unauthorized",
											"originalRequest": {
												"method": "DELETE",
												"header": [
													{
														"description": "Added as a part of security scheme: oauth2",
														"key": "Authorization",
														"value": "<token>"
													}
												],
												"url": {
													"raw": "{{baseUrl}}/projects/:owner/:id/linkedDatasets/:linkedDatasetOwner/:linkedDatasetId",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"projects",
														":owner",
														":id",
														"linkedDatasets",
														":linkedDatasetOwner",
														":linkedDatasetId"
													],
													"variable": [
														{
															"key": "owner"
														},
														{
															"key": "id"
														},
														{
															"key": "linkedDatasetOwner"
														},
														{
															"key": "linkedDatasetId"
														}
													]
												}
											},
											"status": "Unauthorized",
											"code": 401,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"body": "{\n \"code\": 1519430,\n \"message\": \"enim\",\n \"details\": \"do\"\n}"
										},
										{
											"name": "Forbidden",
											"originalRequest": {
												"method": "DELETE",
												"header": [
													{
														"description": "Added as a part of security scheme: oauth2",
														"key": "Authorization",
														"value": "<token>"
													}
												],
												"url": {
													"raw": "{{baseUrl}}/projects/:owner/:id/linkedDatasets/:linkedDatasetOwner/:linkedDatasetId",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"projects",
														":owner",
														":id",
														"linkedDatasets",
														":linkedDatasetOwner",
														":linkedDatasetId"
													],
													"variable": [
														{
															"key": "owner"
														},
														{
															"key": "id"
														},
														{
															"key": "linkedDatasetOwner"
														},
														{
															"key": "linkedDatasetId"
														}
													]
												}
											},
											"status": "Forbidden",
											"code": 403,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"body": "{\n \"code\": 1519430,\n \"message\": \"enim\",\n \"details\": \"do\"\n}"
										},
										{
											"name": "Not found",
											"originalRequest": {
												"method": "DELETE",
												"header": [
													{
														"description": "Added as a part of security scheme: oauth2",
														"key": "Authorization",
														"value": "<token>"
													}
												],
												"url": {
													"raw": "{{baseUrl}}/projects/:owner/:id/linkedDatasets/:linkedDatasetOwner/:linkedDatasetId",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"projects",
														":owner",
														":id",
														"linkedDatasets",
														":linkedDatasetOwner",
														":linkedDatasetId"
													],
													"variable": [
														{
															"key": "owner"
														},
														{
															"key": "id"
														},
														{
															"key": "linkedDatasetOwner"
														},
														{
															"key": "linkedDatasetId"
														}
													]
												}
											},
											"status": "Not Found",
											"code": 404,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"body": "{\n \"code\": 1519430,\n \"message\": \"enim\",\n \"details\": \"do\"\n}"
										},
										{
											"name": "Server error",
											"originalRequest": {
												"method": "DELETE",
												"header": [
													{
														"description": "Added as a part of security scheme: oauth2",
														"key": "Authorization",
														"value": "<token>"
													}
												],
												"url": {
													"raw": "{{baseUrl}}/projects/:owner/:id/linkedDatasets/:linkedDatasetOwner/:linkedDatasetId",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"projects",
														":owner",
														":id",
														"linkedDatasets",
														":linkedDatasetOwner",
														":linkedDatasetId"
													],
													"variable": [
														{
															"key": "owner"
														},
														{
															"key": "id"
														},
														{
															"key": "linkedDatasetOwner"
														},
														{
															"key": "linkedDatasetId"
														}
													]
												}
											},
											"status": "Internal Server Error",
											"code": 500,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"body": "{\n \"code\": 1519430,\n \"message\": \"enim\",\n \"details\": \"do\"\n}"
										}
									]
								}
							]
						},
						{
							"name": "queries",
							"item": [
								{
									"name": "{query Id}",
									"item": [
										{
											"name": "Update a saved query for a project",
											"request": {
												"auth": {
													"type": "bearer",
													"bearer": [
														{
															"key": "token",
															"value": "{{readWrite}}",
															"type": "string"
														}
													]
												},
												"method": "PUT",
												"header": [
													{
														"key": "Content-Type",
														"value": "application/json"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\n    \"content\": \"select first_name, last_name from 50_rows\",\n    \"name\": \"firstname\",\n    \"published\": true\n}"
												},
												"url": {
													"raw": "{{baseUrl}}/projects/:owner/:id/queries/:queryId",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"projects",
														":owner",
														":id",
														"queries",
														":queryId"
													],
													"variable": [
														{
															"key": "owner",
															"value": "{{org}}",
															"description": "(Required) "
														},
														{
															"key": "id",
															"value": "{{projectid}}",
															"description": "(Required) "
														},
														{
															"key": "queryId",
															"value": "{{projectQueryid}}",
															"description": "(Required) "
														}
													]
												}
											},
											"response": [
												{
													"name": "Successfully updated saved query.",
													"originalRequest": {
														"method": "PUT",
														"header": [
															{
																"description": "Added as a part of security scheme: oauth2",
																"key": "Authorization",
																"value": "<token>"
															}
														],
														"url": {
															"raw": "{{baseUrl}}/projects/:owner/:id/queries/:queryId",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"projects",
																":owner",
																":id",
																"queries",
																":queryId"
															],
															"variable": [
																{
																	"key": "owner"
																},
																{
																	"key": "id"
																},
																{
																	"key": "queryId"
																}
															]
														}
													},
													"status": "OK",
													"code": 200,
													"_postman_previewlanguage": "json",
													"header": [
														{
															"key": "Content-Type",
															"value": "application/json"
														}
													],
													"cookie": [],
													"body": "{\n \"id\": \"sint offi\",\n \"owner\": \"voluptate\",\n \"language\": \"SPARQL\",\n \"name\": \"ex anim in\",\n \"body\": \"consectetur\",\n \"version\": \"sed reprehenderit veniam commodo aliqua\",\n \"created\": \"aliqua mollit\",\n \"updated\": \"aliquip aliqua do irure eu\",\n \"parameters\": {}\n}"
												},
												{
													"name": "Bad request",
													"originalRequest": {
														"method": "PUT",
														"header": [
															{
																"description": "Added as a part of security scheme: oauth2",
																"key": "Authorization",
																"value": "<token>"
															}
														],
														"url": {
															"raw": "{{baseUrl}}/projects/:owner/:id/queries/:queryId",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"projects",
																":owner",
																":id",
																"queries",
																":queryId"
															],
															"variable": [
																{
																	"key": "owner"
																},
																{
																	"key": "id"
																},
																{
																	"key": "queryId"
																}
															]
														}
													},
													"status": "Bad Request",
													"code": 400,
													"_postman_previewlanguage": "json",
													"header": [
														{
															"key": "Content-Type",
															"value": "application/json"
														}
													],
													"cookie": [],
													"body": "{\n \"code\": 1519430,\n \"message\": \"enim\",\n \"details\": \"do\"\n}"
												},
												{
													"name": "Unauthorized",
													"originalRequest": {
														"method": "PUT",
														"header": [
															{
																"description": "Added as a part of security scheme: oauth2",
																"key": "Authorization",
																"value": "<token>"
															}
														],
														"url": {
															"raw": "{{baseUrl}}/projects/:owner/:id/queries/:queryId",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"projects",
																":owner",
																":id",
																"queries",
																":queryId"
															],
															"variable": [
																{
																	"key": "owner"
																},
																{
																	"key": "id"
																},
																{
																	"key": "queryId"
																}
															]
														}
													},
													"status": "Unauthorized",
													"code": 401,
													"_postman_previewlanguage": "json",
													"header": [
														{
															"key": "Content-Type",
															"value": "application/json"
														}
													],
													"cookie": [],
													"body": "{\n \"code\": 1519430,\n \"message\": \"enim\",\n \"details\": \"do\"\n}"
												},
												{
													"name": "Forbidden",
													"originalRequest": {
														"method": "PUT",
														"header": [
															{
																"description": "Added as a part of security scheme: oauth2",
																"key": "Authorization",
																"value": "<token>"
															}
														],
														"url": {
															"raw": "{{baseUrl}}/projects/:owner/:id/queries/:queryId",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"projects",
																":owner",
																":id",
																"queries",
																":queryId"
															],
															"variable": [
																{
																	"key": "owner"
																},
																{
																	"key": "id"
																},
																{
																	"key": "queryId"
																}
															]
														}
													},
													"status": "Forbidden",
													"code": 403,
													"_postman_previewlanguage": "json",
													"header": [
														{
															"key": "Content-Type",
															"value": "application/json"
														}
													],
													"cookie": [],
													"body": "{\n \"code\": 1519430,\n \"message\": \"enim\",\n \"details\": \"do\"\n}"
												},
												{
													"name": "Not found",
													"originalRequest": {
														"method": "PUT",
														"header": [
															{
																"description": "Added as a part of security scheme: oauth2",
																"key": "Authorization",
																"value": "<token>"
															}
														],
														"url": {
															"raw": "{{baseUrl}}/projects/:owner/:id/queries/:queryId",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"projects",
																":owner",
																":id",
																"queries",
																":queryId"
															],
															"variable": [
																{
																	"key": "owner"
																},
																{
																	"key": "id"
																},
																{
																	"key": "queryId"
																}
															]
														}
													},
													"status": "Not Found",
													"code": 404,
													"_postman_previewlanguage": "json",
													"header": [
														{
															"key": "Content-Type",
															"value": "application/json"
														}
													],
													"cookie": [],
													"body": "{\n \"code\": 1519430,\n \"message\": \"enim\",\n \"details\": \"do\"\n}"
												},
												{
													"name": "Server error",
													"originalRequest": {
														"method": "PUT",
														"header": [
															{
																"description": "Added as a part of security scheme: oauth2",
																"key": "Authorization",
																"value": "<token>"
															}
														],
														"url": {
															"raw": "{{baseUrl}}/projects/:owner/:id/queries/:queryId",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"projects",
																":owner",
																":id",
																"queries",
																":queryId"
															],
															"variable": [
																{
																	"key": "owner"
																},
																{
																	"key": "id"
																},
																{
																	"key": "queryId"
																}
															]
														}
													},
													"status": "Internal Server Error",
													"code": 500,
													"_postman_previewlanguage": "json",
													"header": [
														{
															"key": "Content-Type",
															"value": "application/json"
														}
													],
													"cookie": [],
													"body": "{\n \"code\": 1519430,\n \"message\": \"enim\",\n \"details\": \"do\"\n}"
												}
											]
										},
										{
											"name": "Delete a saved query for a project",
											"request": {
												"auth": {
													"type": "bearer",
													"bearer": [
														{
															"key": "token",
															"value": "{{readWrite}}",
															"type": "string"
														}
													]
												},
												"method": "DELETE",
												"header": [],
												"url": {
													"raw": "{{baseUrl}}/projects/:owner/:id/queries/:queryId",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"projects",
														":owner",
														":id",
														"queries",
														":queryId"
													],
													"variable": [
														{
															"key": "owner",
															"value": "{{org}}",
															"description": "(Required) "
														},
														{
															"key": "id",
															"value": "{{projectid}}",
															"description": "(Required)"
														},
														{
															"key": "queryId",
															"value": "{{projectQueryid}}",
															"description": "(Required) "
														}
													]
												}
											},
											"response": [
												{
													"name": "Successfully deleted saved query.",
													"originalRequest": {
														"method": "DELETE",
														"header": [
															{
																"description": "Added as a part of security scheme: oauth2",
																"key": "Authorization",
																"value": "<token>"
															}
														],
														"url": {
															"raw": "{{baseUrl}}/projects/:owner/:id/queries/:queryId",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"projects",
																":owner",
																":id",
																"queries",
																":queryId"
															],
															"variable": [
																{
																	"key": "owner"
																},
																{
																	"key": "id"
																},
																{
																	"key": "queryId"
																}
															]
														}
													},
													"status": "OK",
													"code": 200,
													"_postman_previewlanguage": "json",
													"header": [
														{
															"key": "Content-Type",
															"value": "application/json"
														}
													],
													"cookie": [],
													"body": "{\n \"message\": \"voluptate culpa nulla esse\"\n}"
												},
												{
													"name": "Bad request",
													"originalRequest": {
														"method": "DELETE",
														"header": [
															{
																"description": "Added as a part of security scheme: oauth2",
																"key": "Authorization",
																"value": "<token>"
															}
														],
														"url": {
															"raw": "{{baseUrl}}/projects/:owner/:id/queries/:queryId",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"projects",
																":owner",
																":id",
																"queries",
																":queryId"
															],
															"variable": [
																{
																	"key": "owner"
																},
																{
																	"key": "id"
																},
																{
																	"key": "queryId"
																}
															]
														}
													},
													"status": "Bad Request",
													"code": 400,
													"_postman_previewlanguage": "json",
													"header": [
														{
															"key": "Content-Type",
															"value": "application/json"
														}
													],
													"cookie": [],
													"body": "{\n \"code\": 1519430,\n \"message\": \"enim\",\n \"details\": \"do\"\n}"
												},
												{
													"name": "Unauthorized",
													"originalRequest": {
														"method": "DELETE",
														"header": [
															{
																"description": "Added as a part of security scheme: oauth2",
																"key": "Authorization",
																"value": "<token>"
															}
														],
														"url": {
															"raw": "{{baseUrl}}/projects/:owner/:id/queries/:queryId",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"projects",
																":owner",
																":id",
																"queries",
																":queryId"
															],
															"variable": [
																{
																	"key": "owner"
																},
																{
																	"key": "id"
																},
																{
																	"key": "queryId"
																}
															]
														}
													},
													"status": "Unauthorized",
													"code": 401,
													"_postman_previewlanguage": "json",
													"header": [
														{
															"key": "Content-Type",
															"value": "application/json"
														}
													],
													"cookie": [],
													"body": "{\n \"code\": 1519430,\n \"message\": \"enim\",\n \"details\": \"do\"\n}"
												},
												{
													"name": "Forbidden",
													"originalRequest": {
														"method": "DELETE",
														"header": [
															{
																"description": "Added as a part of security scheme: oauth2",
																"key": "Authorization",
																"value": "<token>"
															}
														],
														"url": {
															"raw": "{{baseUrl}}/projects/:owner/:id/queries/:queryId",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"projects",
																":owner",
																":id",
																"queries",
																":queryId"
															],
															"variable": [
																{
																	"key": "owner"
																},
																{
																	"key": "id"
																},
																{
																	"key": "queryId"
																}
															]
														}
													},
													"status": "Forbidden",
													"code": 403,
													"_postman_previewlanguage": "json",
													"header": [
														{
															"key": "Content-Type",
															"value": "application/json"
														}
													],
													"cookie": [],
													"body": "{\n \"code\": 1519430,\n \"message\": \"enim\",\n \"details\": \"do\"\n}"
												},
												{
													"name": "Not found",
													"originalRequest": {
														"method": "DELETE",
														"header": [
															{
																"description": "Added as a part of security scheme: oauth2",
																"key": "Authorization",
																"value": "<token>"
															}
														],
														"url": {
															"raw": "{{baseUrl}}/projects/:owner/:id/queries/:queryId",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"projects",
																":owner",
																":id",
																"queries",
																":queryId"
															],
															"variable": [
																{
																	"key": "owner"
																},
																{
																	"key": "id"
																},
																{
																	"key": "queryId"
																}
															]
														}
													},
													"status": "Not Found",
													"code": 404,
													"_postman_previewlanguage": "json",
													"header": [
														{
															"key": "Content-Type",
															"value": "application/json"
														}
													],
													"cookie": [],
													"body": "{\n \"code\": 1519430,\n \"message\": \"enim\",\n \"details\": \"do\"\n}"
												},
												{
													"name": "Server error",
													"originalRequest": {
														"method": "DELETE",
														"header": [
															{
																"description": "Added as a part of security scheme: oauth2",
																"key": "Authorization",
																"value": "<token>"
															}
														],
														"url": {
															"raw": "{{baseUrl}}/projects/:owner/:id/queries/:queryId",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"projects",
																":owner",
																":id",
																"queries",
																":queryId"
															],
															"variable": [
																{
																	"key": "owner"
																},
																{
																	"key": "id"
																},
																{
																	"key": "queryId"
																}
															]
														}
													},
													"status": "Internal Server Error",
													"code": 500,
													"_postman_previewlanguage": "json",
													"header": [
														{
															"key": "Content-Type",
															"value": "application/json"
														}
													],
													"cookie": [],
													"body": "{\n \"code\": 1519430,\n \"message\": \"enim\",\n \"details\": \"do\"\n}"
												}
											]
										}
									]
								},
								{
									"name": "Retrieve queries saved in a project.",
									"request": {
										"auth": {
											"type": "bearer",
											"bearer": [
												{
													"key": "token",
													"value": "{{readWrite}}",
													"type": "string"
												}
											]
										},
										"method": "GET",
										"header": [],
										"url": {
											"raw": "{{baseUrl}}/projects/:owner/:id/queries",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"projects",
												":owner",
												":id",
												"queries"
											],
											"query": [
												{
													"key": "limit",
													"value": "adipisicing elit ullamco",
													"disabled": true
												},
												{
													"key": "next",
													"value": "adipisicing elit ullamco",
													"disabled": true
												}
											],
											"variable": [
												{
													"key": "owner",
													"value": "{{org}}",
													"description": "(Required) "
												},
												{
													"key": "id",
													"value": "{{projectid}}",
													"description": "(Required) "
												}
											]
										}
									},
									"response": [
										{
											"name": "Successfully retrieved queries saved in a project.",
											"originalRequest": {
												"method": "GET",
												"header": [
													{
														"description": "Added as a part of security scheme: oauth2",
														"key": "Authorization",
														"value": "<token>"
													}
												],
												"url": {
													"raw": "{{baseUrl}}/projects/:owner/:id/queries?limit=adipisicing elit ullamco&next=adipisicing elit ullamco",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"projects",
														":owner",
														":id",
														"queries"
													],
													"query": [
														{
															"key": "limit",
															"value": "adipisicing elit ullamco"
														},
														{
															"key": "next",
															"value": "adipisicing elit ullamco"
														}
													],
													"variable": [
														{
															"key": "owner"
														},
														{
															"key": "id"
														}
													]
												}
											},
											"status": "OK",
											"code": 200,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"body": "{\n \"count\": 33999669,\n \"records\": [\n  {\n   \"id\": \"exercitation sint Ut\",\n   \"owner\": \"quis nostrud magna proident\",\n   \"language\": \"SPARQL\",\n   \"name\": \"non\",\n   \"body\": \"dolor in\",\n   \"version\": \"laborum ut\",\n   \"created\": \"do velit laboris dolore officia\",\n   \"updated\": \"incididunt dolor mollit culpa\",\n   \"parameters\": {}\n  },\n  {\n   \"id\": \"proident enim deserunt dolor eiusmod\",\n   \"owner\": \"voluptate commodo pariatur culpa\",\n   \"language\": \"SPARQL\",\n   \"name\": \"nulla aute\",\n   \"body\": \"dolor quis eu Lorem deserunt\",\n   \"version\": \"minim culpa magna deserunt tempor\",\n   \"created\": \"ex ut eiusmod\",\n   \"updated\": \"\",\n   \"parameters\": {}\n  }\n ],\n \"nextPageToken\": \"incididunt ex mollit\"\n}"
										},
										{
											"name": "Bad request",
											"originalRequest": {
												"method": "GET",
												"header": [
													{
														"description": "Added as a part of security scheme: oauth2",
														"key": "Authorization",
														"value": "<token>"
													}
												],
												"url": {
													"raw": "{{baseUrl}}/projects/:owner/:id/queries?limit=adipisicing elit ullamco&next=adipisicing elit ullamco",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"projects",
														":owner",
														":id",
														"queries"
													],
													"query": [
														{
															"key": "limit",
															"value": "adipisicing elit ullamco"
														},
														{
															"key": "next",
															"value": "adipisicing elit ullamco"
														}
													],
													"variable": [
														{
															"key": "owner"
														},
														{
															"key": "id"
														}
													]
												}
											},
											"status": "Bad Request",
											"code": 400,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"body": "{\n \"code\": 1519430,\n \"message\": \"enim\",\n \"details\": \"do\"\n}"
										},
										{
											"name": "Unauthorized",
											"originalRequest": {
												"method": "GET",
												"header": [
													{
														"description": "Added as a part of security scheme: oauth2",
														"key": "Authorization",
														"value": "<token>"
													}
												],
												"url": {
													"raw": "{{baseUrl}}/projects/:owner/:id/queries?limit=adipisicing elit ullamco&next=adipisicing elit ullamco",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"projects",
														":owner",
														":id",
														"queries"
													],
													"query": [
														{
															"key": "limit",
															"value": "adipisicing elit ullamco"
														},
														{
															"key": "next",
															"value": "adipisicing elit ullamco"
														}
													],
													"variable": [
														{
															"key": "owner"
														},
														{
															"key": "id"
														}
													]
												}
											},
											"status": "Unauthorized",
											"code": 401,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"body": "{\n \"code\": 1519430,\n \"message\": \"enim\",\n \"details\": \"do\"\n}"
										},
										{
											"name": "Forbidden",
											"originalRequest": {
												"method": "GET",
												"header": [
													{
														"description": "Added as a part of security scheme: oauth2",
														"key": "Authorization",
														"value": "<token>"
													}
												],
												"url": {
													"raw": "{{baseUrl}}/projects/:owner/:id/queries?limit=adipisicing elit ullamco&next=adipisicing elit ullamco",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"projects",
														":owner",
														":id",
														"queries"
													],
													"query": [
														{
															"key": "limit",
															"value": "adipisicing elit ullamco"
														},
														{
															"key": "next",
															"value": "adipisicing elit ullamco"
														}
													],
													"variable": [
														{
															"key": "owner"
														},
														{
															"key": "id"
														}
													]
												}
											},
											"status": "Forbidden",
											"code": 403,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"body": "{\n \"code\": 1519430,\n \"message\": \"enim\",\n \"details\": \"do\"\n}"
										},
										{
											"name": "Not found",
											"originalRequest": {
												"method": "GET",
												"header": [
													{
														"description": "Added as a part of security scheme: oauth2",
														"key": "Authorization",
														"value": "<token>"
													}
												],
												"url": {
													"raw": "{{baseUrl}}/projects/:owner/:id/queries?limit=adipisicing elit ullamco&next=adipisicing elit ullamco",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"projects",
														":owner",
														":id",
														"queries"
													],
													"query": [
														{
															"key": "limit",
															"value": "adipisicing elit ullamco"
														},
														{
															"key": "next",
															"value": "adipisicing elit ullamco"
														}
													],
													"variable": [
														{
															"key": "owner"
														},
														{
															"key": "id"
														}
													]
												}
											},
											"status": "Not Found",
											"code": 404,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"body": "{\n \"code\": 1519430,\n \"message\": \"enim\",\n \"details\": \"do\"\n}"
										},
										{
											"name": "Server error",
											"originalRequest": {
												"method": "GET",
												"header": [
													{
														"description": "Added as a part of security scheme: oauth2",
														"key": "Authorization",
														"value": "<token>"
													}
												],
												"url": {
													"raw": "{{baseUrl}}/projects/:owner/:id/queries?limit=adipisicing elit ullamco&next=adipisicing elit ullamco",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"projects",
														":owner",
														":id",
														"queries"
													],
													"query": [
														{
															"key": "limit",
															"value": "adipisicing elit ullamco"
														},
														{
															"key": "next",
															"value": "adipisicing elit ullamco"
														}
													],
													"variable": [
														{
															"key": "owner"
														},
														{
															"key": "id"
														}
													]
												}
											},
											"status": "Internal Server Error",
											"code": 500,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"body": "{\n \"code\": 1519430,\n \"message\": \"enim\",\n \"details\": \"do\"\n}"
										}
									]
								},
								{
									"name": "Create a saved query for a project",
									"request": {
										"auth": {
											"type": "bearer",
											"bearer": [
												{
													"key": "token",
													"value": "{{readWrite}}",
													"type": "string"
												}
											]
										},
										"method": "POST",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/json"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n    \"content\": \"select first_name from 50_rows\",\n    \"language\": \"SQL\",\n    \"name\": \"firstname\",\n    \"published\": true\n}"
										},
										"url": {
											"raw": "{{baseUrl}}/projects/:owner/:id/queries",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"projects",
												":owner",
												":id",
												"queries"
											],
											"variable": [
												{
													"key": "owner",
													"value": "{{org}}",
													"description": "(Required) "
												},
												{
													"key": "id",
													"value": "{{projectid}}",
													"description": "(Required) "
												}
											]
										}
									},
									"response": [
										{
											"name": "Successfully created saved query.",
											"originalRequest": {
												"method": "POST",
												"header": [
													{
														"description": "Added as a part of security scheme: oauth2",
														"key": "Authorization",
														"value": "<token>"
													}
												],
												"url": {
													"raw": "{{baseUrl}}/projects/:owner/:id/queries",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"projects",
														":owner",
														":id",
														"queries"
													],
													"variable": [
														{
															"key": "owner"
														},
														{
															"key": "id"
														}
													]
												}
											},
											"status": "OK",
											"code": 200,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"body": "{\n \"id\": \"sint offi\",\n \"owner\": \"voluptate\",\n \"language\": \"SPARQL\",\n \"name\": \"ex anim in\",\n \"body\": \"consectetur\",\n \"version\": \"sed reprehenderit veniam commodo aliqua\",\n \"created\": \"aliqua mollit\",\n \"updated\": \"aliquip aliqua do irure eu\",\n \"parameters\": {}\n}"
										},
										{
											"name": "Bad request",
											"originalRequest": {
												"method": "POST",
												"header": [
													{
														"description": "Added as a part of security scheme: oauth2",
														"key": "Authorization",
														"value": "<token>"
													}
												],
												"url": {
													"raw": "{{baseUrl}}/projects/:owner/:id/queries",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"projects",
														":owner",
														":id",
														"queries"
													],
													"variable": [
														{
															"key": "owner"
														},
														{
															"key": "id"
														}
													]
												}
											},
											"status": "Bad Request",
											"code": 400,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"body": "{\n \"code\": 1519430,\n \"message\": \"enim\",\n \"details\": \"do\"\n}"
										},
										{
											"name": "Unauthorized",
											"originalRequest": {
												"method": "POST",
												"header": [
													{
														"description": "Added as a part of security scheme: oauth2",
														"key": "Authorization",
														"value": "<token>"
													}
												],
												"url": {
													"raw": "{{baseUrl}}/projects/:owner/:id/queries",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"projects",
														":owner",
														":id",
														"queries"
													],
													"variable": [
														{
															"key": "owner"
														},
														{
															"key": "id"
														}
													]
												}
											},
											"status": "Unauthorized",
											"code": 401,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"body": "{\n \"code\": 1519430,\n \"message\": \"enim\",\n \"details\": \"do\"\n}"
										},
										{
											"name": "Forbidden",
											"originalRequest": {
												"method": "POST",
												"header": [
													{
														"description": "Added as a part of security scheme: oauth2",
														"key": "Authorization",
														"value": "<token>"
													}
												],
												"url": {
													"raw": "{{baseUrl}}/projects/:owner/:id/queries",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"projects",
														":owner",
														":id",
														"queries"
													],
													"variable": [
														{
															"key": "owner"
														},
														{
															"key": "id"
														}
													]
												}
											},
											"status": "Forbidden",
											"code": 403,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"body": "{\n \"code\": 1519430,\n \"message\": \"enim\",\n \"details\": \"do\"\n}"
										},
										{
											"name": "Not found",
											"originalRequest": {
												"method": "POST",
												"header": [
													{
														"description": "Added as a part of security scheme: oauth2",
														"key": "Authorization",
														"value": "<token>"
													}
												],
												"url": {
													"raw": "{{baseUrl}}/projects/:owner/:id/queries",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"projects",
														":owner",
														":id",
														"queries"
													],
													"variable": [
														{
															"key": "owner"
														},
														{
															"key": "id"
														}
													]
												}
											},
											"status": "Not Found",
											"code": 404,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"body": "{\n \"code\": 1519430,\n \"message\": \"enim\",\n \"details\": \"do\"\n}"
										},
										{
											"name": "Server error",
											"originalRequest": {
												"method": "POST",
												"header": [
													{
														"description": "Added as a part of security scheme: oauth2",
														"key": "Authorization",
														"value": "<token>"
													}
												],
												"url": {
													"raw": "{{baseUrl}}/projects/:owner/:id/queries",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"projects",
														":owner",
														":id",
														"queries"
													],
													"variable": [
														{
															"key": "owner"
														},
														{
															"key": "id"
														}
													]
												}
											},
											"status": "Internal Server Error",
											"code": 500,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"body": "{\n \"code\": 1519430,\n \"message\": \"enim\",\n \"details\": \"do\"\n}"
										}
									]
								}
							]
						},
						{
							"name": "Retrieve a project.",
							"request": {
								"auth": {
									"type": "bearer",
									"bearer": [
										{
											"key": "token",
											"value": "{{readWrite}}",
											"type": "string"
										}
									]
								},
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{baseUrl}}/projects/:owner/:id",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"projects",
										":owner",
										":id"
									],
									"variable": [
										{
											"key": "owner",
											"value": "{{org}}",
											"description": "(Required) "
										},
										{
											"key": "id",
											"value": "{{projectid}}",
											"description": "(Required) "
										}
									]
								}
							},
							"response": [
								{
									"name": "Successfully retrieved project",
									"originalRequest": {
										"method": "GET",
										"header": [
											{
												"description": "Added as a part of security scheme: oauth2",
												"key": "Authorization",
												"value": "<token>"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/projects/:owner/:id",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"projects",
												":owner",
												":id"
											],
											"variable": [
												{
													"key": "owner"
												},
												{
													"key": "id"
												}
											]
										}
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n \"accessLevel\": \"WRITE\",\n \"created\": \"aute dolor Duis\",\n \"id\": \"officia proident\",\n \"owner\": \"eiusmod est non\",\n \"status\": \"INPROGRESS\",\n \"title\": \"ad\",\n \"updated\": \"Duis qui voluptate Lorem\",\n \"version\": \"voluptate Lorem\",\n \"visibility\": \"OPEN\",\n \"objective\": \"nostrud incididu\",\n \"summary\": \"consectetur do\",\n \"tags\": [\n  \"dolore ea laborum ad \",\n  \"Excepteur eu\"\n ],\n \"license\": \"CC BY-NC-SA\",\n \"assetStatus\": {\n  \"assetStatusLabel\": \"cupid\",\n  \"dispositionLabel\": \"dolor\"\n },\n \"files\": [\n  {\n   \"created\": \"magna\",\n   \"name\": \"80\",\n   \"updated\": \"non voluptate\",\n   \"sizeInBytes\": -95558021,\n   \"source\": {\n    \"syncStatus\": {\n     \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    \"url\": {\n     \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    \"method\": {\n     \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    \"requestHeaders\": {\n     \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    \"requestEntity\": {\n     \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    \"oauthToken\": {\n     \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    \"credentials\": {\n     \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    \"authorization\": {\n     \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    \"databaseSource\": {\n     \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    \"dwccSpec\": {\n     \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    \"viewRequest\": {\n     \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    \"databaseMetadataSpec\": {\n     \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    \"dataTables\": {\n     \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    \"tableSpec\": {\n     \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    \"expandArchive\": {\n     \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    \"syncSummary\": {\n     \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    \"lastSyncStart\": {\n     \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    \"lastSyncSuccess\": {\n     \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    \"lastSyncFailure\": {\n     \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    }\n   },\n   \"description\": \"nulla id cupidatat\",\n   \"labels\": [\n    \"et do aliquip dolore\",\n    \"labore in nulla\"\n   ]\n  },\n  {\n   \"created\": \"esse amet sint\",\n   \"name\": \"'^Bgb&E-t\",\n   \"updated\": \"elit in\",\n   \"sizeInBytes\": 92000925,\n   \"source\": {\n    \"syncStatus\": {\n     \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    \"url\": {\n     \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    \"method\": {\n     \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    \"requestHeaders\": {\n     \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    \"requestEntity\": {\n     \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    \"oauthToken\": {\n     \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    \"credentials\": {\n     \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    \"authorization\": {\n     \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    \"databaseSource\": {\n     \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    \"dwccSpec\": {\n     \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    \"viewRequest\": {\n     \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    \"databaseMetadataSpec\": {\n     \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    \"dataTables\": {\n     \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    \"tableSpec\": {\n     \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    \"expandArchive\": {\n     \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    \"syncSummary\": {\n     \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    \"lastSyncStart\": {\n     \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    \"lastSyncSuccess\": {\n     \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    \"lastSyncFailure\": {\n     \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    }\n   },\n   \"description\": \"deserunt\",\n   \"labels\": [\n    \"voluptate adipisicing exercitation tempor\",\n    \"aute\"\n   ]\n  }\n ],\n \"properties\": {},\n \"linkedDatasets\": [\n  {\n   \"accessLevel\": \"ADMIN\",\n   \"created\": \"proident\",\n   \"id\": \"ex\",\n   \"owner\": \"aliqua ad non exercitation aliquip\",\n   \"title\": \"commodo consectetur eu ut\",\n   \"updated\": \"nostrud et\",\n   \"visibility\": \"PRIVATE\",\n   \"description\": \"nisi enim veniam in\",\n   \"summary\": \"voluptate quis\",\n   \"version\": \"sunt reprehenderit\",\n   \"tags\": [\n    \"pariatur ad elit\",\n    \"et Duis sint amet\"\n   ],\n   \"license\": \"CC BY-NC-ND\"\n  },\n  {\n   \"accessLevel\": \"ADMIN\",\n   \"created\": \"culpa id Duis pariatur\",\n   \"id\": \"veniam magna mollit\",\n   \"owner\": \"voluptate ut\",\n   \"title\": \"ex U\",\n   \"updated\": \"sit dolore et Ut\",\n   \"visibility\": \"PRIVATE\",\n   \"description\": \"voluptate nostrud aliqua ea\",\n   \"summary\": \"magna\",\n   \"version\": \"de\",\n   \"tags\": [\n    \"magna aliqua\",\n    \"adipisicing do id consequat nisi\"\n   ],\n   \"license\": \"CDLA-Sharing-1.0\"\n  }\n ]\n}"
								},
								{
									"name": "Bad request",
									"originalRequest": {
										"method": "GET",
										"header": [
											{
												"description": "Added as a part of security scheme: oauth2",
												"key": "Authorization",
												"value": "<token>"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/projects/:owner/:id",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"projects",
												":owner",
												":id"
											],
											"variable": [
												{
													"key": "owner"
												},
												{
													"key": "id"
												}
											]
										}
									},
									"status": "Bad Request",
									"code": 400,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n \"code\": 1519430,\n \"message\": \"enim\",\n \"details\": \"do\"\n}"
								},
								{
									"name": "Unauthorized",
									"originalRequest": {
										"method": "GET",
										"header": [
											{
												"description": "Added as a part of security scheme: oauth2",
												"key": "Authorization",
												"value": "<token>"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/projects/:owner/:id",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"projects",
												":owner",
												":id"
											],
											"variable": [
												{
													"key": "owner"
												},
												{
													"key": "id"
												}
											]
										}
									},
									"status": "Unauthorized",
									"code": 401,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n \"code\": 1519430,\n \"message\": \"enim\",\n \"details\": \"do\"\n}"
								},
								{
									"name": "Forbidden",
									"originalRequest": {
										"method": "GET",
										"header": [
											{
												"description": "Added as a part of security scheme: oauth2",
												"key": "Authorization",
												"value": "<token>"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/projects/:owner/:id",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"projects",
												":owner",
												":id"
											],
											"variable": [
												{
													"key": "owner"
												},
												{
													"key": "id"
												}
											]
										}
									},
									"status": "Forbidden",
									"code": 403,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n \"code\": 1519430,\n \"message\": \"enim\",\n \"details\": \"do\"\n}"
								},
								{
									"name": "Not found",
									"originalRequest": {
										"method": "GET",
										"header": [
											{
												"description": "Added as a part of security scheme: oauth2",
												"key": "Authorization",
												"value": "<token>"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/projects/:owner/:id",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"projects",
												":owner",
												":id"
											],
											"variable": [
												{
													"key": "owner"
												},
												{
													"key": "id"
												}
											]
										}
									},
									"status": "Not Found",
									"code": 404,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n \"code\": 1519430,\n \"message\": \"enim\",\n \"details\": \"do\"\n}"
								},
								{
									"name": "Server error",
									"originalRequest": {
										"method": "GET",
										"header": [
											{
												"description": "Added as a part of security scheme: oauth2",
												"key": "Authorization",
												"value": "<token>"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/projects/:owner/:id",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"projects",
												":owner",
												":id"
											],
											"variable": [
												{
													"key": "owner"
												},
												{
													"key": "id"
												}
											]
										}
									},
									"status": "Internal Server Error",
									"code": 500,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n \"code\": 1519430,\n \"message\": \"enim\",\n \"details\": \"do\"\n}"
								}
							]
						},
						{
							"name": "Replace an existing project or create a new project.",
							"request": {
								"auth": {
									"type": "bearer",
									"bearer": [
										{
											"key": "token",
											"value": "{{readWrite}}",
											"type": "string"
										}
									]
								},
								"method": "PUT",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"title\": \"my project \",\n    \"visibility\": \"OPEN\",\n    \"summary\": \"my little project 2\",\n    \"tags\": [\n        \"hey\",\n        \"how are you\",\n        \"im fine\",\n        \"thank you\"\n    ],\n    \"license\": \"ODC-BY\",\n    \"files\":[\n        {\n            \"name\": \"50 rows\",\n            \"description\": \"made the fix\",\n            \"labels\": [\"raw data\"],\n            \"source\": {\n                \"url\": \"https://file-examples-com.github.io/uploads/2017/02/file_example_XLS_50.xls\",\n                \"method\": \"GET\"\n            }\n        }\n    ]\n}"
								},
								"url": {
									"raw": "{{baseUrl}}/projects/:owner/:id",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"projects",
										":owner",
										":id"
									],
									"variable": [
										{
											"key": "owner",
											"value": "{{org}}",
											"description": "(Required) "
										},
										{
											"key": "id",
											"value": "{{projectid}}",
											"description": "(Required) "
										}
									]
								}
							},
							"response": [
								{
									"name": "Project replaced successfully.",
									"originalRequest": {
										"method": "PUT",
										"header": [
											{
												"description": "Added as a part of security scheme: oauth2",
												"key": "Authorization",
												"value": "<token>"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n    \"title\": \"irure\",\n    \"visibility\": \"PRIVATE\",\n    \"objective\": \"ea deserunt Duis consequat\",\n    \"summary\": \"ut Excepteur in Duis\",\n    \"tags\": [\n        \"Lorem occaecat nisi Duis\",\n        \"amet \"\n    ],\n    \"license\": \"OSODL\",\n    \"files\": [\n        {\n            \"name\": \"^+1sIA\",\n            \"source\": {\n                \"url\": {\n                    \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n                },\n                \"method\": {\n                    \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n                },\n                \"requestHeaders\": {\n                    \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n                },\n                \"requestEntity\": {\n                    \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n                },\n                \"oauthToken\": {\n                    \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n                },\n                \"credentials\": {\n                    \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n                },\n                \"authorization\": {\n                    \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n                },\n                \"databaseSource\": {\n                    \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n                },\n                \"dwccSpec\": {\n                    \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n                },\n                \"viewRequest\": {\n                    \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n                },\n                \"databaseMetadataSpec\": {\n                    \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n                },\n                \"dataTables\": {\n                    \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n                },\n                \"tableSpec\": {\n                    \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n                },\n                \"expandArchive\": {\n                    \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n                }\n            },\n            \"description\": \"officia\",\n            \"labels\": [\n                \"nulla non do laborum esse\",\n                \"ut\"\n            ]\n        },\n        {\n            \"name\": \"o*T\",\n            \"source\": {\n                \"url\": {\n                    \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n                },\n                \"method\": {\n                    \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n                },\n                \"requestHeaders\": {\n                    \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n                },\n                \"requestEntity\": {\n                    \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n                },\n                \"oauthToken\": {\n                    \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n                },\n                \"credentials\": {\n                    \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n                },\n                \"authorization\": {\n                    \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n                },\n                \"databaseSource\": {\n                    \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n                },\n                \"dwccSpec\": {\n                    \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n                },\n                \"viewRequest\": {\n                    \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n                },\n                \"databaseMetadataSpec\": {\n                    \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n                },\n                \"dataTables\": {\n                    \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n                },\n                \"tableSpec\": {\n                    \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n                },\n                \"expandArchive\": {\n                    \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n                }\n            },\n            \"description\": \"dolore dolor\",\n            \"labels\": [\n                \"tempor amet labore\",\n                \"deserunt\"\n            ]\n        }\n    ],\n    \"properties\": {},\n    \"linkedDatasets\": [\n        {\n            \"id\": \"id officia eu laboris\",\n            \"owner\": \"adipisicing velit\"\n        },\n        {\n            \"id\": \"dolore ut\",\n            \"owner\": \"elit fugiat incididunt\"\n        }\n    ]\n}"
										},
										"url": {
											"raw": "{{baseUrl}}/projects/:owner/:id",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"projects",
												":owner",
												":id"
											],
											"variable": [
												{
													"key": "owner"
												},
												{
													"key": "id"
												}
											]
										}
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n \"message\": \"voluptate culpa nulla esse\"\n}"
								},
								{
									"name": "Bad request",
									"originalRequest": {
										"method": "PUT",
										"header": [
											{
												"description": "Added as a part of security scheme: oauth2",
												"key": "Authorization",
												"value": "<token>"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n    \"title\": \"irure\",\n    \"visibility\": \"PRIVATE\",\n    \"objective\": \"ea deserunt Duis consequat\",\n    \"summary\": \"ut Excepteur in Duis\",\n    \"tags\": [\n        \"Lorem occaecat nisi Duis\",\n        \"amet \"\n    ],\n    \"license\": \"OSODL\",\n    \"files\": [\n        {\n            \"name\": \"^+1sIA\",\n            \"source\": {\n                \"url\": {\n                    \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n                },\n                \"method\": {\n                    \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n                },\n                \"requestHeaders\": {\n                    \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n                },\n                \"requestEntity\": {\n                    \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n                },\n                \"oauthToken\": {\n                    \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n                },\n                \"credentials\": {\n                    \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n                },\n                \"authorization\": {\n                    \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n                },\n                \"databaseSource\": {\n                    \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n                },\n                \"dwccSpec\": {\n                    \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n                },\n                \"viewRequest\": {\n                    \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n                },\n                \"databaseMetadataSpec\": {\n                    \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n                },\n                \"dataTables\": {\n                    \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n                },\n                \"tableSpec\": {\n                    \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n                },\n                \"expandArchive\": {\n                    \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n                }\n            },\n            \"description\": \"officia\",\n            \"labels\": [\n                \"nulla non do laborum esse\",\n                \"ut\"\n            ]\n        },\n        {\n            \"name\": \"o*T\",\n            \"source\": {\n                \"url\": {\n                    \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n                },\n                \"method\": {\n                    \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n                },\n                \"requestHeaders\": {\n                    \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n                },\n                \"requestEntity\": {\n                    \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n                },\n                \"oauthToken\": {\n                    \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n                },\n                \"credentials\": {\n                    \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n                },\n                \"authorization\": {\n                    \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n                },\n                \"databaseSource\": {\n                    \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n                },\n                \"dwccSpec\": {\n                    \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n                },\n                \"viewRequest\": {\n                    \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n                },\n                \"databaseMetadataSpec\": {\n                    \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n                },\n                \"dataTables\": {\n                    \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n                },\n                \"tableSpec\": {\n                    \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n                },\n                \"expandArchive\": {\n                    \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n                }\n            },\n            \"description\": \"dolore dolor\",\n            \"labels\": [\n                \"tempor amet labore\",\n                \"deserunt\"\n            ]\n        }\n    ],\n    \"properties\": {},\n    \"linkedDatasets\": [\n        {\n            \"id\": \"id officia eu laboris\",\n            \"owner\": \"adipisicing velit\"\n        },\n        {\n            \"id\": \"dolore ut\",\n            \"owner\": \"elit fugiat incididunt\"\n        }\n    ]\n}"
										},
										"url": {
											"raw": "{{baseUrl}}/projects/:owner/:id",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"projects",
												":owner",
												":id"
											],
											"variable": [
												{
													"key": "owner"
												},
												{
													"key": "id"
												}
											]
										}
									},
									"status": "Bad Request",
									"code": 400,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n \"code\": 1519430,\n \"message\": \"enim\",\n \"details\": \"do\"\n}"
								},
								{
									"name": "Unauthorized",
									"originalRequest": {
										"method": "PUT",
										"header": [
											{
												"description": "Added as a part of security scheme: oauth2",
												"key": "Authorization",
												"value": "<token>"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n    \"title\": \"irure\",\n    \"visibility\": \"PRIVATE\",\n    \"objective\": \"ea deserunt Duis consequat\",\n    \"summary\": \"ut Excepteur in Duis\",\n    \"tags\": [\n        \"Lorem occaecat nisi Duis\",\n        \"amet \"\n    ],\n    \"license\": \"OSODL\",\n    \"files\": [\n        {\n            \"name\": \"^+1sIA\",\n            \"source\": {\n                \"url\": {\n                    \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n                },\n                \"method\": {\n                    \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n                },\n                \"requestHeaders\": {\n                    \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n                },\n                \"requestEntity\": {\n                    \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n                },\n                \"oauthToken\": {\n                    \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n                },\n                \"credentials\": {\n                    \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n                },\n                \"authorization\": {\n                    \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n                },\n                \"databaseSource\": {\n                    \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n                },\n                \"dwccSpec\": {\n                    \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n                },\n                \"viewRequest\": {\n                    \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n                },\n                \"databaseMetadataSpec\": {\n                    \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n                },\n                \"dataTables\": {\n                    \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n                },\n                \"tableSpec\": {\n                    \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n                },\n                \"expandArchive\": {\n                    \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n                }\n            },\n            \"description\": \"officia\",\n            \"labels\": [\n                \"nulla non do laborum esse\",\n                \"ut\"\n            ]\n        },\n        {\n            \"name\": \"o*T\",\n            \"source\": {\n                \"url\": {\n                    \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n                },\n                \"method\": {\n                    \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n                },\n                \"requestHeaders\": {\n                    \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n                },\n                \"requestEntity\": {\n                    \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n                },\n                \"oauthToken\": {\n                    \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n                },\n                \"credentials\": {\n                    \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n                },\n                \"authorization\": {\n                    \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n                },\n                \"databaseSource\": {\n                    \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n                },\n                \"dwccSpec\": {\n                    \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n                },\n                \"viewRequest\": {\n                    \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n                },\n                \"databaseMetadataSpec\": {\n                    \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n                },\n                \"dataTables\": {\n                    \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n                },\n                \"tableSpec\": {\n                    \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n                },\n                \"expandArchive\": {\n                    \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n                }\n            },\n            \"description\": \"dolore dolor\",\n            \"labels\": [\n                \"tempor amet labore\",\n                \"deserunt\"\n            ]\n        }\n    ],\n    \"properties\": {},\n    \"linkedDatasets\": [\n        {\n            \"id\": \"id officia eu laboris\",\n            \"owner\": \"adipisicing velit\"\n        },\n        {\n            \"id\": \"dolore ut\",\n            \"owner\": \"elit fugiat incididunt\"\n        }\n    ]\n}"
										},
										"url": {
											"raw": "{{baseUrl}}/projects/:owner/:id",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"projects",
												":owner",
												":id"
											],
											"variable": [
												{
													"key": "owner"
												},
												{
													"key": "id"
												}
											]
										}
									},
									"status": "Unauthorized",
									"code": 401,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n \"code\": 1519430,\n \"message\": \"enim\",\n \"details\": \"do\"\n}"
								},
								{
									"name": "Forbidden",
									"originalRequest": {
										"method": "PUT",
										"header": [
											{
												"description": "Added as a part of security scheme: oauth2",
												"key": "Authorization",
												"value": "<token>"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n    \"title\": \"irure\",\n    \"visibility\": \"PRIVATE\",\n    \"objective\": \"ea deserunt Duis consequat\",\n    \"summary\": \"ut Excepteur in Duis\",\n    \"tags\": [\n        \"Lorem occaecat nisi Duis\",\n        \"amet \"\n    ],\n    \"license\": \"OSODL\",\n    \"files\": [\n        {\n            \"name\": \"^+1sIA\",\n            \"source\": {\n                \"url\": {\n                    \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n                },\n                \"method\": {\n                    \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n                },\n                \"requestHeaders\": {\n                    \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n                },\n                \"requestEntity\": {\n                    \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n                },\n                \"oauthToken\": {\n                    \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n                },\n                \"credentials\": {\n                    \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n                },\n                \"authorization\": {\n                    \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n                },\n                \"databaseSource\": {\n                    \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n                },\n                \"dwccSpec\": {\n                    \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n                },\n                \"viewRequest\": {\n                    \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n                },\n                \"databaseMetadataSpec\": {\n                    \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n                },\n                \"dataTables\": {\n                    \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n                },\n                \"tableSpec\": {\n                    \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n                },\n                \"expandArchive\": {\n                    \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n                }\n            },\n            \"description\": \"officia\",\n            \"labels\": [\n                \"nulla non do laborum esse\",\n                \"ut\"\n            ]\n        },\n        {\n            \"name\": \"o*T\",\n            \"source\": {\n                \"url\": {\n                    \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n                },\n                \"method\": {\n                    \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n                },\n                \"requestHeaders\": {\n                    \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n                },\n                \"requestEntity\": {\n                    \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n                },\n                \"oauthToken\": {\n                    \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n                },\n                \"credentials\": {\n                    \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n                },\n                \"authorization\": {\n                    \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n                },\n                \"databaseSource\": {\n                    \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n                },\n                \"dwccSpec\": {\n                    \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n                },\n                \"viewRequest\": {\n                    \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n                },\n                \"databaseMetadataSpec\": {\n                    \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n                },\n                \"dataTables\": {\n                    \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n                },\n                \"tableSpec\": {\n                    \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n                },\n                \"expandArchive\": {\n                    \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n                }\n            },\n            \"description\": \"dolore dolor\",\n            \"labels\": [\n                \"tempor amet labore\",\n                \"deserunt\"\n            ]\n        }\n    ],\n    \"properties\": {},\n    \"linkedDatasets\": [\n        {\n            \"id\": \"id officia eu laboris\",\n            \"owner\": \"adipisicing velit\"\n        },\n        {\n            \"id\": \"dolore ut\",\n            \"owner\": \"elit fugiat incididunt\"\n        }\n    ]\n}"
										},
										"url": {
											"raw": "{{baseUrl}}/projects/:owner/:id",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"projects",
												":owner",
												":id"
											],
											"variable": [
												{
													"key": "owner"
												},
												{
													"key": "id"
												}
											]
										}
									},
									"status": "Forbidden",
									"code": 403,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n \"code\": 1519430,\n \"message\": \"enim\",\n \"details\": \"do\"\n}"
								},
								{
									"name": "Not found",
									"originalRequest": {
										"method": "PUT",
										"header": [
											{
												"description": "Added as a part of security scheme: oauth2",
												"key": "Authorization",
												"value": "<token>"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n    \"title\": \"irure\",\n    \"visibility\": \"PRIVATE\",\n    \"objective\": \"ea deserunt Duis consequat\",\n    \"summary\": \"ut Excepteur in Duis\",\n    \"tags\": [\n        \"Lorem occaecat nisi Duis\",\n        \"amet \"\n    ],\n    \"license\": \"OSODL\",\n    \"files\": [\n        {\n            \"name\": \"^+1sIA\",\n            \"source\": {\n                \"url\": {\n                    \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n                },\n                \"method\": {\n                    \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n                },\n                \"requestHeaders\": {\n                    \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n                },\n                \"requestEntity\": {\n                    \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n                },\n                \"oauthToken\": {\n                    \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n                },\n                \"credentials\": {\n                    \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n                },\n                \"authorization\": {\n                    \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n                },\n                \"databaseSource\": {\n                    \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n                },\n                \"dwccSpec\": {\n                    \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n                },\n                \"viewRequest\": {\n                    \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n                },\n                \"databaseMetadataSpec\": {\n                    \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n                },\n                \"dataTables\": {\n                    \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n                },\n                \"tableSpec\": {\n                    \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n                },\n                \"expandArchive\": {\n                    \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n                }\n            },\n            \"description\": \"officia\",\n            \"labels\": [\n                \"nulla non do laborum esse\",\n                \"ut\"\n            ]\n        },\n        {\n            \"name\": \"o*T\",\n            \"source\": {\n                \"url\": {\n                    \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n                },\n                \"method\": {\n                    \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n                },\n                \"requestHeaders\": {\n                    \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n                },\n                \"requestEntity\": {\n                    \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n                },\n                \"oauthToken\": {\n                    \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n                },\n                \"credentials\": {\n                    \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n                },\n                \"authorization\": {\n                    \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n                },\n                \"databaseSource\": {\n                    \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n                },\n                \"dwccSpec\": {\n                    \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n                },\n                \"viewRequest\": {\n                    \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n                },\n                \"databaseMetadataSpec\": {\n                    \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n                },\n                \"dataTables\": {\n                    \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n                },\n                \"tableSpec\": {\n                    \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n                },\n                \"expandArchive\": {\n                    \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n                }\n            },\n            \"description\": \"dolore dolor\",\n            \"labels\": [\n                \"tempor amet labore\",\n                \"deserunt\"\n            ]\n        }\n    ],\n    \"properties\": {},\n    \"linkedDatasets\": [\n        {\n            \"id\": \"id officia eu laboris\",\n            \"owner\": \"adipisicing velit\"\n        },\n        {\n            \"id\": \"dolore ut\",\n            \"owner\": \"elit fugiat incididunt\"\n        }\n    ]\n}"
										},
										"url": {
											"raw": "{{baseUrl}}/projects/:owner/:id",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"projects",
												":owner",
												":id"
											],
											"variable": [
												{
													"key": "owner"
												},
												{
													"key": "id"
												}
											]
										}
									},
									"status": "Not Found",
									"code": 404,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n \"code\": 1519430,\n \"message\": \"enim\",\n \"details\": \"do\"\n}"
								},
								{
									"name": "Bad request",
									"originalRequest": {
										"method": "PUT",
										"header": [
											{
												"description": "Added as a part of security scheme: oauth2",
												"key": "Authorization",
												"value": "<token>"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n    \"title\": \"irure\",\n    \"visibility\": \"PRIVATE\",\n    \"objective\": \"ea deserunt Duis consequat\",\n    \"summary\": \"ut Excepteur in Duis\",\n    \"tags\": [\n        \"Lorem occaecat nisi Duis\",\n        \"amet \"\n    ],\n    \"license\": \"OSODL\",\n    \"files\": [\n        {\n            \"name\": \"^+1sIA\",\n            \"source\": {\n                \"url\": {\n                    \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n                },\n                \"method\": {\n                    \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n                },\n                \"requestHeaders\": {\n                    \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n                },\n                \"requestEntity\": {\n                    \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n                },\n                \"oauthToken\": {\n                    \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n                },\n                \"credentials\": {\n                    \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n                },\n                \"authorization\": {\n                    \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n                },\n                \"databaseSource\": {\n                    \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n                },\n                \"dwccSpec\": {\n                    \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n                },\n                \"viewRequest\": {\n                    \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n                },\n                \"databaseMetadataSpec\": {\n                    \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n                },\n                \"dataTables\": {\n                    \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n                },\n                \"tableSpec\": {\n                    \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n                },\n                \"expandArchive\": {\n                    \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n                }\n            },\n            \"description\": \"officia\",\n            \"labels\": [\n                \"nulla non do laborum esse\",\n                \"ut\"\n            ]\n        },\n        {\n            \"name\": \"o*T\",\n            \"source\": {\n                \"url\": {\n                    \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n                },\n                \"method\": {\n                    \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n                },\n                \"requestHeaders\": {\n                    \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n                },\n                \"requestEntity\": {\n                    \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n                },\n                \"oauthToken\": {\n                    \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n                },\n                \"credentials\": {\n                    \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n                },\n                \"authorization\": {\n                    \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n                },\n                \"databaseSource\": {\n                    \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n                },\n                \"dwccSpec\": {\n                    \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n                },\n                \"viewRequest\": {\n                    \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n                },\n                \"databaseMetadataSpec\": {\n                    \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n                },\n                \"dataTables\": {\n                    \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n                },\n                \"tableSpec\": {\n                    \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n                },\n                \"expandArchive\": {\n                    \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n                }\n            },\n            \"description\": \"dolore dolor\",\n            \"labels\": [\n                \"tempor amet labore\",\n                \"deserunt\"\n            ]\n        }\n    ],\n    \"properties\": {},\n    \"linkedDatasets\": [\n        {\n            \"id\": \"id officia eu laboris\",\n            \"owner\": \"adipisicing velit\"\n        },\n        {\n            \"id\": \"dolore ut\",\n            \"owner\": \"elit fugiat incididunt\"\n        }\n    ]\n}"
										},
										"url": {
											"raw": "{{baseUrl}}/projects/:owner/:id",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"projects",
												":owner",
												":id"
											],
											"variable": [
												{
													"key": "owner"
												},
												{
													"key": "id"
												}
											]
										}
									},
									"status": "Unprocessable Entity (WebDAV) (RFC 4918)",
									"code": 422,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n \"code\": 1519430,\n \"message\": \"enim\",\n \"details\": \"do\"\n}"
								},
								{
									"name": "Server error",
									"originalRequest": {
										"method": "PUT",
										"header": [
											{
												"description": "Added as a part of security scheme: oauth2",
												"key": "Authorization",
												"value": "<token>"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n    \"title\": \"irure\",\n    \"visibility\": \"PRIVATE\",\n    \"objective\": \"ea deserunt Duis consequat\",\n    \"summary\": \"ut Excepteur in Duis\",\n    \"tags\": [\n        \"Lorem occaecat nisi Duis\",\n        \"amet \"\n    ],\n    \"license\": \"OSODL\",\n    \"files\": [\n        {\n            \"name\": \"^+1sIA\",\n            \"source\": {\n                \"url\": {\n                    \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n                },\n                \"method\": {\n                    \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n                },\n                \"requestHeaders\": {\n                    \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n                },\n                \"requestEntity\": {\n                    \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n                },\n                \"oauthToken\": {\n                    \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n                },\n                \"credentials\": {\n                    \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n                },\n                \"authorization\": {\n                    \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n                },\n                \"databaseSource\": {\n                    \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n                },\n                \"dwccSpec\": {\n                    \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n                },\n                \"viewRequest\": {\n                    \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n                },\n                \"databaseMetadataSpec\": {\n                    \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n                },\n                \"dataTables\": {\n                    \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n                },\n                \"tableSpec\": {\n                    \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n                },\n                \"expandArchive\": {\n                    \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n                }\n            },\n            \"description\": \"officia\",\n            \"labels\": [\n                \"nulla non do laborum esse\",\n                \"ut\"\n            ]\n        },\n        {\n            \"name\": \"o*T\",\n            \"source\": {\n                \"url\": {\n                    \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n                },\n                \"method\": {\n                    \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n                },\n                \"requestHeaders\": {\n                    \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n                },\n                \"requestEntity\": {\n                    \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n                },\n                \"oauthToken\": {\n                    \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n                },\n                \"credentials\": {\n                    \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n                },\n                \"authorization\": {\n                    \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n                },\n                \"databaseSource\": {\n                    \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n                },\n                \"dwccSpec\": {\n                    \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n                },\n                \"viewRequest\": {\n                    \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n                },\n                \"databaseMetadataSpec\": {\n                    \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n                },\n                \"dataTables\": {\n                    \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n                },\n                \"tableSpec\": {\n                    \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n                },\n                \"expandArchive\": {\n                    \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n                }\n            },\n            \"description\": \"dolore dolor\",\n            \"labels\": [\n                \"tempor amet labore\",\n                \"deserunt\"\n            ]\n        }\n    ],\n    \"properties\": {},\n    \"linkedDatasets\": [\n        {\n            \"id\": \"id officia eu laboris\",\n            \"owner\": \"adipisicing velit\"\n        },\n        {\n            \"id\": \"dolore ut\",\n            \"owner\": \"elit fugiat incididunt\"\n        }\n    ]\n}"
										},
										"url": {
											"raw": "{{baseUrl}}/projects/:owner/:id",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"projects",
												":owner",
												":id"
											],
											"variable": [
												{
													"key": "owner"
												},
												{
													"key": "id"
												}
											]
										}
									},
									"status": "Internal Server Error",
									"code": 500,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n \"code\": 1519430,\n \"message\": \"enim\",\n \"details\": \"do\"\n}"
								}
							]
						},
						{
							"name": "Delete a project.",
							"request": {
								"auth": {
									"type": "oauth2"
								},
								"method": "DELETE",
								"header": [],
								"url": {
									"raw": "{{baseUrl}}/projects/:owner/:id",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"projects",
										":owner",
										":id"
									],
									"variable": [
										{
											"key": "owner",
											"value": "adipisicing elit ullamco",
											"description": "(Required) "
										},
										{
											"key": "id",
											"value": "adipisicing elit ullamco",
											"description": "(Required) "
										}
									]
								}
							},
							"response": [
								{
									"name": "Project has been successfully deleted.",
									"originalRequest": {
										"method": "DELETE",
										"header": [
											{
												"description": "Added as a part of security scheme: oauth2",
												"key": "Authorization",
												"value": "<token>"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/projects/:owner/:id",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"projects",
												":owner",
												":id"
											],
											"variable": [
												{
													"key": "owner"
												},
												{
													"key": "id"
												}
											]
										}
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n \"message\": \"voluptate culpa nulla esse\"\n}"
								},
								{
									"name": "Bad request",
									"originalRequest": {
										"method": "DELETE",
										"header": [
											{
												"description": "Added as a part of security scheme: oauth2",
												"key": "Authorization",
												"value": "<token>"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/projects/:owner/:id",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"projects",
												":owner",
												":id"
											],
											"variable": [
												{
													"key": "owner"
												},
												{
													"key": "id"
												}
											]
										}
									},
									"status": "Bad Request",
									"code": 400,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n \"code\": 1519430,\n \"message\": \"enim\",\n \"details\": \"do\"\n}"
								},
								{
									"name": "Unauthorized",
									"originalRequest": {
										"method": "DELETE",
										"header": [
											{
												"description": "Added as a part of security scheme: oauth2",
												"key": "Authorization",
												"value": "<token>"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/projects/:owner/:id",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"projects",
												":owner",
												":id"
											],
											"variable": [
												{
													"key": "owner"
												},
												{
													"key": "id"
												}
											]
										}
									},
									"status": "Unauthorized",
									"code": 401,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n \"code\": 1519430,\n \"message\": \"enim\",\n \"details\": \"do\"\n}"
								},
								{
									"name": "Forbidden",
									"originalRequest": {
										"method": "DELETE",
										"header": [
											{
												"description": "Added as a part of security scheme: oauth2",
												"key": "Authorization",
												"value": "<token>"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/projects/:owner/:id",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"projects",
												":owner",
												":id"
											],
											"variable": [
												{
													"key": "owner"
												},
												{
													"key": "id"
												}
											]
										}
									},
									"status": "Forbidden",
									"code": 403,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n \"code\": 1519430,\n \"message\": \"enim\",\n \"details\": \"do\"\n}"
								},
								{
									"name": "Not found",
									"originalRequest": {
										"method": "DELETE",
										"header": [
											{
												"description": "Added as a part of security scheme: oauth2",
												"key": "Authorization",
												"value": "<token>"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/projects/:owner/:id",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"projects",
												":owner",
												":id"
											],
											"variable": [
												{
													"key": "owner"
												},
												{
													"key": "id"
												}
											]
										}
									},
									"status": "Not Found",
									"code": 404,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n \"code\": 1519430,\n \"message\": \"enim\",\n \"details\": \"do\"\n}"
								},
								{
									"name": "Server error",
									"originalRequest": {
										"method": "DELETE",
										"header": [
											{
												"description": "Added as a part of security scheme: oauth2",
												"key": "Authorization",
												"value": "<token>"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/projects/:owner/:id",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"projects",
												":owner",
												":id"
											],
											"variable": [
												{
													"key": "owner"
												},
												{
													"key": "id"
												}
											]
										}
									},
									"status": "Internal Server Error",
									"code": 500,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n \"code\": 1519430,\n \"message\": \"enim\",\n \"details\": \"do\"\n}"
								}
							]
						},
						{
							"name": "Update an existing project.",
							"request": {
								"auth": {
									"type": "bearer",
									"bearer": [
										{
											"key": "token",
											"value": "{{readWrite}}",
											"type": "string"
										}
									]
								},
								"method": "PATCH",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"title\": \"my project \",\n    \"visibility\": \"OPEN\",\n    \"summary\": \"my little project 3\",\n    \"tags\": [\n        \"hey\",\n        \"how are you\",\n        \"im fine\",\n        \"thank you\"\n    ],\n    \"license\": \"ODC-BY\",\n    \"files\":[\n        {\n            \"name\": \"50 rows\",\n            \"description\": \"made the fix\",\n            \"labels\": [\"raw data\"],\n            \"source\": {\n                \"url\": \"https://file-examples-com.github.io/uploads/2017/02/file_example_XLS_50.xls\",\n                \"method\": \"GET\"\n            }\n        }\n    ]\n}"
								},
								"url": {
									"raw": "{{baseUrl}}/projects/:owner/:id",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"projects",
										":owner",
										":id"
									],
									"variable": [
										{
											"key": "owner",
											"value": "{{org}}",
											"description": "(Required) "
										},
										{
											"key": "id",
											"value": "{{projectid}}",
											"description": "(Required) "
										}
									]
								}
							},
							"response": [
								{
									"name": "Project updated successfully.",
									"originalRequest": {
										"method": "PATCH",
										"header": [
											{
												"description": "Added as a part of security scheme: oauth2",
												"key": "Authorization",
												"value": "<token>"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n    \"title\": \"minim pariatur id \",\n    \"visibility\": \"OPEN\",\n    \"objective\": \"Duis Ut ad\",\n    \"summary\": \"exercitation sint culpa\",\n    \"tags\": [\n        \"occaecat qui\",\n        \"sint amet\"\n    ],\n    \"license\": \"OGL\",\n    \"files\": [\n        {\n            \"name\": \":)_\\\"p1p0,)\",\n            \"source\": {\n                \"url\": {\n                    \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n                },\n                \"method\": {\n                    \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n                },\n                \"requestHeaders\": {\n                    \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n                },\n                \"requestEntity\": {\n                    \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n                },\n                \"oauthToken\": {\n                    \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n                },\n                \"credentials\": {\n                    \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n                },\n                \"authorization\": {\n                    \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n                },\n                \"databaseSource\": {\n                    \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n                },\n                \"dwccSpec\": {\n                    \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n                },\n                \"viewRequest\": {\n                    \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n                },\n                \"databaseMetadataSpec\": {\n                    \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n                },\n                \"dataTables\": {\n                    \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n                },\n                \"tableSpec\": {\n                    \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n                },\n                \"expandArchive\": {\n                    \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n                }\n            },\n            \"description\": \"sint ir\",\n            \"labels\": [\n                \"consectetur eu elit dolore\",\n                \"dolore dolore sint\"\n            ]\n        },\n        {\n            \"name\": \"(!h[Y-|\",\n            \"source\": {\n                \"url\": {\n                    \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n                },\n                \"method\": {\n                    \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n                },\n                \"requestHeaders\": {\n                    \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n                },\n                \"requestEntity\": {\n                    \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n                },\n                \"oauthToken\": {\n                    \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n                },\n                \"credentials\": {\n                    \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n                },\n                \"authorization\": {\n                    \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n                },\n                \"databaseSource\": {\n                    \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n                },\n                \"dwccSpec\": {\n                    \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n                },\n                \"viewRequest\": {\n                    \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n                },\n                \"databaseMetadataSpec\": {\n                    \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n                },\n                \"dataTables\": {\n                    \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n                },\n                \"tableSpec\": {\n                    \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n                },\n                \"expandArchive\": {\n                    \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n                }\n            },\n            \"description\": \"in amet\",\n            \"labels\": [\n                \"magna pariatur aute id\",\n                \"aliquip laboris est\"\n            ]\n        }\n    ],\n    \"properties\": {},\n    \"linkedDatasets\": [\n        {\n            \"id\": \"nulla\",\n            \"owner\": \"ea cillum anim\"\n        },\n        {\n            \"id\": \"dolore qui et\",\n            \"owner\": \"exercitation pariatur sit magna\"\n        }\n    ]\n}"
										},
										"url": {
											"raw": "{{baseUrl}}/projects/:owner/:id",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"projects",
												":owner",
												":id"
											],
											"variable": [
												{
													"key": "owner"
												},
												{
													"key": "id"
												}
											]
										}
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n \"message\": \"voluptate culpa nulla esse\"\n}"
								},
								{
									"name": "Bad request",
									"originalRequest": {
										"method": "PATCH",
										"header": [
											{
												"description": "Added as a part of security scheme: oauth2",
												"key": "Authorization",
												"value": "<token>"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n    \"title\": \"minim pariatur id \",\n    \"visibility\": \"OPEN\",\n    \"objective\": \"Duis Ut ad\",\n    \"summary\": \"exercitation sint culpa\",\n    \"tags\": [\n        \"occaecat qui\",\n        \"sint amet\"\n    ],\n    \"license\": \"OGL\",\n    \"files\": [\n        {\n            \"name\": \":)_\\\"p1p0,)\",\n            \"source\": {\n                \"url\": {\n                    \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n                },\n                \"method\": {\n                    \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n                },\n                \"requestHeaders\": {\n                    \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n                },\n                \"requestEntity\": {\n                    \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n                },\n                \"oauthToken\": {\n                    \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n                },\n                \"credentials\": {\n                    \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n                },\n                \"authorization\": {\n                    \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n                },\n                \"databaseSource\": {\n                    \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n                },\n                \"dwccSpec\": {\n                    \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n                },\n                \"viewRequest\": {\n                    \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n                },\n                \"databaseMetadataSpec\": {\n                    \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n                },\n                \"dataTables\": {\n                    \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n                },\n                \"tableSpec\": {\n                    \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n                },\n                \"expandArchive\": {\n                    \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n                }\n            },\n            \"description\": \"sint ir\",\n            \"labels\": [\n                \"consectetur eu elit dolore\",\n                \"dolore dolore sint\"\n            ]\n        },\n        {\n            \"name\": \"(!h[Y-|\",\n            \"source\": {\n                \"url\": {\n                    \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n                },\n                \"method\": {\n                    \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n                },\n                \"requestHeaders\": {\n                    \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n                },\n                \"requestEntity\": {\n                    \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n                },\n                \"oauthToken\": {\n                    \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n                },\n                \"credentials\": {\n                    \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n                },\n                \"authorization\": {\n                    \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n                },\n                \"databaseSource\": {\n                    \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n                },\n                \"dwccSpec\": {\n                    \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n                },\n                \"viewRequest\": {\n                    \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n                },\n                \"databaseMetadataSpec\": {\n                    \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n                },\n                \"dataTables\": {\n                    \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n                },\n                \"tableSpec\": {\n                    \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n                },\n                \"expandArchive\": {\n                    \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n                }\n            },\n            \"description\": \"in amet\",\n            \"labels\": [\n                \"magna pariatur aute id\",\n                \"aliquip laboris est\"\n            ]\n        }\n    ],\n    \"properties\": {},\n    \"linkedDatasets\": [\n        {\n            \"id\": \"nulla\",\n            \"owner\": \"ea cillum anim\"\n        },\n        {\n            \"id\": \"dolore qui et\",\n            \"owner\": \"exercitation pariatur sit magna\"\n        }\n    ]\n}"
										},
										"url": {
											"raw": "{{baseUrl}}/projects/:owner/:id",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"projects",
												":owner",
												":id"
											],
											"variable": [
												{
													"key": "owner"
												},
												{
													"key": "id"
												}
											]
										}
									},
									"status": "Bad Request",
									"code": 400,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n \"code\": 1519430,\n \"message\": \"enim\",\n \"details\": \"do\"\n}"
								},
								{
									"name": "Unauthorized",
									"originalRequest": {
										"method": "PATCH",
										"header": [
											{
												"description": "Added as a part of security scheme: oauth2",
												"key": "Authorization",
												"value": "<token>"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n    \"title\": \"minim pariatur id \",\n    \"visibility\": \"OPEN\",\n    \"objective\": \"Duis Ut ad\",\n    \"summary\": \"exercitation sint culpa\",\n    \"tags\": [\n        \"occaecat qui\",\n        \"sint amet\"\n    ],\n    \"license\": \"OGL\",\n    \"files\": [\n        {\n            \"name\": \":)_\\\"p1p0,)\",\n            \"source\": {\n                \"url\": {\n                    \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n                },\n                \"method\": {\n                    \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n                },\n                \"requestHeaders\": {\n                    \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n                },\n                \"requestEntity\": {\n                    \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n                },\n                \"oauthToken\": {\n                    \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n                },\n                \"credentials\": {\n                    \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n                },\n                \"authorization\": {\n                    \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n                },\n                \"databaseSource\": {\n                    \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n                },\n                \"dwccSpec\": {\n                    \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n                },\n                \"viewRequest\": {\n                    \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n                },\n                \"databaseMetadataSpec\": {\n                    \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n                },\n                \"dataTables\": {\n                    \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n                },\n                \"tableSpec\": {\n                    \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n                },\n                \"expandArchive\": {\n                    \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n                }\n            },\n            \"description\": \"sint ir\",\n            \"labels\": [\n                \"consectetur eu elit dolore\",\n                \"dolore dolore sint\"\n            ]\n        },\n        {\n            \"name\": \"(!h[Y-|\",\n            \"source\": {\n                \"url\": {\n                    \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n                },\n                \"method\": {\n                    \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n                },\n                \"requestHeaders\": {\n                    \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n                },\n                \"requestEntity\": {\n                    \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n                },\n                \"oauthToken\": {\n                    \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n                },\n                \"credentials\": {\n                    \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n                },\n                \"authorization\": {\n                    \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n                },\n                \"databaseSource\": {\n                    \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n                },\n                \"dwccSpec\": {\n                    \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n                },\n                \"viewRequest\": {\n                    \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n                },\n                \"databaseMetadataSpec\": {\n                    \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n                },\n                \"dataTables\": {\n                    \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n                },\n                \"tableSpec\": {\n                    \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n                },\n                \"expandArchive\": {\n                    \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n                }\n            },\n            \"description\": \"in amet\",\n            \"labels\": [\n                \"magna pariatur aute id\",\n                \"aliquip laboris est\"\n            ]\n        }\n    ],\n    \"properties\": {},\n    \"linkedDatasets\": [\n        {\n            \"id\": \"nulla\",\n            \"owner\": \"ea cillum anim\"\n        },\n        {\n            \"id\": \"dolore qui et\",\n            \"owner\": \"exercitation pariatur sit magna\"\n        }\n    ]\n}"
										},
										"url": {
											"raw": "{{baseUrl}}/projects/:owner/:id",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"projects",
												":owner",
												":id"
											],
											"variable": [
												{
													"key": "owner"
												},
												{
													"key": "id"
												}
											]
										}
									},
									"status": "Unauthorized",
									"code": 401,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n \"code\": 1519430,\n \"message\": \"enim\",\n \"details\": \"do\"\n}"
								},
								{
									"name": "Forbidden",
									"originalRequest": {
										"method": "PATCH",
										"header": [
											{
												"description": "Added as a part of security scheme: oauth2",
												"key": "Authorization",
												"value": "<token>"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n    \"title\": \"minim pariatur id \",\n    \"visibility\": \"OPEN\",\n    \"objective\": \"Duis Ut ad\",\n    \"summary\": \"exercitation sint culpa\",\n    \"tags\": [\n        \"occaecat qui\",\n        \"sint amet\"\n    ],\n    \"license\": \"OGL\",\n    \"files\": [\n        {\n            \"name\": \":)_\\\"p1p0,)\",\n            \"source\": {\n                \"url\": {\n                    \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n                },\n                \"method\": {\n                    \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n                },\n                \"requestHeaders\": {\n                    \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n                },\n                \"requestEntity\": {\n                    \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n                },\n                \"oauthToken\": {\n                    \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n                },\n                \"credentials\": {\n                    \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n                },\n                \"authorization\": {\n                    \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n                },\n                \"databaseSource\": {\n                    \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n                },\n                \"dwccSpec\": {\n                    \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n                },\n                \"viewRequest\": {\n                    \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n                },\n                \"databaseMetadataSpec\": {\n                    \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n                },\n                \"dataTables\": {\n                    \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n                },\n                \"tableSpec\": {\n                    \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n                },\n                \"expandArchive\": {\n                    \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n                }\n            },\n            \"description\": \"sint ir\",\n            \"labels\": [\n                \"consectetur eu elit dolore\",\n                \"dolore dolore sint\"\n            ]\n        },\n        {\n            \"name\": \"(!h[Y-|\",\n            \"source\": {\n                \"url\": {\n                    \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n                },\n                \"method\": {\n                    \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n                },\n                \"requestHeaders\": {\n                    \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n                },\n                \"requestEntity\": {\n                    \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n                },\n                \"oauthToken\": {\n                    \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n                },\n                \"credentials\": {\n                    \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n                },\n                \"authorization\": {\n                    \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n                },\n                \"databaseSource\": {\n                    \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n                },\n                \"dwccSpec\": {\n                    \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n                },\n                \"viewRequest\": {\n                    \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n                },\n                \"databaseMetadataSpec\": {\n                    \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n                },\n                \"dataTables\": {\n                    \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n                },\n                \"tableSpec\": {\n                    \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n                },\n                \"expandArchive\": {\n                    \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n                }\n            },\n            \"description\": \"in amet\",\n            \"labels\": [\n                \"magna pariatur aute id\",\n                \"aliquip laboris est\"\n            ]\n        }\n    ],\n    \"properties\": {},\n    \"linkedDatasets\": [\n        {\n            \"id\": \"nulla\",\n            \"owner\": \"ea cillum anim\"\n        },\n        {\n            \"id\": \"dolore qui et\",\n            \"owner\": \"exercitation pariatur sit magna\"\n        }\n    ]\n}"
										},
										"url": {
											"raw": "{{baseUrl}}/projects/:owner/:id",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"projects",
												":owner",
												":id"
											],
											"variable": [
												{
													"key": "owner"
												},
												{
													"key": "id"
												}
											]
										}
									},
									"status": "Forbidden",
									"code": 403,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n \"code\": 1519430,\n \"message\": \"enim\",\n \"details\": \"do\"\n}"
								},
								{
									"name": "Not found",
									"originalRequest": {
										"method": "PATCH",
										"header": [
											{
												"description": "Added as a part of security scheme: oauth2",
												"key": "Authorization",
												"value": "<token>"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n    \"title\": \"minim pariatur id \",\n    \"visibility\": \"OPEN\",\n    \"objective\": \"Duis Ut ad\",\n    \"summary\": \"exercitation sint culpa\",\n    \"tags\": [\n        \"occaecat qui\",\n        \"sint amet\"\n    ],\n    \"license\": \"OGL\",\n    \"files\": [\n        {\n            \"name\": \":)_\\\"p1p0,)\",\n            \"source\": {\n                \"url\": {\n                    \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n                },\n                \"method\": {\n                    \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n                },\n                \"requestHeaders\": {\n                    \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n                },\n                \"requestEntity\": {\n                    \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n                },\n                \"oauthToken\": {\n                    \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n                },\n                \"credentials\": {\n                    \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n                },\n                \"authorization\": {\n                    \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n                },\n                \"databaseSource\": {\n                    \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n                },\n                \"dwccSpec\": {\n                    \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n                },\n                \"viewRequest\": {\n                    \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n                },\n                \"databaseMetadataSpec\": {\n                    \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n                },\n                \"dataTables\": {\n                    \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n                },\n                \"tableSpec\": {\n                    \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n                },\n                \"expandArchive\": {\n                    \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n                }\n            },\n            \"description\": \"sint ir\",\n            \"labels\": [\n                \"consectetur eu elit dolore\",\n                \"dolore dolore sint\"\n            ]\n        },\n        {\n            \"name\": \"(!h[Y-|\",\n            \"source\": {\n                \"url\": {\n                    \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n                },\n                \"method\": {\n                    \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n                },\n                \"requestHeaders\": {\n                    \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n                },\n                \"requestEntity\": {\n                    \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n                },\n                \"oauthToken\": {\n                    \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n                },\n                \"credentials\": {\n                    \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n                },\n                \"authorization\": {\n                    \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n                },\n                \"databaseSource\": {\n                    \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n                },\n                \"dwccSpec\": {\n                    \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n                },\n                \"viewRequest\": {\n                    \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n                },\n                \"databaseMetadataSpec\": {\n                    \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n                },\n                \"dataTables\": {\n                    \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n                },\n                \"tableSpec\": {\n                    \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n                },\n                \"expandArchive\": {\n                    \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n                }\n            },\n            \"description\": \"in amet\",\n            \"labels\": [\n                \"magna pariatur aute id\",\n                \"aliquip laboris est\"\n            ]\n        }\n    ],\n    \"properties\": {},\n    \"linkedDatasets\": [\n        {\n            \"id\": \"nulla\",\n            \"owner\": \"ea cillum anim\"\n        },\n        {\n            \"id\": \"dolore qui et\",\n            \"owner\": \"exercitation pariatur sit magna\"\n        }\n    ]\n}"
										},
										"url": {
											"raw": "{{baseUrl}}/projects/:owner/:id",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"projects",
												":owner",
												":id"
											],
											"variable": [
												{
													"key": "owner"
												},
												{
													"key": "id"
												}
											]
										}
									},
									"status": "Not Found",
									"code": 404,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n \"code\": 1519430,\n \"message\": \"enim\",\n \"details\": \"do\"\n}"
								},
								{
									"name": "Bad request",
									"originalRequest": {
										"method": "PATCH",
										"header": [
											{
												"description": "Added as a part of security scheme: oauth2",
												"key": "Authorization",
												"value": "<token>"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n    \"title\": \"minim pariatur id \",\n    \"visibility\": \"OPEN\",\n    \"objective\": \"Duis Ut ad\",\n    \"summary\": \"exercitation sint culpa\",\n    \"tags\": [\n        \"occaecat qui\",\n        \"sint amet\"\n    ],\n    \"license\": \"OGL\",\n    \"files\": [\n        {\n            \"name\": \":)_\\\"p1p0,)\",\n            \"source\": {\n                \"url\": {\n                    \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n                },\n                \"method\": {\n                    \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n                },\n                \"requestHeaders\": {\n                    \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n                },\n                \"requestEntity\": {\n                    \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n                },\n                \"oauthToken\": {\n                    \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n                },\n                \"credentials\": {\n                    \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n                },\n                \"authorization\": {\n                    \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n                },\n                \"databaseSource\": {\n                    \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n                },\n                \"dwccSpec\": {\n                    \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n                },\n                \"viewRequest\": {\n                    \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n                },\n                \"databaseMetadataSpec\": {\n                    \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n                },\n                \"dataTables\": {\n                    \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n                },\n                \"tableSpec\": {\n                    \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n                },\n                \"expandArchive\": {\n                    \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n                }\n            },\n            \"description\": \"sint ir\",\n            \"labels\": [\n                \"consectetur eu elit dolore\",\n                \"dolore dolore sint\"\n            ]\n        },\n        {\n            \"name\": \"(!h[Y-|\",\n            \"source\": {\n                \"url\": {\n                    \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n                },\n                \"method\": {\n                    \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n                },\n                \"requestHeaders\": {\n                    \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n                },\n                \"requestEntity\": {\n                    \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n                },\n                \"oauthToken\": {\n                    \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n                },\n                \"credentials\": {\n                    \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n                },\n                \"authorization\": {\n                    \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n                },\n                \"databaseSource\": {\n                    \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n                },\n                \"dwccSpec\": {\n                    \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n                },\n                \"viewRequest\": {\n                    \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n                },\n                \"databaseMetadataSpec\": {\n                    \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n                },\n                \"dataTables\": {\n                    \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n                },\n                \"tableSpec\": {\n                    \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n                },\n                \"expandArchive\": {\n                    \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n                }\n            },\n            \"description\": \"in amet\",\n            \"labels\": [\n                \"magna pariatur aute id\",\n                \"aliquip laboris est\"\n            ]\n        }\n    ],\n    \"properties\": {},\n    \"linkedDatasets\": [\n        {\n            \"id\": \"nulla\",\n            \"owner\": \"ea cillum anim\"\n        },\n        {\n            \"id\": \"dolore qui et\",\n            \"owner\": \"exercitation pariatur sit magna\"\n        }\n    ]\n}"
										},
										"url": {
											"raw": "{{baseUrl}}/projects/:owner/:id",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"projects",
												":owner",
												":id"
											],
											"variable": [
												{
													"key": "owner"
												},
												{
													"key": "id"
												}
											]
										}
									},
									"status": "Unprocessable Entity (WebDAV) (RFC 4918)",
									"code": 422,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n \"code\": 1519430,\n \"message\": \"enim\",\n \"details\": \"do\"\n}"
								},
								{
									"name": "Server error",
									"originalRequest": {
										"method": "PATCH",
										"header": [
											{
												"description": "Added as a part of security scheme: oauth2",
												"key": "Authorization",
												"value": "<token>"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n    \"title\": \"minim pariatur id \",\n    \"visibility\": \"OPEN\",\n    \"objective\": \"Duis Ut ad\",\n    \"summary\": \"exercitation sint culpa\",\n    \"tags\": [\n        \"occaecat qui\",\n        \"sint amet\"\n    ],\n    \"license\": \"OGL\",\n    \"files\": [\n        {\n            \"name\": \":)_\\\"p1p0,)\",\n            \"source\": {\n                \"url\": {\n                    \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n                },\n                \"method\": {\n                    \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n                },\n                \"requestHeaders\": {\n                    \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n                },\n                \"requestEntity\": {\n                    \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n                },\n                \"oauthToken\": {\n                    \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n                },\n                \"credentials\": {\n                    \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n                },\n                \"authorization\": {\n                    \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n                },\n                \"databaseSource\": {\n                    \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n                },\n                \"dwccSpec\": {\n                    \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n                },\n                \"viewRequest\": {\n                    \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n                },\n                \"databaseMetadataSpec\": {\n                    \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n                },\n                \"dataTables\": {\n                    \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n                },\n                \"tableSpec\": {\n                    \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n                },\n                \"expandArchive\": {\n                    \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n                }\n            },\n            \"description\": \"sint ir\",\n            \"labels\": [\n                \"consectetur eu elit dolore\",\n                \"dolore dolore sint\"\n            ]\n        },\n        {\n            \"name\": \"(!h[Y-|\",\n            \"source\": {\n                \"url\": {\n                    \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n                },\n                \"method\": {\n                    \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n                },\n                \"requestHeaders\": {\n                    \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n                },\n                \"requestEntity\": {\n                    \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n                },\n                \"oauthToken\": {\n                    \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n                },\n                \"credentials\": {\n                    \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n                },\n                \"authorization\": {\n                    \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n                },\n                \"databaseSource\": {\n                    \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n                },\n                \"dwccSpec\": {\n                    \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n                },\n                \"viewRequest\": {\n                    \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n                },\n                \"databaseMetadataSpec\": {\n                    \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n                },\n                \"dataTables\": {\n                    \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n                },\n                \"tableSpec\": {\n                    \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n                },\n                \"expandArchive\": {\n                    \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n                }\n            },\n            \"description\": \"in amet\",\n            \"labels\": [\n                \"magna pariatur aute id\",\n                \"aliquip laboris est\"\n            ]\n        }\n    ],\n    \"properties\": {},\n    \"linkedDatasets\": [\n        {\n            \"id\": \"nulla\",\n            \"owner\": \"ea cillum anim\"\n        },\n        {\n            \"id\": \"dolore qui et\",\n            \"owner\": \"exercitation pariatur sit magna\"\n        }\n    ]\n}"
										},
										"url": {
											"raw": "{{baseUrl}}/projects/:owner/:id",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"projects",
												":owner",
												":id"
											],
											"variable": [
												{
													"key": "owner"
												},
												{
													"key": "id"
												}
											]
										}
									},
									"status": "Internal Server Error",
									"code": 500,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n \"code\": 1519430,\n \"message\": \"enim\",\n \"details\": \"do\"\n}"
								}
							]
						},
						{
							"name": "Retrieve a project by version.",
							"request": {
								"auth": {
									"type": "bearer",
									"bearer": [
										{
											"key": "token",
											"value": "{{readWrite}}",
											"type": "string"
										}
									]
								},
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{baseUrl}}/projects/:owner/:id/v/:versionId",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"projects",
										":owner",
										":id",
										"v",
										":versionId"
									],
									"variable": [
										{
											"key": "owner",
											"value": "{{org}}",
											"description": "(Required) "
										},
										{
											"key": "id",
											"value": "{{projectid}}",
											"description": "(Required) "
										},
										{
											"key": "versionId",
											"value": "72d01b28-6e43-4665-bd09-0f3278914cdc",
											"description": "(Required) "
										}
									]
								}
							},
							"response": [
								{
									"name": "Successfully retrieved project by version",
									"originalRequest": {
										"method": "GET",
										"header": [
											{
												"description": "Added as a part of security scheme: oauth2",
												"key": "Authorization",
												"value": "<token>"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/projects/:owner/:id/v/:versionId",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"projects",
												":owner",
												":id",
												"v",
												":versionId"
											],
											"variable": [
												{
													"key": "owner"
												},
												{
													"key": "id"
												},
												{
													"key": "versionId"
												}
											]
										}
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n \"accessLevel\": \"WRITE\",\n \"created\": \"aute dolor Duis\",\n \"id\": \"officia proident\",\n \"owner\": \"eiusmod est non\",\n \"status\": \"INPROGRESS\",\n \"title\": \"ad\",\n \"updated\": \"Duis qui voluptate Lorem\",\n \"version\": \"voluptate Lorem\",\n \"visibility\": \"OPEN\",\n \"objective\": \"nostrud incididu\",\n \"summary\": \"consectetur do\",\n \"tags\": [\n  \"dolore ea laborum ad \",\n  \"Excepteur eu\"\n ],\n \"license\": \"CC BY-NC-SA\",\n \"assetStatus\": {\n  \"assetStatusLabel\": \"cupid\",\n  \"dispositionLabel\": \"dolor\"\n },\n \"files\": [\n  {\n   \"created\": \"magna\",\n   \"name\": \"80\",\n   \"updated\": \"non voluptate\",\n   \"sizeInBytes\": -95558021,\n   \"source\": {\n    \"syncStatus\": {\n     \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    \"url\": {\n     \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    \"method\": {\n     \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    \"requestHeaders\": {\n     \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    \"requestEntity\": {\n     \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    \"oauthToken\": {\n     \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    \"credentials\": {\n     \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    \"authorization\": {\n     \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    \"databaseSource\": {\n     \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    \"dwccSpec\": {\n     \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    \"viewRequest\": {\n     \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    \"databaseMetadataSpec\": {\n     \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    \"dataTables\": {\n     \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    \"tableSpec\": {\n     \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    \"expandArchive\": {\n     \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    \"syncSummary\": {\n     \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    \"lastSyncStart\": {\n     \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    \"lastSyncSuccess\": {\n     \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    \"lastSyncFailure\": {\n     \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    }\n   },\n   \"description\": \"nulla id cupidatat\",\n   \"labels\": [\n    \"et do aliquip dolore\",\n    \"labore in nulla\"\n   ]\n  },\n  {\n   \"created\": \"esse amet sint\",\n   \"name\": \"'^Bgb&E-t\",\n   \"updated\": \"elit in\",\n   \"sizeInBytes\": 92000925,\n   \"source\": {\n    \"syncStatus\": {\n     \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    \"url\": {\n     \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    \"method\": {\n     \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    \"requestHeaders\": {\n     \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    \"requestEntity\": {\n     \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    \"oauthToken\": {\n     \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    \"credentials\": {\n     \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    \"authorization\": {\n     \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    \"databaseSource\": {\n     \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    \"dwccSpec\": {\n     \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    \"viewRequest\": {\n     \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    \"databaseMetadataSpec\": {\n     \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    \"dataTables\": {\n     \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    \"tableSpec\": {\n     \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    \"expandArchive\": {\n     \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    \"syncSummary\": {\n     \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    \"lastSyncStart\": {\n     \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    \"lastSyncSuccess\": {\n     \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    \"lastSyncFailure\": {\n     \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    }\n   },\n   \"description\": \"deserunt\",\n   \"labels\": [\n    \"voluptate adipisicing exercitation tempor\",\n    \"aute\"\n   ]\n  }\n ],\n \"properties\": {},\n \"linkedDatasets\": [\n  {\n   \"accessLevel\": \"ADMIN\",\n   \"created\": \"proident\",\n   \"id\": \"ex\",\n   \"owner\": \"aliqua ad non exercitation aliquip\",\n   \"title\": \"commodo consectetur eu ut\",\n   \"updated\": \"nostrud et\",\n   \"visibility\": \"PRIVATE\",\n   \"description\": \"nisi enim veniam in\",\n   \"summary\": \"voluptate quis\",\n   \"version\": \"sunt reprehenderit\",\n   \"tags\": [\n    \"pariatur ad elit\",\n    \"et Duis sint amet\"\n   ],\n   \"license\": \"CC BY-NC-ND\"\n  },\n  {\n   \"accessLevel\": \"ADMIN\",\n   \"created\": \"culpa id Duis pariatur\",\n   \"id\": \"veniam magna mollit\",\n   \"owner\": \"voluptate ut\",\n   \"title\": \"ex U\",\n   \"updated\": \"sit dolore et Ut\",\n   \"visibility\": \"PRIVATE\",\n   \"description\": \"voluptate nostrud aliqua ea\",\n   \"summary\": \"magna\",\n   \"version\": \"de\",\n   \"tags\": [\n    \"magna aliqua\",\n    \"adipisicing do id consequat nisi\"\n   ],\n   \"license\": \"CDLA-Sharing-1.0\"\n  }\n ]\n}"
								},
								{
									"name": "Bad request",
									"originalRequest": {
										"method": "GET",
										"header": [
											{
												"description": "Added as a part of security scheme: oauth2",
												"key": "Authorization",
												"value": "<token>"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/projects/:owner/:id/v/:versionId",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"projects",
												":owner",
												":id",
												"v",
												":versionId"
											],
											"variable": [
												{
													"key": "owner"
												},
												{
													"key": "id"
												},
												{
													"key": "versionId"
												}
											]
										}
									},
									"status": "Bad Request",
									"code": 400,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n \"code\": 1519430,\n \"message\": \"enim\",\n \"details\": \"do\"\n}"
								},
								{
									"name": "Unauthorized",
									"originalRequest": {
										"method": "GET",
										"header": [
											{
												"description": "Added as a part of security scheme: oauth2",
												"key": "Authorization",
												"value": "<token>"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/projects/:owner/:id/v/:versionId",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"projects",
												":owner",
												":id",
												"v",
												":versionId"
											],
											"variable": [
												{
													"key": "owner"
												},
												{
													"key": "id"
												},
												{
													"key": "versionId"
												}
											]
										}
									},
									"status": "Unauthorized",
									"code": 401,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n \"code\": 1519430,\n \"message\": \"enim\",\n \"details\": \"do\"\n}"
								},
								{
									"name": "Forbidden",
									"originalRequest": {
										"method": "GET",
										"header": [
											{
												"description": "Added as a part of security scheme: oauth2",
												"key": "Authorization",
												"value": "<token>"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/projects/:owner/:id/v/:versionId",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"projects",
												":owner",
												":id",
												"v",
												":versionId"
											],
											"variable": [
												{
													"key": "owner"
												},
												{
													"key": "id"
												},
												{
													"key": "versionId"
												}
											]
										}
									},
									"status": "Forbidden",
									"code": 403,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n \"code\": 1519430,\n \"message\": \"enim\",\n \"details\": \"do\"\n}"
								},
								{
									"name": "Not found",
									"originalRequest": {
										"method": "GET",
										"header": [
											{
												"description": "Added as a part of security scheme: oauth2",
												"key": "Authorization",
												"value": "<token>"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/projects/:owner/:id/v/:versionId",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"projects",
												":owner",
												":id",
												"v",
												":versionId"
											],
											"variable": [
												{
													"key": "owner"
												},
												{
													"key": "id"
												},
												{
													"key": "versionId"
												}
											]
										}
									},
									"status": "Not Found",
									"code": 404,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n \"code\": 1519430,\n \"message\": \"enim\",\n \"details\": \"do\"\n}"
								},
								{
									"name": "Server error",
									"originalRequest": {
										"method": "GET",
										"header": [
											{
												"description": "Added as a part of security scheme: oauth2",
												"key": "Authorization",
												"value": "<token>"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/projects/:owner/:id/v/:versionId",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"projects",
												":owner",
												":id",
												"v",
												":versionId"
											],
											"variable": [
												{
													"key": "owner"
												},
												{
													"key": "id"
												},
												{
													"key": "versionId"
												}
											]
										}
									},
									"status": "Internal Server Error",
									"code": 500,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n \"code\": 1519430,\n \"message\": \"enim\",\n \"details\": \"do\"\n}"
								}
							]
						}
					]
				},
				{
					"name": "Gets projects by owner.",
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{readWrite}}",
									"type": "string"
								}
							]
						},
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{baseUrl}}/projects/:owner",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"projects",
								":owner"
							],
							"query": [
								{
									"key": "limit",
									"value": "adipisicing elit ullamco",
									"disabled": true
								},
								{
									"key": "next",
									"value": "adipisicing elit ullamco",
									"disabled": true
								}
							],
							"variable": [
								{
									"key": "owner",
									"value": "{{org}}",
									"description": "(Required) "
								}
							]
						}
					},
					"response": [
						{
							"name": "Successfully retrieved project",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"description": "Added as a part of security scheme: oauth2",
										"key": "Authorization",
										"value": "<token>"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/projects/:owner?limit=adipisicing elit ullamco&next=adipisicing elit ullamco",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"projects",
										":owner"
									],
									"query": [
										{
											"key": "limit",
											"value": "adipisicing elit ullamco"
										},
										{
											"key": "next",
											"value": "adipisicing elit ullamco"
										}
									],
									"variable": [
										{
											"key": "owner"
										}
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n \"count\": 89612294,\n \"records\": [\n  {\n   \"accessLevel\": \"READ\",\n   \"created\": \"sint ex exercitation Duis Excepteur\",\n   \"id\": \"minim\",\n   \"owner\": \"Ut nostrud dolo\",\n   \"status\": \"INPROGRESS\",\n   \"title\": \"culpa proident incididunt\",\n   \"updated\": \"velit\",\n   \"version\": \"adipi\",\n   \"visibility\": \"PRIVATE\",\n   \"objective\": \"ad laborum exercitation\",\n   \"summary\": \"ex cillum magna aute\",\n   \"tags\": [\n    \"proident nostrud in laboris\",\n    \"ut\"\n   ],\n   \"license\": \"ODC-BY\",\n   \"assetStatus\": {\n    \"assetStatusLabel\": \"aliqua\",\n    \"dispositionLabel\": \"Ut Lorem in ad\"\n   },\n   \"files\": [\n    {\n     \"created\": \"minim culpa enim exercitation\",\n     \"name\": \")2P! \",\n     \"updated\": \"in dolor Excepteur tempor\",\n     \"sizeInBytes\": 53461958,\n     \"source\": {\n      \"syncStatus\": {\n       \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      \"url\": {\n       \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      \"method\": {\n       \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      \"requestHeaders\": {\n       \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      \"requestEntity\": {\n       \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      \"oauthToken\": {\n       \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      \"credentials\": {\n       \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      \"authorization\": {\n       \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      \"databaseSource\": {\n       \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      \"dwccSpec\": {\n       \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      \"viewRequest\": {\n       \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      \"databaseMetadataSpec\": {\n       \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      \"dataTables\": {\n       \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      \"tableSpec\": {\n       \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      \"expandArchive\": {\n       \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      \"syncSummary\": {\n       \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      \"lastSyncStart\": {\n       \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      \"lastSyncSuccess\": {\n       \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      \"lastSyncFailure\": {\n       \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      }\n     },\n     \"description\": \"dolore Duis adipisicing ipsum labore\",\n     \"labels\": [\n      \"Lorem\",\n      \"ut\"\n     ]\n    },\n    {\n     \"created\": \"sint sunt\",\n     \"name\": \"$pB'@\",\n     \"updated\": \"proident mollit id\",\n     \"sizeInBytes\": -87434958,\n     \"source\": {\n      \"syncStatus\": {\n       \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      \"url\": {\n       \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      \"method\": {\n       \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      \"requestHeaders\": {\n       \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      \"requestEntity\": {\n       \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      \"oauthToken\": {\n       \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      \"credentials\": {\n       \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      \"authorization\": {\n       \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      \"databaseSource\": {\n       \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      \"dwccSpec\": {\n       \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      \"viewRequest\": {\n       \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      \"databaseMetadataSpec\": {\n       \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      \"dataTables\": {\n       \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      \"tableSpec\": {\n       \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      \"expandArchive\": {\n       \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      \"syncSummary\": {\n       \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      \"lastSyncStart\": {\n       \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      \"lastSyncSuccess\": {\n       \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      \"lastSyncFailure\": {\n       \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      }\n     },\n     \"description\": \"minim elit ullamco\",\n     \"labels\": [\n      \"reprehenderit anim enim deserunt\",\n      \"sit adipisicing sint irure\"\n     ]\n    }\n   ],\n   \"properties\": {},\n   \"linkedDatasets\": [\n    {\n     \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    {\n     \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    }\n   ]\n  },\n  {\n   \"accessLevel\": \"NONE\",\n   \"created\": \"est tempor\",\n   \"id\": \"id voluptate laboru\",\n   \"owner\": \"proident fugiat veniam cons\",\n   \"status\": \"NEW\",\n   \"title\": \"Excepteur Duis d\",\n   \"updated\": \"consect\",\n   \"version\": \"ex Duis dolor ullamco fugiat\",\n   \"visibility\": \"PRIVATE\",\n   \"objective\": \"in amet\",\n   \"summary\": \"commodo\",\n   \"tags\": [\n    \"id ex dolor\",\n    \"elit ipsu\"\n   ],\n   \"license\": \"Public Domain\",\n   \"assetStatus\": {\n    \"assetStatusLabel\": \"Duis do\",\n    \"dispositionLabel\": \"consectetur\"\n   },\n   \"files\": [\n    {\n     \"created\": \"aliquip labore reprehenderit id\",\n     \"name\": \"j|Kz9\",\n     \"updated\": \"eiusmod exercitation aute eu\",\n     \"sizeInBytes\": 14912116,\n     \"source\": {\n      \"syncStatus\": {\n       \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      \"url\": {\n       \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      \"method\": {\n       \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      \"requestHeaders\": {\n       \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      \"requestEntity\": {\n       \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      \"oauthToken\": {\n       \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      \"credentials\": {\n       \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      \"authorization\": {\n       \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      \"databaseSource\": {\n       \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      \"dwccSpec\": {\n       \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      \"viewRequest\": {\n       \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      \"databaseMetadataSpec\": {\n       \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      \"dataTables\": {\n       \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      \"tableSpec\": {\n       \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      \"expandArchive\": {\n       \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      \"syncSummary\": {\n       \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      \"lastSyncStart\": {\n       \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      \"lastSyncSuccess\": {\n       \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      \"lastSyncFailure\": {\n       \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      }\n     },\n     \"description\": \"mollit eli\",\n     \"labels\": [\n      \"aliqua amet\",\n      \"dolore id\"\n     ]\n    },\n    {\n     \"created\": \"eiusmod aliquip\",\n     \"name\": \"SJmw];D\",\n     \"updated\": \"tempor Duis consequat\",\n     \"sizeInBytes\": -49817302,\n     \"source\": {\n      \"syncStatus\": {\n       \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      \"url\": {\n       \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      \"method\": {\n       \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      \"requestHeaders\": {\n       \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      \"requestEntity\": {\n       \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      \"oauthToken\": {\n       \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      \"credentials\": {\n       \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      \"authorization\": {\n       \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      \"databaseSource\": {\n       \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      \"dwccSpec\": {\n       \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      \"viewRequest\": {\n       \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      \"databaseMetadataSpec\": {\n       \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      \"dataTables\": {\n       \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      \"tableSpec\": {\n       \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      \"expandArchive\": {\n       \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      \"syncSummary\": {\n       \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      \"lastSyncStart\": {\n       \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      \"lastSyncSuccess\": {\n       \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      \"lastSyncFailure\": {\n       \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      }\n     },\n     \"description\": \"aliquip Excepteur dolor\",\n     \"labels\": [\n      \"quis reprehenderit\",\n      \"in cupidatat minim sint pariatur\"\n     ]\n    }\n   ],\n   \"properties\": {},\n   \"linkedDatasets\": [\n    {\n     \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    {\n     \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    }\n   ]\n  }\n ],\n \"nextPageToken\": \"esse ea magna sunt\"\n}"
						},
						{
							"name": "Bad request",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"description": "Added as a part of security scheme: oauth2",
										"key": "Authorization",
										"value": "<token>"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/projects/:owner?limit=adipisicing elit ullamco&next=adipisicing elit ullamco",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"projects",
										":owner"
									],
									"query": [
										{
											"key": "limit",
											"value": "adipisicing elit ullamco"
										},
										{
											"key": "next",
											"value": "adipisicing elit ullamco"
										}
									],
									"variable": [
										{
											"key": "owner"
										}
									]
								}
							},
							"status": "Bad Request",
							"code": 400,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n \"code\": 1519430,\n \"message\": \"enim\",\n \"details\": \"do\"\n}"
						},
						{
							"name": "Unauthorized",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"description": "Added as a part of security scheme: oauth2",
										"key": "Authorization",
										"value": "<token>"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/projects/:owner?limit=adipisicing elit ullamco&next=adipisicing elit ullamco",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"projects",
										":owner"
									],
									"query": [
										{
											"key": "limit",
											"value": "adipisicing elit ullamco"
										},
										{
											"key": "next",
											"value": "adipisicing elit ullamco"
										}
									],
									"variable": [
										{
											"key": "owner"
										}
									]
								}
							},
							"status": "Unauthorized",
							"code": 401,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n \"code\": 1519430,\n \"message\": \"enim\",\n \"details\": \"do\"\n}"
						},
						{
							"name": "Forbidden",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"description": "Added as a part of security scheme: oauth2",
										"key": "Authorization",
										"value": "<token>"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/projects/:owner?limit=adipisicing elit ullamco&next=adipisicing elit ullamco",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"projects",
										":owner"
									],
									"query": [
										{
											"key": "limit",
											"value": "adipisicing elit ullamco"
										},
										{
											"key": "next",
											"value": "adipisicing elit ullamco"
										}
									],
									"variable": [
										{
											"key": "owner"
										}
									]
								}
							},
							"status": "Forbidden",
							"code": 403,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n \"code\": 1519430,\n \"message\": \"enim\",\n \"details\": \"do\"\n}"
						},
						{
							"name": "Not found",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"description": "Added as a part of security scheme: oauth2",
										"key": "Authorization",
										"value": "<token>"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/projects/:owner?limit=adipisicing elit ullamco&next=adipisicing elit ullamco",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"projects",
										":owner"
									],
									"query": [
										{
											"key": "limit",
											"value": "adipisicing elit ullamco"
										},
										{
											"key": "next",
											"value": "adipisicing elit ullamco"
										}
									],
									"variable": [
										{
											"key": "owner"
										}
									]
								}
							},
							"status": "Not Found",
							"code": 404,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n \"code\": 1519430,\n \"message\": \"enim\",\n \"details\": \"do\"\n}"
						},
						{
							"name": "Server error",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"description": "Added as a part of security scheme: oauth2",
										"key": "Authorization",
										"value": "<token>"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/projects/:owner?limit=adipisicing elit ullamco&next=adipisicing elit ullamco",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"projects",
										":owner"
									],
									"query": [
										{
											"key": "limit",
											"value": "adipisicing elit ullamco"
										},
										{
											"key": "next",
											"value": "adipisicing elit ullamco"
										}
									],
									"variable": [
										{
											"key": "owner"
										}
									]
								}
							},
							"status": "Internal Server Error",
							"code": 500,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n \"code\": 1519430,\n \"message\": \"enim\",\n \"details\": \"do\"\n}"
						}
					]
				},
				{
					"name": "Create a new project.",
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{readWrite}}",
									"type": "string"
								}
							]
						},
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"title\": \"my project \",\n    \"visibility\": \"OPEN\",\n    \"summary\": \"my little project\",\n    \"tags\": [\n        \"hey\",\n        \"how are you\"\n    ],\n    \"license\": \"ODC-BY\",\n    \"files\":[\n        {\n            \"name\": \"50 rows\",\n            \"description\": \"made the fix\",\n            \"labels\": [\"raw data\"],\n            \"source\": {\n                \"url\": \"https://file-examples-com.github.io/uploads/2017/02/file_example_XLS_50.xls\",\n                \"method\": \"GET\"\n            }\n        }\n    ],\n    \"linkedDatasets\": [\n        {\n            \"id\": \"random-dataset\",\n            \"owner\": \"rick-liao\"\n        }\n    ]\n}"
						},
						"url": {
							"raw": "{{baseUrl}}/projects/:owner",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"projects",
								":owner"
							],
							"variable": [
								{
									"key": "owner",
									"value": "{{org}}",
									"description": "(Required) "
								}
							]
						}
					},
					"response": [
						{
							"name": "Project created successfully.",
							"originalRequest": {
								"method": "POST",
								"header": [
									{
										"description": "Added as a part of security scheme: oauth2",
										"key": "Authorization",
										"value": "<token>"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"title\": \"irure\",\n    \"visibility\": \"PRIVATE\",\n    \"objective\": \"ea deserunt Duis consequat\",\n    \"summary\": \"ut Excepteur in Duis\",\n    \"tags\": [\n        \"Lorem occaecat nisi Duis\",\n        \"amet \"\n    ],\n    \"license\": \"OSODL\",\n    \"files\": [\n        {\n            \"name\": \"^+1sIA\",\n            \"source\": {\n                \"url\": {\n                    \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n                },\n                \"method\": {\n                    \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n                },\n                \"requestHeaders\": {\n                    \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n                },\n                \"requestEntity\": {\n                    \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n                },\n                \"oauthToken\": {\n                    \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n                },\n                \"credentials\": {\n                    \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n                },\n                \"authorization\": {\n                    \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n                },\n                \"databaseSource\": {\n                    \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n                },\n                \"dwccSpec\": {\n                    \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n                },\n                \"viewRequest\": {\n                    \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n                },\n                \"databaseMetadataSpec\": {\n                    \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n                },\n                \"dataTables\": {\n                    \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n                },\n                \"tableSpec\": {\n                    \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n                },\n                \"expandArchive\": {\n                    \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n                }\n            },\n            \"description\": \"officia\",\n            \"labels\": [\n                \"nulla non do laborum esse\",\n                \"ut\"\n            ]\n        },\n        {\n            \"name\": \"o*T\",\n            \"source\": {\n                \"url\": {\n                    \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n                },\n                \"method\": {\n                    \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n                },\n                \"requestHeaders\": {\n                    \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n                },\n                \"requestEntity\": {\n                    \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n                },\n                \"oauthToken\": {\n                    \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n                },\n                \"credentials\": {\n                    \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n                },\n                \"authorization\": {\n                    \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n                },\n                \"databaseSource\": {\n                    \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n                },\n                \"dwccSpec\": {\n                    \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n                },\n                \"viewRequest\": {\n                    \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n                },\n                \"databaseMetadataSpec\": {\n                    \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n                },\n                \"dataTables\": {\n                    \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n                },\n                \"tableSpec\": {\n                    \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n                },\n                \"expandArchive\": {\n                    \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n                }\n            },\n            \"description\": \"dolore dolor\",\n            \"labels\": [\n                \"tempor amet labore\",\n                \"deserunt\"\n            ]\n        }\n    ],\n    \"properties\": {},\n    \"linkedDatasets\": [\n        {\n            \"id\": \"id officia eu laboris\",\n            \"owner\": \"adipisicing velit\"\n        },\n        {\n            \"id\": \"dolore ut\",\n            \"owner\": \"elit fugiat incididunt\"\n        }\n    ]\n}"
								},
								"url": {
									"raw": "{{baseUrl}}/projects/:owner",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"projects",
										":owner"
									],
									"variable": [
										{
											"key": "owner"
										}
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n \"uri\": \"http://A.sfQ-gVx.2oEMnKdGnZwvPKe1go1ZBeMhzDIKRr\",\n \"message\": \"nisi nulla quis veniam\"\n}"
						},
						{
							"name": "Bad request",
							"originalRequest": {
								"method": "POST",
								"header": [
									{
										"description": "Added as a part of security scheme: oauth2",
										"key": "Authorization",
										"value": "<token>"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"title\": \"irure\",\n    \"visibility\": \"PRIVATE\",\n    \"objective\": \"ea deserunt Duis consequat\",\n    \"summary\": \"ut Excepteur in Duis\",\n    \"tags\": [\n        \"Lorem occaecat nisi Duis\",\n        \"amet \"\n    ],\n    \"license\": \"OSODL\",\n    \"files\": [\n        {\n            \"name\": \"^+1sIA\",\n            \"source\": {\n                \"url\": {\n                    \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n                },\n                \"method\": {\n                    \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n                },\n                \"requestHeaders\": {\n                    \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n                },\n                \"requestEntity\": {\n                    \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n                },\n                \"oauthToken\": {\n                    \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n                },\n                \"credentials\": {\n                    \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n                },\n                \"authorization\": {\n                    \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n                },\n                \"databaseSource\": {\n                    \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n                },\n                \"dwccSpec\": {\n                    \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n                },\n                \"viewRequest\": {\n                    \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n                },\n                \"databaseMetadataSpec\": {\n                    \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n                },\n                \"dataTables\": {\n                    \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n                },\n                \"tableSpec\": {\n                    \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n                },\n                \"expandArchive\": {\n                    \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n                }\n            },\n            \"description\": \"officia\",\n            \"labels\": [\n                \"nulla non do laborum esse\",\n                \"ut\"\n            ]\n        },\n        {\n            \"name\": \"o*T\",\n            \"source\": {\n                \"url\": {\n                    \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n                },\n                \"method\": {\n                    \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n                },\n                \"requestHeaders\": {\n                    \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n                },\n                \"requestEntity\": {\n                    \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n                },\n                \"oauthToken\": {\n                    \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n                },\n                \"credentials\": {\n                    \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n                },\n                \"authorization\": {\n                    \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n                },\n                \"databaseSource\": {\n                    \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n                },\n                \"dwccSpec\": {\n                    \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n                },\n                \"viewRequest\": {\n                    \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n                },\n                \"databaseMetadataSpec\": {\n                    \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n                },\n                \"dataTables\": {\n                    \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n                },\n                \"tableSpec\": {\n                    \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n                },\n                \"expandArchive\": {\n                    \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n                }\n            },\n            \"description\": \"dolore dolor\",\n            \"labels\": [\n                \"tempor amet labore\",\n                \"deserunt\"\n            ]\n        }\n    ],\n    \"properties\": {},\n    \"linkedDatasets\": [\n        {\n            \"id\": \"id officia eu laboris\",\n            \"owner\": \"adipisicing velit\"\n        },\n        {\n            \"id\": \"dolore ut\",\n            \"owner\": \"elit fugiat incididunt\"\n        }\n    ]\n}"
								},
								"url": {
									"raw": "{{baseUrl}}/projects/:owner",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"projects",
										":owner"
									],
									"variable": [
										{
											"key": "owner"
										}
									]
								}
							},
							"status": "Bad Request",
							"code": 400,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n \"code\": 1519430,\n \"message\": \"enim\",\n \"details\": \"do\"\n}"
						},
						{
							"name": "Unauthorized",
							"originalRequest": {
								"method": "POST",
								"header": [
									{
										"description": "Added as a part of security scheme: oauth2",
										"key": "Authorization",
										"value": "<token>"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"title\": \"irure\",\n    \"visibility\": \"PRIVATE\",\n    \"objective\": \"ea deserunt Duis consequat\",\n    \"summary\": \"ut Excepteur in Duis\",\n    \"tags\": [\n        \"Lorem occaecat nisi Duis\",\n        \"amet \"\n    ],\n    \"license\": \"OSODL\",\n    \"files\": [\n        {\n            \"name\": \"^+1sIA\",\n            \"source\": {\n                \"url\": {\n                    \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n                },\n                \"method\": {\n                    \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n                },\n                \"requestHeaders\": {\n                    \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n                },\n                \"requestEntity\": {\n                    \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n                },\n                \"oauthToken\": {\n                    \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n                },\n                \"credentials\": {\n                    \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n                },\n                \"authorization\": {\n                    \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n                },\n                \"databaseSource\": {\n                    \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n                },\n                \"dwccSpec\": {\n                    \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n                },\n                \"viewRequest\": {\n                    \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n                },\n                \"databaseMetadataSpec\": {\n                    \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n                },\n                \"dataTables\": {\n                    \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n                },\n                \"tableSpec\": {\n                    \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n                },\n                \"expandArchive\": {\n                    \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n                }\n            },\n            \"description\": \"officia\",\n            \"labels\": [\n                \"nulla non do laborum esse\",\n                \"ut\"\n            ]\n        },\n        {\n            \"name\": \"o*T\",\n            \"source\": {\n                \"url\": {\n                    \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n                },\n                \"method\": {\n                    \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n                },\n                \"requestHeaders\": {\n                    \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n                },\n                \"requestEntity\": {\n                    \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n                },\n                \"oauthToken\": {\n                    \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n                },\n                \"credentials\": {\n                    \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n                },\n                \"authorization\": {\n                    \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n                },\n                \"databaseSource\": {\n                    \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n                },\n                \"dwccSpec\": {\n                    \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n                },\n                \"viewRequest\": {\n                    \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n                },\n                \"databaseMetadataSpec\": {\n                    \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n                },\n                \"dataTables\": {\n                    \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n                },\n                \"tableSpec\": {\n                    \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n                },\n                \"expandArchive\": {\n                    \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n                }\n            },\n            \"description\": \"dolore dolor\",\n            \"labels\": [\n                \"tempor amet labore\",\n                \"deserunt\"\n            ]\n        }\n    ],\n    \"properties\": {},\n    \"linkedDatasets\": [\n        {\n            \"id\": \"id officia eu laboris\",\n            \"owner\": \"adipisicing velit\"\n        },\n        {\n            \"id\": \"dolore ut\",\n            \"owner\": \"elit fugiat incididunt\"\n        }\n    ]\n}"
								},
								"url": {
									"raw": "{{baseUrl}}/projects/:owner",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"projects",
										":owner"
									],
									"variable": [
										{
											"key": "owner"
										}
									]
								}
							},
							"status": "Unauthorized",
							"code": 401,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n \"code\": 1519430,\n \"message\": \"enim\",\n \"details\": \"do\"\n}"
						},
						{
							"name": "Forbidden",
							"originalRequest": {
								"method": "POST",
								"header": [
									{
										"description": "Added as a part of security scheme: oauth2",
										"key": "Authorization",
										"value": "<token>"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"title\": \"irure\",\n    \"visibility\": \"PRIVATE\",\n    \"objective\": \"ea deserunt Duis consequat\",\n    \"summary\": \"ut Excepteur in Duis\",\n    \"tags\": [\n        \"Lorem occaecat nisi Duis\",\n        \"amet \"\n    ],\n    \"license\": \"OSODL\",\n    \"files\": [\n        {\n            \"name\": \"^+1sIA\",\n            \"source\": {\n                \"url\": {\n                    \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n                },\n                \"method\": {\n                    \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n                },\n                \"requestHeaders\": {\n                    \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n                },\n                \"requestEntity\": {\n                    \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n                },\n                \"oauthToken\": {\n                    \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n                },\n                \"credentials\": {\n                    \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n                },\n                \"authorization\": {\n                    \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n                },\n                \"databaseSource\": {\n                    \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n                },\n                \"dwccSpec\": {\n                    \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n                },\n                \"viewRequest\": {\n                    \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n                },\n                \"databaseMetadataSpec\": {\n                    \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n                },\n                \"dataTables\": {\n                    \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n                },\n                \"tableSpec\": {\n                    \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n                },\n                \"expandArchive\": {\n                    \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n                }\n            },\n            \"description\": \"officia\",\n            \"labels\": [\n                \"nulla non do laborum esse\",\n                \"ut\"\n            ]\n        },\n        {\n            \"name\": \"o*T\",\n            \"source\": {\n                \"url\": {\n                    \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n                },\n                \"method\": {\n                    \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n                },\n                \"requestHeaders\": {\n                    \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n                },\n                \"requestEntity\": {\n                    \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n                },\n                \"oauthToken\": {\n                    \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n                },\n                \"credentials\": {\n                    \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n                },\n                \"authorization\": {\n                    \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n                },\n                \"databaseSource\": {\n                    \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n                },\n                \"dwccSpec\": {\n                    \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n                },\n                \"viewRequest\": {\n                    \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n                },\n                \"databaseMetadataSpec\": {\n                    \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n                },\n                \"dataTables\": {\n                    \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n                },\n                \"tableSpec\": {\n                    \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n                },\n                \"expandArchive\": {\n                    \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n                }\n            },\n            \"description\": \"dolore dolor\",\n            \"labels\": [\n                \"tempor amet labore\",\n                \"deserunt\"\n            ]\n        }\n    ],\n    \"properties\": {},\n    \"linkedDatasets\": [\n        {\n            \"id\": \"id officia eu laboris\",\n            \"owner\": \"adipisicing velit\"\n        },\n        {\n            \"id\": \"dolore ut\",\n            \"owner\": \"elit fugiat incididunt\"\n        }\n    ]\n}"
								},
								"url": {
									"raw": "{{baseUrl}}/projects/:owner",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"projects",
										":owner"
									],
									"variable": [
										{
											"key": "owner"
										}
									]
								}
							},
							"status": "Forbidden",
							"code": 403,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n \"code\": 1519430,\n \"message\": \"enim\",\n \"details\": \"do\"\n}"
						},
						{
							"name": "Not found",
							"originalRequest": {
								"method": "POST",
								"header": [
									{
										"description": "Added as a part of security scheme: oauth2",
										"key": "Authorization",
										"value": "<token>"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"title\": \"irure\",\n    \"visibility\": \"PRIVATE\",\n    \"objective\": \"ea deserunt Duis consequat\",\n    \"summary\": \"ut Excepteur in Duis\",\n    \"tags\": [\n        \"Lorem occaecat nisi Duis\",\n        \"amet \"\n    ],\n    \"license\": \"OSODL\",\n    \"files\": [\n        {\n            \"name\": \"^+1sIA\",\n            \"source\": {\n                \"url\": {\n                    \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n                },\n                \"method\": {\n                    \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n                },\n                \"requestHeaders\": {\n                    \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n                },\n                \"requestEntity\": {\n                    \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n                },\n                \"oauthToken\": {\n                    \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n                },\n                \"credentials\": {\n                    \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n                },\n                \"authorization\": {\n                    \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n                },\n                \"databaseSource\": {\n                    \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n                },\n                \"dwccSpec\": {\n                    \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n                },\n                \"viewRequest\": {\n                    \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n                },\n                \"databaseMetadataSpec\": {\n                    \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n                },\n                \"dataTables\": {\n                    \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n                },\n                \"tableSpec\": {\n                    \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n                },\n                \"expandArchive\": {\n                    \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n                }\n            },\n            \"description\": \"officia\",\n            \"labels\": [\n                \"nulla non do laborum esse\",\n                \"ut\"\n            ]\n        },\n        {\n            \"name\": \"o*T\",\n            \"source\": {\n                \"url\": {\n                    \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n                },\n                \"method\": {\n                    \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n                },\n                \"requestHeaders\": {\n                    \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n                },\n                \"requestEntity\": {\n                    \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n                },\n                \"oauthToken\": {\n                    \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n                },\n                \"credentials\": {\n                    \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n                },\n                \"authorization\": {\n                    \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n                },\n                \"databaseSource\": {\n                    \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n                },\n                \"dwccSpec\": {\n                    \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n                },\n                \"viewRequest\": {\n                    \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n                },\n                \"databaseMetadataSpec\": {\n                    \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n                },\n                \"dataTables\": {\n                    \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n                },\n                \"tableSpec\": {\n                    \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n                },\n                \"expandArchive\": {\n                    \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n                }\n            },\n            \"description\": \"dolore dolor\",\n            \"labels\": [\n                \"tempor amet labore\",\n                \"deserunt\"\n            ]\n        }\n    ],\n    \"properties\": {},\n    \"linkedDatasets\": [\n        {\n            \"id\": \"id officia eu laboris\",\n            \"owner\": \"adipisicing velit\"\n        },\n        {\n            \"id\": \"dolore ut\",\n            \"owner\": \"elit fugiat incididunt\"\n        }\n    ]\n}"
								},
								"url": {
									"raw": "{{baseUrl}}/projects/:owner",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"projects",
										":owner"
									],
									"variable": [
										{
											"key": "owner"
										}
									]
								}
							},
							"status": "Not Found",
							"code": 404,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n \"code\": 1519430,\n \"message\": \"enim\",\n \"details\": \"do\"\n}"
						},
						{
							"name": "Bad request",
							"originalRequest": {
								"method": "POST",
								"header": [
									{
										"description": "Added as a part of security scheme: oauth2",
										"key": "Authorization",
										"value": "<token>"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"title\": \"irure\",\n    \"visibility\": \"PRIVATE\",\n    \"objective\": \"ea deserunt Duis consequat\",\n    \"summary\": \"ut Excepteur in Duis\",\n    \"tags\": [\n        \"Lorem occaecat nisi Duis\",\n        \"amet \"\n    ],\n    \"license\": \"OSODL\",\n    \"files\": [\n        {\n            \"name\": \"^+1sIA\",\n            \"source\": {\n                \"url\": {\n                    \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n                },\n                \"method\": {\n                    \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n                },\n                \"requestHeaders\": {\n                    \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n                },\n                \"requestEntity\": {\n                    \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n                },\n                \"oauthToken\": {\n                    \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n                },\n                \"credentials\": {\n                    \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n                },\n                \"authorization\": {\n                    \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n                },\n                \"databaseSource\": {\n                    \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n                },\n                \"dwccSpec\": {\n                    \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n                },\n                \"viewRequest\": {\n                    \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n                },\n                \"databaseMetadataSpec\": {\n                    \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n                },\n                \"dataTables\": {\n                    \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n                },\n                \"tableSpec\": {\n                    \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n                },\n                \"expandArchive\": {\n                    \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n                }\n            },\n            \"description\": \"officia\",\n            \"labels\": [\n                \"nulla non do laborum esse\",\n                \"ut\"\n            ]\n        },\n        {\n            \"name\": \"o*T\",\n            \"source\": {\n                \"url\": {\n                    \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n                },\n                \"method\": {\n                    \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n                },\n                \"requestHeaders\": {\n                    \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n                },\n                \"requestEntity\": {\n                    \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n                },\n                \"oauthToken\": {\n                    \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n                },\n                \"credentials\": {\n                    \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n                },\n                \"authorization\": {\n                    \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n                },\n                \"databaseSource\": {\n                    \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n                },\n                \"dwccSpec\": {\n                    \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n                },\n                \"viewRequest\": {\n                    \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n                },\n                \"databaseMetadataSpec\": {\n                    \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n                },\n                \"dataTables\": {\n                    \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n                },\n                \"tableSpec\": {\n                    \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n                },\n                \"expandArchive\": {\n                    \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n                }\n            },\n            \"description\": \"dolore dolor\",\n            \"labels\": [\n                \"tempor amet labore\",\n                \"deserunt\"\n            ]\n        }\n    ],\n    \"properties\": {},\n    \"linkedDatasets\": [\n        {\n            \"id\": \"id officia eu laboris\",\n            \"owner\": \"adipisicing velit\"\n        },\n        {\n            \"id\": \"dolore ut\",\n            \"owner\": \"elit fugiat incididunt\"\n        }\n    ]\n}"
								},
								"url": {
									"raw": "{{baseUrl}}/projects/:owner",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"projects",
										":owner"
									],
									"variable": [
										{
											"key": "owner"
										}
									]
								}
							},
							"status": "Unprocessable Entity (WebDAV) (RFC 4918)",
							"code": 422,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n \"code\": 1519430,\n \"message\": \"enim\",\n \"details\": \"do\"\n}"
						},
						{
							"name": "Server error",
							"originalRequest": {
								"method": "POST",
								"header": [
									{
										"description": "Added as a part of security scheme: oauth2",
										"key": "Authorization",
										"value": "<token>"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"title\": \"irure\",\n    \"visibility\": \"PRIVATE\",\n    \"objective\": \"ea deserunt Duis consequat\",\n    \"summary\": \"ut Excepteur in Duis\",\n    \"tags\": [\n        \"Lorem occaecat nisi Duis\",\n        \"amet \"\n    ],\n    \"license\": \"OSODL\",\n    \"files\": [\n        {\n            \"name\": \"^+1sIA\",\n            \"source\": {\n                \"url\": {\n                    \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n                },\n                \"method\": {\n                    \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n                },\n                \"requestHeaders\": {\n                    \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n                },\n                \"requestEntity\": {\n                    \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n                },\n                \"oauthToken\": {\n                    \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n                },\n                \"credentials\": {\n                    \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n                },\n                \"authorization\": {\n                    \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n                },\n                \"databaseSource\": {\n                    \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n                },\n                \"dwccSpec\": {\n                    \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n                },\n                \"viewRequest\": {\n                    \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n                },\n                \"databaseMetadataSpec\": {\n                    \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n                },\n                \"dataTables\": {\n                    \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n                },\n                \"tableSpec\": {\n                    \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n                },\n                \"expandArchive\": {\n                    \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n                }\n            },\n            \"description\": \"officia\",\n            \"labels\": [\n                \"nulla non do laborum esse\",\n                \"ut\"\n            ]\n        },\n        {\n            \"name\": \"o*T\",\n            \"source\": {\n                \"url\": {\n                    \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n                },\n                \"method\": {\n                    \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n                },\n                \"requestHeaders\": {\n                    \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n                },\n                \"requestEntity\": {\n                    \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n                },\n                \"oauthToken\": {\n                    \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n                },\n                \"credentials\": {\n                    \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n                },\n                \"authorization\": {\n                    \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n                },\n                \"databaseSource\": {\n                    \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n                },\n                \"dwccSpec\": {\n                    \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n                },\n                \"viewRequest\": {\n                    \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n                },\n                \"databaseMetadataSpec\": {\n                    \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n                },\n                \"dataTables\": {\n                    \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n                },\n                \"tableSpec\": {\n                    \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n                },\n                \"expandArchive\": {\n                    \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n                }\n            },\n            \"description\": \"dolore dolor\",\n            \"labels\": [\n                \"tempor amet labore\",\n                \"deserunt\"\n            ]\n        }\n    ],\n    \"properties\": {},\n    \"linkedDatasets\": [\n        {\n            \"id\": \"id officia eu laboris\",\n            \"owner\": \"adipisicing velit\"\n        },\n        {\n            \"id\": \"dolore ut\",\n            \"owner\": \"elit fugiat incididunt\"\n        }\n    ]\n}"
								},
								"url": {
									"raw": "{{baseUrl}}/projects/:owner",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"projects",
										":owner"
									],
									"variable": [
										{
											"key": "owner"
										}
									]
								}
							},
							"status": "Internal Server Error",
							"code": 500,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n \"code\": 1519430,\n \"message\": \"enim\",\n \"details\": \"do\"\n}"
						}
					]
				}
			]
		},
		{
			"name": "queries/{id}",
			"item": [
				{
					"name": "results",
					"item": [
						{
							"name": "Execute a query.",
							"request": {
								"auth": {
									"type": "bearer",
									"bearer": [
										{
											"key": "token",
											"value": "{{readWrite}}",
											"type": "string"
										}
									]
								},
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{baseUrl}}/queries/:id/results?includeTableSchema=false&queryruntoken=123",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"queries",
										":id",
										"results"
									],
									"query": [
										{
											"key": "includeTableSchema",
											"value": "false"
										},
										{
											"key": "queryruntoken",
											"value": "123",
											"description": "Query token to use with cancel"
										}
									],
									"variable": [
										{
											"key": "id",
											"value": "{{queryid}}",
											"description": "(Required) "
										}
									]
								}
							},
							"response": [
								{
									"name": "Successfully executed a query.",
									"originalRequest": {
										"method": "GET",
										"header": [
											{
												"description": "Added as a part of security scheme: oauth2",
												"key": "Authorization",
												"value": "<token>"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/queries/:id/results?includeTableSchema=false&queryruntoken=adipisicing elit ullamco",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"queries",
												":id",
												"results"
											],
											"query": [
												{
													"key": "includeTableSchema",
													"value": "false"
												},
												{
													"key": "queryruntoken",
													"value": "adipisicing elit ullamco"
												}
											],
											"variable": [
												{
													"key": "id"
												}
											]
										}
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n \"message\": \"voluptate culpa nulla esse\"\n}"
								},
								{
									"name": "Bad request",
									"originalRequest": {
										"method": "GET",
										"header": [
											{
												"description": "Added as a part of security scheme: oauth2",
												"key": "Authorization",
												"value": "<token>"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/queries/:id/results?includeTableSchema=false&queryruntoken=adipisicing elit ullamco",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"queries",
												":id",
												"results"
											],
											"query": [
												{
													"key": "includeTableSchema",
													"value": "false"
												},
												{
													"key": "queryruntoken",
													"value": "adipisicing elit ullamco"
												}
											],
											"variable": [
												{
													"key": "id"
												}
											]
										}
									},
									"status": "Bad Request",
									"code": 400,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n \"code\": 1519430,\n \"message\": \"enim\",\n \"details\": \"do\"\n}"
								},
								{
									"name": "Unauthorized",
									"originalRequest": {
										"method": "GET",
										"header": [
											{
												"description": "Added as a part of security scheme: oauth2",
												"key": "Authorization",
												"value": "<token>"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/queries/:id/results?includeTableSchema=false&queryruntoken=adipisicing elit ullamco",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"queries",
												":id",
												"results"
											],
											"query": [
												{
													"key": "includeTableSchema",
													"value": "false"
												},
												{
													"key": "queryruntoken",
													"value": "adipisicing elit ullamco"
												}
											],
											"variable": [
												{
													"key": "id"
												}
											]
										}
									},
									"status": "Unauthorized",
									"code": 401,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n \"code\": 1519430,\n \"message\": \"enim\",\n \"details\": \"do\"\n}"
								},
								{
									"name": "Forbidden",
									"originalRequest": {
										"method": "GET",
										"header": [
											{
												"description": "Added as a part of security scheme: oauth2",
												"key": "Authorization",
												"value": "<token>"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/queries/:id/results?includeTableSchema=false&queryruntoken=adipisicing elit ullamco",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"queries",
												":id",
												"results"
											],
											"query": [
												{
													"key": "includeTableSchema",
													"value": "false"
												},
												{
													"key": "queryruntoken",
													"value": "adipisicing elit ullamco"
												}
											],
											"variable": [
												{
													"key": "id"
												}
											]
										}
									},
									"status": "Forbidden",
									"code": 403,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n \"code\": 1519430,\n \"message\": \"enim\",\n \"details\": \"do\"\n}"
								},
								{
									"name": "Not found",
									"originalRequest": {
										"method": "GET",
										"header": [
											{
												"description": "Added as a part of security scheme: oauth2",
												"key": "Authorization",
												"value": "<token>"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/queries/:id/results?includeTableSchema=false&queryruntoken=adipisicing elit ullamco",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"queries",
												":id",
												"results"
											],
											"query": [
												{
													"key": "includeTableSchema",
													"value": "false"
												},
												{
													"key": "queryruntoken",
													"value": "adipisicing elit ullamco"
												}
											],
											"variable": [
												{
													"key": "id"
												}
											]
										}
									},
									"status": "Not Found",
									"code": 404,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n \"code\": 1519430,\n \"message\": \"enim\",\n \"details\": \"do\"\n}"
								},
								{
									"name": "Server error",
									"originalRequest": {
										"method": "GET",
										"header": [
											{
												"description": "Added as a part of security scheme: oauth2",
												"key": "Authorization",
												"value": "<token>"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/queries/:id/results?includeTableSchema=false&queryruntoken=adipisicing elit ullamco",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"queries",
												":id",
												"results"
											],
											"query": [
												{
													"key": "includeTableSchema",
													"value": "false"
												},
												{
													"key": "queryruntoken",
													"value": "adipisicing elit ullamco"
												}
											],
											"variable": [
												{
													"key": "id"
												}
											]
										}
									},
									"status": "Internal Server Error",
									"code": 500,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n \"code\": 1519430,\n \"message\": \"enim\",\n \"details\": \"do\"\n}"
								}
							]
						},
						{
							"name": "Execute a query.",
							"request": {
								"auth": {
									"type": "bearer",
									"bearer": [
										{
											"key": "token",
											"value": "{{readWrite}}",
											"type": "string"
										}
									]
								},
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"parameters\": {},\n    \"includeTableSchema\": false,\n    \"maxRows\": 2,\n    \"queryRunToken\": \"321\"\n}"
								},
								"url": {
									"raw": "{{baseUrl}}/queries/:id/results?queryruntoken=123",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"queries",
										":id",
										"results"
									],
									"query": [
										{
											"key": "queryruntoken",
											"value": "123",
											"description": "Query token to use with cancel"
										}
									],
									"variable": [
										{
											"key": "id",
											"value": "{{queryid}}",
											"description": "(Required) "
										}
									]
								}
							},
							"response": [
								{
									"name": "Successfully executed a query.",
									"originalRequest": {
										"method": "POST",
										"header": [
											{
												"description": "Added as a part of security scheme: oauth2",
												"key": "Authorization",
												"value": "<token>"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n    \"parameters\": {},\n    \"includeTableSchema\": false,\n    \"maxRows\": -83793053,\n    \"queryRunToken\": \"occaecat in mollit\"\n}"
										},
										"url": {
											"raw": "{{baseUrl}}/queries/:id/results?queryruntoken=adipisicing elit ullamco",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"queries",
												":id",
												"results"
											],
											"query": [
												{
													"key": "queryruntoken",
													"value": "adipisicing elit ullamco"
												}
											],
											"variable": [
												{
													"key": "id"
												}
											]
										}
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n \"message\": \"voluptate culpa nulla esse\"\n}"
								},
								{
									"name": "Bad request",
									"originalRequest": {
										"method": "POST",
										"header": [
											{
												"description": "Added as a part of security scheme: oauth2",
												"key": "Authorization",
												"value": "<token>"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n    \"parameters\": {},\n    \"includeTableSchema\": false,\n    \"maxRows\": -83793053,\n    \"queryRunToken\": \"occaecat in mollit\"\n}"
										},
										"url": {
											"raw": "{{baseUrl}}/queries/:id/results?queryruntoken=adipisicing elit ullamco",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"queries",
												":id",
												"results"
											],
											"query": [
												{
													"key": "queryruntoken",
													"value": "adipisicing elit ullamco"
												}
											],
											"variable": [
												{
													"key": "id"
												}
											]
										}
									},
									"status": "Bad Request",
									"code": 400,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n \"code\": 1519430,\n \"message\": \"enim\",\n \"details\": \"do\"\n}"
								},
								{
									"name": "Unauthorized",
									"originalRequest": {
										"method": "POST",
										"header": [
											{
												"description": "Added as a part of security scheme: oauth2",
												"key": "Authorization",
												"value": "<token>"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n    \"parameters\": {},\n    \"includeTableSchema\": false,\n    \"maxRows\": -83793053,\n    \"queryRunToken\": \"occaecat in mollit\"\n}"
										},
										"url": {
											"raw": "{{baseUrl}}/queries/:id/results?queryruntoken=adipisicing elit ullamco",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"queries",
												":id",
												"results"
											],
											"query": [
												{
													"key": "queryruntoken",
													"value": "adipisicing elit ullamco"
												}
											],
											"variable": [
												{
													"key": "id"
												}
											]
										}
									},
									"status": "Unauthorized",
									"code": 401,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n \"code\": 1519430,\n \"message\": \"enim\",\n \"details\": \"do\"\n}"
								},
								{
									"name": "Forbidden",
									"originalRequest": {
										"method": "POST",
										"header": [
											{
												"description": "Added as a part of security scheme: oauth2",
												"key": "Authorization",
												"value": "<token>"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n    \"parameters\": {},\n    \"includeTableSchema\": false,\n    \"maxRows\": -83793053,\n    \"queryRunToken\": \"occaecat in mollit\"\n}"
										},
										"url": {
											"raw": "{{baseUrl}}/queries/:id/results?queryruntoken=adipisicing elit ullamco",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"queries",
												":id",
												"results"
											],
											"query": [
												{
													"key": "queryruntoken",
													"value": "adipisicing elit ullamco"
												}
											],
											"variable": [
												{
													"key": "id"
												}
											]
										}
									},
									"status": "Forbidden",
									"code": 403,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n \"code\": 1519430,\n \"message\": \"enim\",\n \"details\": \"do\"\n}"
								},
								{
									"name": "Not found",
									"originalRequest": {
										"method": "POST",
										"header": [
											{
												"description": "Added as a part of security scheme: oauth2",
												"key": "Authorization",
												"value": "<token>"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n    \"parameters\": {},\n    \"includeTableSchema\": false,\n    \"maxRows\": -83793053,\n    \"queryRunToken\": \"occaecat in mollit\"\n}"
										},
										"url": {
											"raw": "{{baseUrl}}/queries/:id/results?queryruntoken=adipisicing elit ullamco",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"queries",
												":id",
												"results"
											],
											"query": [
												{
													"key": "queryruntoken",
													"value": "adipisicing elit ullamco"
												}
											],
											"variable": [
												{
													"key": "id"
												}
											]
										}
									},
									"status": "Not Found",
									"code": 404,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n \"code\": 1519430,\n \"message\": \"enim\",\n \"details\": \"do\"\n}"
								},
								{
									"name": "Bad request",
									"originalRequest": {
										"method": "POST",
										"header": [
											{
												"description": "Added as a part of security scheme: oauth2",
												"key": "Authorization",
												"value": "<token>"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n    \"parameters\": {},\n    \"includeTableSchema\": false,\n    \"maxRows\": -83793053,\n    \"queryRunToken\": \"occaecat in mollit\"\n}"
										},
										"url": {
											"raw": "{{baseUrl}}/queries/:id/results?queryruntoken=adipisicing elit ullamco",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"queries",
												":id",
												"results"
											],
											"query": [
												{
													"key": "queryruntoken",
													"value": "adipisicing elit ullamco"
												}
											],
											"variable": [
												{
													"key": "id"
												}
											]
										}
									},
									"status": "Unprocessable Entity (WebDAV) (RFC 4918)",
									"code": 422,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n \"code\": 1519430,\n \"message\": \"enim\",\n \"details\": \"do\"\n}"
								},
								{
									"name": "Server error",
									"originalRequest": {
										"method": "POST",
										"header": [
											{
												"description": "Added as a part of security scheme: oauth2",
												"key": "Authorization",
												"value": "<token>"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n    \"parameters\": {},\n    \"includeTableSchema\": false,\n    \"maxRows\": -83793053,\n    \"queryRunToken\": \"occaecat in mollit\"\n}"
										},
										"url": {
											"raw": "{{baseUrl}}/queries/:id/results?queryruntoken=adipisicing elit ullamco",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"queries",
												":id",
												"results"
											],
											"query": [
												{
													"key": "queryruntoken",
													"value": "adipisicing elit ullamco"
												}
											],
											"variable": [
												{
													"key": "id"
												}
											]
										}
									},
									"status": "Internal Server Error",
									"code": 500,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n \"code\": 1519430,\n \"message\": \"enim\",\n \"details\": \"do\"\n}"
								}
							]
						}
					]
				},
				{
					"name": "Retrieve a query definition.",
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{readWrite}}",
									"type": "string"
								}
							]
						},
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{baseUrl}}/queries/:id",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"queries",
								":id"
							],
							"variable": [
								{
									"key": "id",
									"value": "{{queryid}}",
									"description": "(Required) "
								}
							]
						}
					},
					"response": [
						{
							"name": "Successfully retrieved a query definition.",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"description": "Added as a part of security scheme: oauth2",
										"key": "Authorization",
										"value": "<token>"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/queries/:id",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"queries",
										":id"
									],
									"variable": [
										{
											"key": "id"
										}
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n \"id\": \"sint offi\",\n \"owner\": \"voluptate\",\n \"language\": \"SPARQL\",\n \"name\": \"ex anim in\",\n \"body\": \"consectetur\",\n \"version\": \"sed reprehenderit veniam commodo aliqua\",\n \"created\": \"aliqua mollit\",\n \"updated\": \"aliquip aliqua do irure eu\",\n \"parameters\": {}\n}"
						},
						{
							"name": "Bad request",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"description": "Added as a part of security scheme: oauth2",
										"key": "Authorization",
										"value": "<token>"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/queries/:id",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"queries",
										":id"
									],
									"variable": [
										{
											"key": "id"
										}
									]
								}
							},
							"status": "Bad Request",
							"code": 400,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n \"code\": 1519430,\n \"message\": \"enim\",\n \"details\": \"do\"\n}"
						},
						{
							"name": "Unauthorized",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"description": "Added as a part of security scheme: oauth2",
										"key": "Authorization",
										"value": "<token>"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/queries/:id",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"queries",
										":id"
									],
									"variable": [
										{
											"key": "id"
										}
									]
								}
							},
							"status": "Unauthorized",
							"code": 401,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n \"code\": 1519430,\n \"message\": \"enim\",\n \"details\": \"do\"\n}"
						},
						{
							"name": "Forbidden",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"description": "Added as a part of security scheme: oauth2",
										"key": "Authorization",
										"value": "<token>"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/queries/:id",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"queries",
										":id"
									],
									"variable": [
										{
											"key": "id"
										}
									]
								}
							},
							"status": "Forbidden",
							"code": 403,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n \"code\": 1519430,\n \"message\": \"enim\",\n \"details\": \"do\"\n}"
						},
						{
							"name": "Not found",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"description": "Added as a part of security scheme: oauth2",
										"key": "Authorization",
										"value": "<token>"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/queries/:id",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"queries",
										":id"
									],
									"variable": [
										{
											"key": "id"
										}
									]
								}
							},
							"status": "Not Found",
							"code": 404,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n \"code\": 1519430,\n \"message\": \"enim\",\n \"details\": \"do\"\n}"
						},
						{
							"name": "Server error",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"description": "Added as a part of security scheme: oauth2",
										"key": "Authorization",
										"value": "<token>"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/queries/:id",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"queries",
										":id"
									],
									"variable": [
										{
											"key": "id"
										}
									]
								}
							},
							"status": "Internal Server Error",
							"code": 500,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n \"code\": 1519430,\n \"message\": \"enim\",\n \"details\": \"do\"\n}"
						}
					]
				},
				{
					"name": "Retrieve a versioned query definition.",
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{readWrite}}",
									"type": "string"
								}
							]
						},
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{baseUrl}}/queries/:id/v/:versionId",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"queries",
								":id",
								"v",
								":versionId"
							],
							"variable": [
								{
									"key": "id",
									"value": "{{queryid}}",
									"description": "(Required) "
								},
								{
									"key": "versionId",
									"value": "503387f5",
									"description": "(Required) "
								}
							]
						}
					},
					"response": [
						{
							"name": "Successfully retrieved a version query definition.",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"description": "Added as a part of security scheme: oauth2",
										"key": "Authorization",
										"value": "<token>"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/queries/:id/v/:versionId",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"queries",
										":id",
										"v",
										":versionId"
									],
									"variable": [
										{
											"key": "id"
										},
										{
											"key": "versionId"
										}
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n \"id\": \"sint offi\",\n \"owner\": \"voluptate\",\n \"language\": \"SPARQL\",\n \"name\": \"ex anim in\",\n \"body\": \"consectetur\",\n \"version\": \"sed reprehenderit veniam commodo aliqua\",\n \"created\": \"aliqua mollit\",\n \"updated\": \"aliquip aliqua do irure eu\",\n \"parameters\": {}\n}"
						},
						{
							"name": "Bad request",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"description": "Added as a part of security scheme: oauth2",
										"key": "Authorization",
										"value": "<token>"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/queries/:id/v/:versionId",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"queries",
										":id",
										"v",
										":versionId"
									],
									"variable": [
										{
											"key": "id"
										},
										{
											"key": "versionId"
										}
									]
								}
							},
							"status": "Bad Request",
							"code": 400,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n \"code\": 1519430,\n \"message\": \"enim\",\n \"details\": \"do\"\n}"
						},
						{
							"name": "Unauthorized",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"description": "Added as a part of security scheme: oauth2",
										"key": "Authorization",
										"value": "<token>"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/queries/:id/v/:versionId",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"queries",
										":id",
										"v",
										":versionId"
									],
									"variable": [
										{
											"key": "id"
										},
										{
											"key": "versionId"
										}
									]
								}
							},
							"status": "Unauthorized",
							"code": 401,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n \"code\": 1519430,\n \"message\": \"enim\",\n \"details\": \"do\"\n}"
						},
						{
							"name": "Forbidden",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"description": "Added as a part of security scheme: oauth2",
										"key": "Authorization",
										"value": "<token>"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/queries/:id/v/:versionId",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"queries",
										":id",
										"v",
										":versionId"
									],
									"variable": [
										{
											"key": "id"
										},
										{
											"key": "versionId"
										}
									]
								}
							},
							"status": "Forbidden",
							"code": 403,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n \"code\": 1519430,\n \"message\": \"enim\",\n \"details\": \"do\"\n}"
						},
						{
							"name": "Not found",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"description": "Added as a part of security scheme: oauth2",
										"key": "Authorization",
										"value": "<token>"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/queries/:id/v/:versionId",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"queries",
										":id",
										"v",
										":versionId"
									],
									"variable": [
										{
											"key": "id"
										},
										{
											"key": "versionId"
										}
									]
								}
							},
							"status": "Not Found",
							"code": 404,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n \"code\": 1519430,\n \"message\": \"enim\",\n \"details\": \"do\"\n}"
						},
						{
							"name": "Server error",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"description": "Added as a part of security scheme: oauth2",
										"key": "Authorization",
										"value": "<token>"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/queries/:id/v/:versionId",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"queries",
										":id",
										"v",
										":versionId"
									],
									"variable": [
										{
											"key": "id"
										},
										{
											"key": "versionId"
										}
									]
								}
							},
							"status": "Internal Server Error",
							"code": 500,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n \"code\": 1519430,\n \"message\": \"enim\",\n \"details\": \"do\"\n}"
						}
					]
				}
			]
		},
		{
			"name": "requests",
			"item": [
				{
					"name": "Accept a request.",
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{readWrite}}",
									"type": "string"
								}
							]
						},
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"requestid\": \"55665d0e-9153-0c80-9be5-b60dd8fd5c97\",\n    \"owner\": \"Lorem voluptate esse ex laboris\",\n    \"resourceid\": \"ut veniam\",\n    \"collectionIds\": [\n        \"mollit culpa esse ipsum ut\",\n        \"labore elit irure\"\n    ]\n}"
						},
						"url": {
							"raw": "{{baseUrl}}/requests/accept",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"requests",
								"accept"
							]
						}
					},
					"response": [
						{
							"name": "Successfully retrieved dataset",
							"originalRequest": {
								"method": "POST",
								"header": [
									{
										"description": "Added as a part of security scheme: oauth2",
										"key": "Authorization",
										"value": "<token>"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"requestid\": \"c15ca405-56a7-5403-5281-cc9aaf862b27\",\n    \"owner\": \"occaecat sit aliquip velit\",\n    \"resourceid\": \"mollit voluptate nostrud\",\n    \"collectionIds\": [\n        \"ut ex nulla eu pariatur\",\n        \"ea exercitation magna\"\n    ]\n}"
								},
								"url": {
									"raw": "{{baseUrl}}/requests/accept",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"requests",
										"accept"
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n \"message\": \"voluptate culpa nulla esse\"\n}"
						},
						{
							"name": "Bad request",
							"originalRequest": {
								"method": "POST",
								"header": [
									{
										"description": "Added as a part of security scheme: oauth2",
										"key": "Authorization",
										"value": "<token>"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"requestid\": \"c15ca405-56a7-5403-5281-cc9aaf862b27\",\n    \"owner\": \"occaecat sit aliquip velit\",\n    \"resourceid\": \"mollit voluptate nostrud\",\n    \"collectionIds\": [\n        \"ut ex nulla eu pariatur\",\n        \"ea exercitation magna\"\n    ]\n}"
								},
								"url": {
									"raw": "{{baseUrl}}/requests/accept",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"requests",
										"accept"
									]
								}
							},
							"status": "Bad Request",
							"code": 400,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n \"code\": 1519430,\n \"message\": \"enim\",\n \"details\": \"do\"\n}"
						},
						{
							"name": "Unauthorized",
							"originalRequest": {
								"method": "POST",
								"header": [
									{
										"description": "Added as a part of security scheme: oauth2",
										"key": "Authorization",
										"value": "<token>"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"requestid\": \"c15ca405-56a7-5403-5281-cc9aaf862b27\",\n    \"owner\": \"occaecat sit aliquip velit\",\n    \"resourceid\": \"mollit voluptate nostrud\",\n    \"collectionIds\": [\n        \"ut ex nulla eu pariatur\",\n        \"ea exercitation magna\"\n    ]\n}"
								},
								"url": {
									"raw": "{{baseUrl}}/requests/accept",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"requests",
										"accept"
									]
								}
							},
							"status": "Unauthorized",
							"code": 401,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n \"code\": 1519430,\n \"message\": \"enim\",\n \"details\": \"do\"\n}"
						},
						{
							"name": "Forbidden",
							"originalRequest": {
								"method": "POST",
								"header": [
									{
										"description": "Added as a part of security scheme: oauth2",
										"key": "Authorization",
										"value": "<token>"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"requestid\": \"c15ca405-56a7-5403-5281-cc9aaf862b27\",\n    \"owner\": \"occaecat sit aliquip velit\",\n    \"resourceid\": \"mollit voluptate nostrud\",\n    \"collectionIds\": [\n        \"ut ex nulla eu pariatur\",\n        \"ea exercitation magna\"\n    ]\n}"
								},
								"url": {
									"raw": "{{baseUrl}}/requests/accept",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"requests",
										"accept"
									]
								}
							},
							"status": "Forbidden",
							"code": 403,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n \"code\": 1519430,\n \"message\": \"enim\",\n \"details\": \"do\"\n}"
						},
						{
							"name": "Not found",
							"originalRequest": {
								"method": "POST",
								"header": [
									{
										"description": "Added as a part of security scheme: oauth2",
										"key": "Authorization",
										"value": "<token>"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"requestid\": \"c15ca405-56a7-5403-5281-cc9aaf862b27\",\n    \"owner\": \"occaecat sit aliquip velit\",\n    \"resourceid\": \"mollit voluptate nostrud\",\n    \"collectionIds\": [\n        \"ut ex nulla eu pariatur\",\n        \"ea exercitation magna\"\n    ]\n}"
								},
								"url": {
									"raw": "{{baseUrl}}/requests/accept",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"requests",
										"accept"
									]
								}
							},
							"status": "Not Found",
							"code": 404,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n \"code\": 1519430,\n \"message\": \"enim\",\n \"details\": \"do\"\n}"
						},
						{
							"name": "Server error",
							"originalRequest": {
								"method": "POST",
								"header": [
									{
										"description": "Added as a part of security scheme: oauth2",
										"key": "Authorization",
										"value": "<token>"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"requestid\": \"c15ca405-56a7-5403-5281-cc9aaf862b27\",\n    \"owner\": \"occaecat sit aliquip velit\",\n    \"resourceid\": \"mollit voluptate nostrud\",\n    \"collectionIds\": [\n        \"ut ex nulla eu pariatur\",\n        \"ea exercitation magna\"\n    ]\n}"
								},
								"url": {
									"raw": "{{baseUrl}}/requests/accept",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"requests",
										"accept"
									]
								}
							},
							"status": "Internal Server Error",
							"code": 500,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n \"code\": 1519430,\n \"message\": \"enim\",\n \"details\": \"do\"\n}"
						}
					]
				},
				{
					"name": "Reject a request",
					"request": {
						"auth": {
							"type": "oauth2"
						},
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"requestid\": \"urn:uuid:4dfc0946-02c6-f17c-f8fe-8224fc346149\",\n    \"owner\": \"in ipsum sunt consectetur\",\n    \"resourceid\": \"labore reprehenderit\"\n}"
						},
						"url": {
							"raw": "{{baseUrl}}/requests/reject",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"requests",
								"reject"
							]
						}
					},
					"response": [
						{
							"name": "Successfully retrieved dataset",
							"originalRequest": {
								"method": "POST",
								"header": [
									{
										"description": "Added as a part of security scheme: oauth2",
										"key": "Authorization",
										"value": "<token>"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"requestid\": \"urn:uuid:4dfc0946-02c6-f17c-f8fe-8224fc346149\",\n    \"owner\": \"in ipsum sunt consectetur\",\n    \"resourceid\": \"labore reprehenderit\"\n}"
								},
								"url": {
									"raw": "{{baseUrl}}/requests/reject",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"requests",
										"reject"
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n \"message\": \"voluptate culpa nulla esse\"\n}"
						},
						{
							"name": "Bad request",
							"originalRequest": {
								"method": "POST",
								"header": [
									{
										"description": "Added as a part of security scheme: oauth2",
										"key": "Authorization",
										"value": "<token>"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"requestid\": \"urn:uuid:4dfc0946-02c6-f17c-f8fe-8224fc346149\",\n    \"owner\": \"in ipsum sunt consectetur\",\n    \"resourceid\": \"labore reprehenderit\"\n}"
								},
								"url": {
									"raw": "{{baseUrl}}/requests/reject",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"requests",
										"reject"
									]
								}
							},
							"status": "Bad Request",
							"code": 400,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n \"code\": 1519430,\n \"message\": \"enim\",\n \"details\": \"do\"\n}"
						},
						{
							"name": "Unauthorized",
							"originalRequest": {
								"method": "POST",
								"header": [
									{
										"description": "Added as a part of security scheme: oauth2",
										"key": "Authorization",
										"value": "<token>"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"requestid\": \"urn:uuid:4dfc0946-02c6-f17c-f8fe-8224fc346149\",\n    \"owner\": \"in ipsum sunt consectetur\",\n    \"resourceid\": \"labore reprehenderit\"\n}"
								},
								"url": {
									"raw": "{{baseUrl}}/requests/reject",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"requests",
										"reject"
									]
								}
							},
							"status": "Unauthorized",
							"code": 401,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n \"code\": 1519430,\n \"message\": \"enim\",\n \"details\": \"do\"\n}"
						},
						{
							"name": "Forbidden",
							"originalRequest": {
								"method": "POST",
								"header": [
									{
										"description": "Added as a part of security scheme: oauth2",
										"key": "Authorization",
										"value": "<token>"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"requestid\": \"urn:uuid:4dfc0946-02c6-f17c-f8fe-8224fc346149\",\n    \"owner\": \"in ipsum sunt consectetur\",\n    \"resourceid\": \"labore reprehenderit\"\n}"
								},
								"url": {
									"raw": "{{baseUrl}}/requests/reject",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"requests",
										"reject"
									]
								}
							},
							"status": "Forbidden",
							"code": 403,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n \"code\": 1519430,\n \"message\": \"enim\",\n \"details\": \"do\"\n}"
						},
						{
							"name": "Not found",
							"originalRequest": {
								"method": "POST",
								"header": [
									{
										"description": "Added as a part of security scheme: oauth2",
										"key": "Authorization",
										"value": "<token>"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"requestid\": \"urn:uuid:4dfc0946-02c6-f17c-f8fe-8224fc346149\",\n    \"owner\": \"in ipsum sunt consectetur\",\n    \"resourceid\": \"labore reprehenderit\"\n}"
								},
								"url": {
									"raw": "{{baseUrl}}/requests/reject",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"requests",
										"reject"
									]
								}
							},
							"status": "Not Found",
							"code": 404,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n \"code\": 1519430,\n \"message\": \"enim\",\n \"details\": \"do\"\n}"
						},
						{
							"name": "Server error",
							"originalRequest": {
								"method": "POST",
								"header": [
									{
										"description": "Added as a part of security scheme: oauth2",
										"key": "Authorization",
										"value": "<token>"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"requestid\": \"urn:uuid:4dfc0946-02c6-f17c-f8fe-8224fc346149\",\n    \"owner\": \"in ipsum sunt consectetur\",\n    \"resourceid\": \"labore reprehenderit\"\n}"
								},
								"url": {
									"raw": "{{baseUrl}}/requests/reject",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"requests",
										"reject"
									]
								}
							},
							"status": "Internal Server Error",
							"code": 500,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n \"code\": 1519430,\n \"message\": \"enim\",\n \"details\": \"do\"\n}"
						}
					]
				},
				{
					"name": "Delete a request",
					"request": {
						"auth": {
							"type": "oauth2"
						},
						"method": "DELETE",
						"header": [],
						"url": {
							"raw": "{{baseUrl}}/requests/:requestid?owner=adipisicing elit ullamco&resourceid=adipisicing elit ullamco",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"requests",
								":requestid"
							],
							"query": [
								{
									"key": "owner",
									"value": "adipisicing elit ullamco",
									"description": "User name and unique identifier of the user or organization a resource belongs to. Only required for dataset authorization requests."
								},
								{
									"key": "resourceid",
									"value": "adipisicing elit ullamco",
									"description": "Unique identifier of the resource. Only required for dataset authorization requests."
								}
							],
							"variable": [
								{
									"key": "requestid",
									"value": "adipisicing elit ullamco",
									"description": "(Required) ID of the request to delete."
								}
							]
						}
					},
					"response": [
						{
							"name": "Successfully retrieved dataset",
							"originalRequest": {
								"method": "DELETE",
								"header": [
									{
										"description": "Added as a part of security scheme: oauth2",
										"key": "Authorization",
										"value": "<token>"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/requests/:requestid?owner=adipisicing elit ullamco&resourceid=adipisicing elit ullamco",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"requests",
										":requestid"
									],
									"query": [
										{
											"key": "owner",
											"value": "adipisicing elit ullamco"
										},
										{
											"key": "resourceid",
											"value": "adipisicing elit ullamco"
										}
									],
									"variable": [
										{
											"key": "requestid"
										}
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n \"message\": \"voluptate culpa nulla esse\"\n}"
						},
						{
							"name": "Bad request",
							"originalRequest": {
								"method": "DELETE",
								"header": [
									{
										"description": "Added as a part of security scheme: oauth2",
										"key": "Authorization",
										"value": "<token>"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/requests/:requestid?owner=adipisicing elit ullamco&resourceid=adipisicing elit ullamco",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"requests",
										":requestid"
									],
									"query": [
										{
											"key": "owner",
											"value": "adipisicing elit ullamco"
										},
										{
											"key": "resourceid",
											"value": "adipisicing elit ullamco"
										}
									],
									"variable": [
										{
											"key": "requestid"
										}
									]
								}
							},
							"status": "Bad Request",
							"code": 400,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n \"code\": 1519430,\n \"message\": \"enim\",\n \"details\": \"do\"\n}"
						},
						{
							"name": "Unauthorized",
							"originalRequest": {
								"method": "DELETE",
								"header": [
									{
										"description": "Added as a part of security scheme: oauth2",
										"key": "Authorization",
										"value": "<token>"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/requests/:requestid?owner=adipisicing elit ullamco&resourceid=adipisicing elit ullamco",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"requests",
										":requestid"
									],
									"query": [
										{
											"key": "owner",
											"value": "adipisicing elit ullamco"
										},
										{
											"key": "resourceid",
											"value": "adipisicing elit ullamco"
										}
									],
									"variable": [
										{
											"key": "requestid"
										}
									]
								}
							},
							"status": "Unauthorized",
							"code": 401,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n \"code\": 1519430,\n \"message\": \"enim\",\n \"details\": \"do\"\n}"
						},
						{
							"name": "Forbidden",
							"originalRequest": {
								"method": "DELETE",
								"header": [
									{
										"description": "Added as a part of security scheme: oauth2",
										"key": "Authorization",
										"value": "<token>"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/requests/:requestid?owner=adipisicing elit ullamco&resourceid=adipisicing elit ullamco",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"requests",
										":requestid"
									],
									"query": [
										{
											"key": "owner",
											"value": "adipisicing elit ullamco"
										},
										{
											"key": "resourceid",
											"value": "adipisicing elit ullamco"
										}
									],
									"variable": [
										{
											"key": "requestid"
										}
									]
								}
							},
							"status": "Forbidden",
							"code": 403,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n \"code\": 1519430,\n \"message\": \"enim\",\n \"details\": \"do\"\n}"
						},
						{
							"name": "Not found",
							"originalRequest": {
								"method": "DELETE",
								"header": [
									{
										"description": "Added as a part of security scheme: oauth2",
										"key": "Authorization",
										"value": "<token>"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/requests/:requestid?owner=adipisicing elit ullamco&resourceid=adipisicing elit ullamco",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"requests",
										":requestid"
									],
									"query": [
										{
											"key": "owner",
											"value": "adipisicing elit ullamco"
										},
										{
											"key": "resourceid",
											"value": "adipisicing elit ullamco"
										}
									],
									"variable": [
										{
											"key": "requestid"
										}
									]
								}
							},
							"status": "Not Found",
							"code": 404,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n \"code\": 1519430,\n \"message\": \"enim\",\n \"details\": \"do\"\n}"
						},
						{
							"name": "Server error",
							"originalRequest": {
								"method": "DELETE",
								"header": [
									{
										"description": "Added as a part of security scheme: oauth2",
										"key": "Authorization",
										"value": "<token>"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/requests/:requestid?owner=adipisicing elit ullamco&resourceid=adipisicing elit ullamco",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"requests",
										":requestid"
									],
									"query": [
										{
											"key": "owner",
											"value": "adipisicing elit ullamco"
										},
										{
											"key": "resourceid",
											"value": "adipisicing elit ullamco"
										}
									],
									"variable": [
										{
											"key": "requestid"
										}
									]
								}
							},
							"status": "Internal Server Error",
							"code": 500,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n \"code\": 1519430,\n \"message\": \"enim\",\n \"details\": \"do\"\n}"
						}
					]
				}
			]
		},
		{
			"name": "search",
			"item": [
				{
					"name": "Advanced search on resources",
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{readWrite}}",
									"type": "string"
								}
							]
						},
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"query\": \"dataset\"\n}"
						},
						"url": {
							"raw": "{{baseUrl}}/search?hydration=agent",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"search"
							],
							"query": [
								{
									"key": "size",
									"value": "adipisicing elit ullamco",
									"disabled": true
								},
								{
									"key": "from",
									"value": "adipisicing elit ullamco",
									"disabled": true
								},
								{
									"key": "sort",
									"value": "adipisicing elit ullamco",
									"disabled": true
								},
								{
									"key": "hydration",
									"value": "agent"
								},
								{
									"key": "hydration",
									"value": "agent",
									"disabled": true
								}
							]
						}
					},
					"response": [
						{
							"name": "successful operation",
							"originalRequest": {
								"method": "POST",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"query\": \"irure qui sed\",\n    \"category\": [\n        \"insight\",\n        \"catalogTable\"\n    ],\n    \"type\": [\n        \"occaecat eu fugiat veniam\",\n        \"ad\"\n    ],\n    \"owner\": [\n        \"in eu\",\n        \"voluptate ea\"\n    ],\n    \"minAccessLevel\": \"READ\",\n    \"tag\": [\n        \"fugiat dolore\",\n        \"reprehenderit officia sit id\"\n    ],\n    \"visibility\": \"PRIVATE\",\n    \"createdRange\": {\n        \"endDate\": \"pari\",\n        \"startDate\": \"culpa quis qui\"\n    },\n    \"updatedRange\": {\n        \"endDate\": \"culpa nulla\",\n        \"startDate\": \"nostrud dolor occaecat ad\"\n    },\n    \"assetStatus\": [\n        \"minim laborum nostrud\",\n        \"incididunt\"\n    ]\n}"
								},
								"url": {
									"raw": "{{baseUrl}}/search?size=adipisicing elit ullamco&from=adipisicing elit ullamco&sort=adipisicing elit ullamco&hydration=agent&hydration=agent",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"search"
									],
									"query": [
										{
											"key": "size",
											"value": "adipisicing elit ullamco"
										},
										{
											"key": "from",
											"value": "adipisicing elit ullamco"
										},
										{
											"key": "sort",
											"value": "adipisicing elit ullamco"
										},
										{
											"key": "hydration",
											"value": "agent"
										},
										{
											"key": "hydration",
											"value": "agent"
										}
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n \"count\": 79751707,\n \"next\": \"mollit do\",\n \"hydrations\": {\n  \"agents\": {},\n  \"catalogConcepts\": {},\n  \"catalogs\": {},\n  \"catalogAnalysis\": {},\n  \"catalogBusinessTerms\": {},\n  \"catalogTables\": {},\n  \"catalogColumns\": {},\n  \"unknownCatalogEntry\": {},\n  \"datasets\": {},\n  \"insights\": {}\n }\n}"
						},
						{
							"name": "Bad request",
							"originalRequest": {
								"method": "POST",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"query\": \"irure qui sed\",\n    \"category\": [\n        \"insight\",\n        \"catalogTable\"\n    ],\n    \"type\": [\n        \"occaecat eu fugiat veniam\",\n        \"ad\"\n    ],\n    \"owner\": [\n        \"in eu\",\n        \"voluptate ea\"\n    ],\n    \"minAccessLevel\": \"READ\",\n    \"tag\": [\n        \"fugiat dolore\",\n        \"reprehenderit officia sit id\"\n    ],\n    \"visibility\": \"PRIVATE\",\n    \"createdRange\": {\n        \"endDate\": \"pari\",\n        \"startDate\": \"culpa quis qui\"\n    },\n    \"updatedRange\": {\n        \"endDate\": \"culpa nulla\",\n        \"startDate\": \"nostrud dolor occaecat ad\"\n    },\n    \"assetStatus\": [\n        \"minim laborum nostrud\",\n        \"incididunt\"\n    ]\n}"
								},
								"url": {
									"raw": "{{baseUrl}}/search?size=adipisicing elit ullamco&from=adipisicing elit ullamco&sort=adipisicing elit ullamco&hydration=agent&hydration=agent",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"search"
									],
									"query": [
										{
											"key": "size",
											"value": "adipisicing elit ullamco"
										},
										{
											"key": "from",
											"value": "adipisicing elit ullamco"
										},
										{
											"key": "sort",
											"value": "adipisicing elit ullamco"
										},
										{
											"key": "hydration",
											"value": "agent"
										},
										{
											"key": "hydration",
											"value": "agent"
										}
									]
								}
							},
							"status": "Bad Request",
							"code": 400,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n \"code\": 1519430,\n \"message\": \"enim\",\n \"details\": \"do\"\n}"
						},
						{
							"name": "Unauthorized",
							"originalRequest": {
								"method": "POST",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"query\": \"irure qui sed\",\n    \"category\": [\n        \"insight\",\n        \"catalogTable\"\n    ],\n    \"type\": [\n        \"occaecat eu fugiat veniam\",\n        \"ad\"\n    ],\n    \"owner\": [\n        \"in eu\",\n        \"voluptate ea\"\n    ],\n    \"minAccessLevel\": \"READ\",\n    \"tag\": [\n        \"fugiat dolore\",\n        \"reprehenderit officia sit id\"\n    ],\n    \"visibility\": \"PRIVATE\",\n    \"createdRange\": {\n        \"endDate\": \"pari\",\n        \"startDate\": \"culpa quis qui\"\n    },\n    \"updatedRange\": {\n        \"endDate\": \"culpa nulla\",\n        \"startDate\": \"nostrud dolor occaecat ad\"\n    },\n    \"assetStatus\": [\n        \"minim laborum nostrud\",\n        \"incididunt\"\n    ]\n}"
								},
								"url": {
									"raw": "{{baseUrl}}/search?size=adipisicing elit ullamco&from=adipisicing elit ullamco&sort=adipisicing elit ullamco&hydration=agent&hydration=agent",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"search"
									],
									"query": [
										{
											"key": "size",
											"value": "adipisicing elit ullamco"
										},
										{
											"key": "from",
											"value": "adipisicing elit ullamco"
										},
										{
											"key": "sort",
											"value": "adipisicing elit ullamco"
										},
										{
											"key": "hydration",
											"value": "agent"
										},
										{
											"key": "hydration",
											"value": "agent"
										}
									]
								}
							},
							"status": "Unauthorized",
							"code": 401,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n \"code\": 1519430,\n \"message\": \"enim\",\n \"details\": \"do\"\n}"
						},
						{
							"name": "Forbidden",
							"originalRequest": {
								"method": "POST",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"query\": \"irure qui sed\",\n    \"category\": [\n        \"insight\",\n        \"catalogTable\"\n    ],\n    \"type\": [\n        \"occaecat eu fugiat veniam\",\n        \"ad\"\n    ],\n    \"owner\": [\n        \"in eu\",\n        \"voluptate ea\"\n    ],\n    \"minAccessLevel\": \"READ\",\n    \"tag\": [\n        \"fugiat dolore\",\n        \"reprehenderit officia sit id\"\n    ],\n    \"visibility\": \"PRIVATE\",\n    \"createdRange\": {\n        \"endDate\": \"pari\",\n        \"startDate\": \"culpa quis qui\"\n    },\n    \"updatedRange\": {\n        \"endDate\": \"culpa nulla\",\n        \"startDate\": \"nostrud dolor occaecat ad\"\n    },\n    \"assetStatus\": [\n        \"minim laborum nostrud\",\n        \"incididunt\"\n    ]\n}"
								},
								"url": {
									"raw": "{{baseUrl}}/search?size=adipisicing elit ullamco&from=adipisicing elit ullamco&sort=adipisicing elit ullamco&hydration=agent&hydration=agent",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"search"
									],
									"query": [
										{
											"key": "size",
											"value": "adipisicing elit ullamco"
										},
										{
											"key": "from",
											"value": "adipisicing elit ullamco"
										},
										{
											"key": "sort",
											"value": "adipisicing elit ullamco"
										},
										{
											"key": "hydration",
											"value": "agent"
										},
										{
											"key": "hydration",
											"value": "agent"
										}
									]
								}
							},
							"status": "Forbidden",
							"code": 403,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n \"code\": 1519430,\n \"message\": \"enim\",\n \"details\": \"do\"\n}"
						},
						{
							"name": "Not found",
							"originalRequest": {
								"method": "POST",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"query\": \"irure qui sed\",\n    \"category\": [\n        \"insight\",\n        \"catalogTable\"\n    ],\n    \"type\": [\n        \"occaecat eu fugiat veniam\",\n        \"ad\"\n    ],\n    \"owner\": [\n        \"in eu\",\n        \"voluptate ea\"\n    ],\n    \"minAccessLevel\": \"READ\",\n    \"tag\": [\n        \"fugiat dolore\",\n        \"reprehenderit officia sit id\"\n    ],\n    \"visibility\": \"PRIVATE\",\n    \"createdRange\": {\n        \"endDate\": \"pari\",\n        \"startDate\": \"culpa quis qui\"\n    },\n    \"updatedRange\": {\n        \"endDate\": \"culpa nulla\",\n        \"startDate\": \"nostrud dolor occaecat ad\"\n    },\n    \"assetStatus\": [\n        \"minim laborum nostrud\",\n        \"incididunt\"\n    ]\n}"
								},
								"url": {
									"raw": "{{baseUrl}}/search?size=adipisicing elit ullamco&from=adipisicing elit ullamco&sort=adipisicing elit ullamco&hydration=agent&hydration=agent",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"search"
									],
									"query": [
										{
											"key": "size",
											"value": "adipisicing elit ullamco"
										},
										{
											"key": "from",
											"value": "adipisicing elit ullamco"
										},
										{
											"key": "sort",
											"value": "adipisicing elit ullamco"
										},
										{
											"key": "hydration",
											"value": "agent"
										},
										{
											"key": "hydration",
											"value": "agent"
										}
									]
								}
							},
							"status": "Not Found",
							"code": 404,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n \"code\": 1519430,\n \"message\": \"enim\",\n \"details\": \"do\"\n}"
						},
						{
							"name": "Server error",
							"originalRequest": {
								"method": "POST",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"query\": \"irure qui sed\",\n    \"category\": [\n        \"insight\",\n        \"catalogTable\"\n    ],\n    \"type\": [\n        \"occaecat eu fugiat veniam\",\n        \"ad\"\n    ],\n    \"owner\": [\n        \"in eu\",\n        \"voluptate ea\"\n    ],\n    \"minAccessLevel\": \"READ\",\n    \"tag\": [\n        \"fugiat dolore\",\n        \"reprehenderit officia sit id\"\n    ],\n    \"visibility\": \"PRIVATE\",\n    \"createdRange\": {\n        \"endDate\": \"pari\",\n        \"startDate\": \"culpa quis qui\"\n    },\n    \"updatedRange\": {\n        \"endDate\": \"culpa nulla\",\n        \"startDate\": \"nostrud dolor occaecat ad\"\n    },\n    \"assetStatus\": [\n        \"minim laborum nostrud\",\n        \"incididunt\"\n    ]\n}"
								},
								"url": {
									"raw": "{{baseUrl}}/search?size=adipisicing elit ullamco&from=adipisicing elit ullamco&sort=adipisicing elit ullamco&hydration=agent&hydration=agent",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"search"
									],
									"query": [
										{
											"key": "size",
											"value": "adipisicing elit ullamco"
										},
										{
											"key": "from",
											"value": "adipisicing elit ullamco"
										},
										{
											"key": "sort",
											"value": "adipisicing elit ullamco"
										},
										{
											"key": "hydration",
											"value": "agent"
										},
										{
											"key": "hydration",
											"value": "agent"
										}
									]
								}
							},
							"status": "Internal Server Error",
							"code": 500,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n \"code\": 1519430,\n \"message\": \"enim\",\n \"details\": \"do\"\n}"
						}
					]
				},
				{
					"name": "Simple search on resources",
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{readWrite}}",
									"type": "string"
								}
							]
						},
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"query\": \"dataset\",\n    \"owner\": [\n        \"rick-liao\"\n    ],\n    \"includeCommunityResults\": true\n}"
						},
						"url": {
							"raw": "{{baseUrl}}/search/resources",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"search",
								"resources"
							],
							"query": [
								{
									"key": "size",
									"value": "adipisicing elit ullamco",
									"disabled": true
								},
								{
									"key": "from",
									"value": "adipisicing elit ullamco",
									"disabled": true
								},
								{
									"key": "sort",
									"value": "adipisicing elit ullamco",
									"disabled": true
								}
							]
						}
					},
					"response": [
						{
							"name": "successful operation",
							"originalRequest": {
								"method": "POST",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"query\": \"laborum commodo\",\n    \"owner\": [\n        \"nisi sit\",\n        \"\"\n    ],\n    \"category\": [\n        \"insight\",\n        \"dataset\"\n    ],\n    \"includeCommunityResults\": false\n}"
								},
								"url": {
									"raw": "{{baseUrl}}/search/resources?size=adipisicing elit ullamco&from=adipisicing elit ullamco&sort=adipisicing elit ullamco",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"search",
										"resources"
									],
									"query": [
										{
											"key": "size",
											"value": "adipisicing elit ullamco"
										},
										{
											"key": "from",
											"value": "adipisicing elit ullamco"
										},
										{
											"key": "sort",
											"value": "adipisicing elit ullamco"
										}
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n \"count\": 38846964,\n \"next\": \"elit mollit\",\n \"hydrations\": {\n  \"agents\": {},\n  \"catalogConcepts\": {},\n  \"catalogs\": {},\n  \"catalogAnalysis\": {},\n  \"catalogBusinessTerms\": {},\n  \"catalogTables\": {},\n  \"catalogColumns\": {},\n  \"unknownCatalogEntry\": {},\n  \"datasets\": {},\n  \"insights\": {}\n }\n}"
						},
						{
							"name": "Bad request",
							"originalRequest": {
								"method": "POST",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"query\": \"laborum commodo\",\n    \"owner\": [\n        \"nisi sit\",\n        \"\"\n    ],\n    \"category\": [\n        \"insight\",\n        \"dataset\"\n    ],\n    \"includeCommunityResults\": false\n}"
								},
								"url": {
									"raw": "{{baseUrl}}/search/resources?size=adipisicing elit ullamco&from=adipisicing elit ullamco&sort=adipisicing elit ullamco",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"search",
										"resources"
									],
									"query": [
										{
											"key": "size",
											"value": "adipisicing elit ullamco"
										},
										{
											"key": "from",
											"value": "adipisicing elit ullamco"
										},
										{
											"key": "sort",
											"value": "adipisicing elit ullamco"
										}
									]
								}
							},
							"status": "Bad Request",
							"code": 400,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n \"code\": 1519430,\n \"message\": \"enim\",\n \"details\": \"do\"\n}"
						},
						{
							"name": "Unauthorized",
							"originalRequest": {
								"method": "POST",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"query\": \"laborum commodo\",\n    \"owner\": [\n        \"nisi sit\",\n        \"\"\n    ],\n    \"category\": [\n        \"insight\",\n        \"dataset\"\n    ],\n    \"includeCommunityResults\": false\n}"
								},
								"url": {
									"raw": "{{baseUrl}}/search/resources?size=adipisicing elit ullamco&from=adipisicing elit ullamco&sort=adipisicing elit ullamco",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"search",
										"resources"
									],
									"query": [
										{
											"key": "size",
											"value": "adipisicing elit ullamco"
										},
										{
											"key": "from",
											"value": "adipisicing elit ullamco"
										},
										{
											"key": "sort",
											"value": "adipisicing elit ullamco"
										}
									]
								}
							},
							"status": "Unauthorized",
							"code": 401,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n \"code\": 1519430,\n \"message\": \"enim\",\n \"details\": \"do\"\n}"
						},
						{
							"name": "Forbidden",
							"originalRequest": {
								"method": "POST",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"query\": \"laborum commodo\",\n    \"owner\": [\n        \"nisi sit\",\n        \"\"\n    ],\n    \"category\": [\n        \"insight\",\n        \"dataset\"\n    ],\n    \"includeCommunityResults\": false\n}"
								},
								"url": {
									"raw": "{{baseUrl}}/search/resources?size=adipisicing elit ullamco&from=adipisicing elit ullamco&sort=adipisicing elit ullamco",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"search",
										"resources"
									],
									"query": [
										{
											"key": "size",
											"value": "adipisicing elit ullamco"
										},
										{
											"key": "from",
											"value": "adipisicing elit ullamco"
										},
										{
											"key": "sort",
											"value": "adipisicing elit ullamco"
										}
									]
								}
							},
							"status": "Forbidden",
							"code": 403,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n \"code\": 1519430,\n \"message\": \"enim\",\n \"details\": \"do\"\n}"
						},
						{
							"name": "Not found",
							"originalRequest": {
								"method": "POST",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"query\": \"laborum commodo\",\n    \"owner\": [\n        \"nisi sit\",\n        \"\"\n    ],\n    \"category\": [\n        \"insight\",\n        \"dataset\"\n    ],\n    \"includeCommunityResults\": false\n}"
								},
								"url": {
									"raw": "{{baseUrl}}/search/resources?size=adipisicing elit ullamco&from=adipisicing elit ullamco&sort=adipisicing elit ullamco",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"search",
										"resources"
									],
									"query": [
										{
											"key": "size",
											"value": "adipisicing elit ullamco"
										},
										{
											"key": "from",
											"value": "adipisicing elit ullamco"
										},
										{
											"key": "sort",
											"value": "adipisicing elit ullamco"
										}
									]
								}
							},
							"status": "Not Found",
							"code": 404,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n \"code\": 1519430,\n \"message\": \"enim\",\n \"details\": \"do\"\n}"
						},
						{
							"name": "Server error",
							"originalRequest": {
								"method": "POST",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"query\": \"laborum commodo\",\n    \"owner\": [\n        \"nisi sit\",\n        \"\"\n    ],\n    \"category\": [\n        \"insight\",\n        \"dataset\"\n    ],\n    \"includeCommunityResults\": false\n}"
								},
								"url": {
									"raw": "{{baseUrl}}/search/resources?size=adipisicing elit ullamco&from=adipisicing elit ullamco&sort=adipisicing elit ullamco",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"search",
										"resources"
									],
									"query": [
										{
											"key": "size",
											"value": "adipisicing elit ullamco"
										},
										{
											"key": "from",
											"value": "adipisicing elit ullamco"
										},
										{
											"key": "sort",
											"value": "adipisicing elit ullamco"
										}
									]
								}
							},
							"status": "Internal Server Error",
							"code": 500,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n \"code\": 1519430,\n \"message\": \"enim\",\n \"details\": \"do\"\n}"
						}
					]
				}
			]
		},
		{
			"name": "sparql/{owner}/{id}",
			"item": [
				{
					"name": "SPARQL query (via GET)",
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{admin}}",
									"type": "string"
								}
							]
						},
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{baseUrl}}/sparql/:owner/:id?query=select ?s where {?s ?p ?o.}",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"sparql",
								":owner",
								":id"
							],
							"query": [
								{
									"key": "query",
									"value": "select ?s where {?s ?p ?o.}"
								},
								{
									"key": "queryruntoken",
									"value": "adipisicing elit ullamco",
									"description": "Query token to use with cancel",
									"disabled": true
								}
							],
							"variable": [
								{
									"key": "owner",
									"value": "{{owner}}",
									"description": "(Required) "
								},
								{
									"key": "id",
									"value": "{{datasetid}}",
									"description": "(Required) "
								}
							]
						},
						"description": "This endpoint executes SPARQL queries against a dataset.\nNew to SPARQL? Check out data.world's [SPARQL tutorial](https://docs.data.world/tutorials/sparql/) ."
					},
					"response": [
						{
							"name": "The request has succeeded.",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"description": "Added as a part of security scheme: oauth2",
										"key": "Authorization",
										"value": "<token>"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/sparql/:owner/:id?query=adipisicing elit ullamco&queryruntoken=adipisicing elit ullamco",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"sparql",
										":owner",
										":id"
									],
									"query": [
										{
											"key": "query",
											"value": "adipisicing elit ullamco"
										},
										{
											"key": "queryruntoken",
											"value": "adipisicing elit ullamco"
										}
									],
									"variable": [
										{
											"key": "owner"
										},
										{
											"key": "id"
										}
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "text",
							"header": [
								{
									"key": "Content-Type",
									"value": "text/plain"
								}
							],
							"cookie": [],
							"body": ""
						},
						{
							"name": "Bad request",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"description": "Added as a part of security scheme: oauth2",
										"key": "Authorization",
										"value": "<token>"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/sparql/:owner/:id?query=adipisicing elit ullamco&queryruntoken=adipisicing elit ullamco",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"sparql",
										":owner",
										":id"
									],
									"query": [
										{
											"key": "query",
											"value": "adipisicing elit ullamco"
										},
										{
											"key": "queryruntoken",
											"value": "adipisicing elit ullamco"
										}
									],
									"variable": [
										{
											"key": "owner"
										},
										{
											"key": "id"
										}
									]
								}
							},
							"status": "Bad Request",
							"code": 400,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/rdf+json"
								}
							],
							"cookie": [],
							"body": "{\n \"code\": 1519430,\n \"message\": \"enim\",\n \"details\": \"do\"\n}"
						},
						{
							"name": "Unauthorized",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"description": "Added as a part of security scheme: oauth2",
										"key": "Authorization",
										"value": "<token>"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/sparql/:owner/:id?query=adipisicing elit ullamco&queryruntoken=adipisicing elit ullamco",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"sparql",
										":owner",
										":id"
									],
									"query": [
										{
											"key": "query",
											"value": "adipisicing elit ullamco"
										},
										{
											"key": "queryruntoken",
											"value": "adipisicing elit ullamco"
										}
									],
									"variable": [
										{
											"key": "owner"
										},
										{
											"key": "id"
										}
									]
								}
							},
							"status": "Unauthorized",
							"code": 401,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/rdf+json"
								}
							],
							"cookie": [],
							"body": "{\n \"code\": 1519430,\n \"message\": \"enim\",\n \"details\": \"do\"\n}"
						},
						{
							"name": "Forbidden",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"description": "Added as a part of security scheme: oauth2",
										"key": "Authorization",
										"value": "<token>"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/sparql/:owner/:id?query=adipisicing elit ullamco&queryruntoken=adipisicing elit ullamco",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"sparql",
										":owner",
										":id"
									],
									"query": [
										{
											"key": "query",
											"value": "adipisicing elit ullamco"
										},
										{
											"key": "queryruntoken",
											"value": "adipisicing elit ullamco"
										}
									],
									"variable": [
										{
											"key": "owner"
										},
										{
											"key": "id"
										}
									]
								}
							},
							"status": "Forbidden",
							"code": 403,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/rdf+json"
								}
							],
							"cookie": [],
							"body": "{\n \"code\": 1519430,\n \"message\": \"enim\",\n \"details\": \"do\"\n}"
						},
						{
							"name": "Not found",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"description": "Added as a part of security scheme: oauth2",
										"key": "Authorization",
										"value": "<token>"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/sparql/:owner/:id?query=adipisicing elit ullamco&queryruntoken=adipisicing elit ullamco",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"sparql",
										":owner",
										":id"
									],
									"query": [
										{
											"key": "query",
											"value": "adipisicing elit ullamco"
										},
										{
											"key": "queryruntoken",
											"value": "adipisicing elit ullamco"
										}
									],
									"variable": [
										{
											"key": "owner"
										},
										{
											"key": "id"
										}
									]
								}
							},
							"status": "Not Found",
							"code": 404,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/rdf+json"
								}
							],
							"cookie": [],
							"body": "{\n \"code\": 1519430,\n \"message\": \"enim\",\n \"details\": \"do\"\n}"
						},
						{
							"name": "Server error",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"description": "Added as a part of security scheme: oauth2",
										"key": "Authorization",
										"value": "<token>"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/sparql/:owner/:id?query=adipisicing elit ullamco&queryruntoken=adipisicing elit ullamco",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"sparql",
										":owner",
										":id"
									],
									"query": [
										{
											"key": "query",
											"value": "adipisicing elit ullamco"
										},
										{
											"key": "queryruntoken",
											"value": "adipisicing elit ullamco"
										}
									],
									"variable": [
										{
											"key": "owner"
										},
										{
											"key": "id"
										}
									]
								}
							},
							"status": "Internal Server Error",
							"code": 500,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/rdf+json"
								}
							],
							"cookie": [],
							"body": "{\n \"code\": 1519430,\n \"message\": \"enim\",\n \"details\": \"do\"\n}"
						}
					]
				},
				{
					"name": "SPARQL query",
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{admin}}",
									"type": "string"
								}
							]
						},
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/x-www-form-urlencoded"
							}
						],
						"body": {
							"mode": "urlencoded",
							"urlencoded": [
								{
									"key": "query",
									"value": "select ?s where {?s ?p ?o.}"
								}
							]
						},
						"url": {
							"raw": "{{baseUrl}}/sparql/:owner/:id?queryruntoken=123",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"sparql",
								":owner",
								":id"
							],
							"query": [
								{
									"key": "queryruntoken",
									"value": "123",
									"description": "Query token to use with cancel"
								}
							],
							"variable": [
								{
									"key": "owner",
									"value": "{{owner}}",
									"description": "(Required) "
								},
								{
									"key": "id",
									"value": "{{datasetid}}",
									"description": "(Required) "
								}
							]
						},
						"description": "This endpoint executes SPARQL queries against a dataset.\nNew to SPARQL? Check out data.world's [SPARQL tutorial](https://docs.data.world/tutorials/sparql/) ."
					},
					"response": [
						{
							"name": "The request has succeeded.",
							"originalRequest": {
								"method": "POST",
								"header": [
									{
										"description": "Added as a part of security scheme: oauth2",
										"key": "Authorization",
										"value": "<token>"
									}
								],
								"body": {
									"mode": "urlencoded",
									"urlencoded": [
										{
											"key": "query",
											"value": "commodo ex id mollit"
										}
									]
								},
								"url": {
									"raw": "{{baseUrl}}/sparql/:owner/:id?queryruntoken=adipisicing elit ullamco",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"sparql",
										":owner",
										":id"
									],
									"query": [
										{
											"key": "queryruntoken",
											"value": "adipisicing elit ullamco"
										}
									],
									"variable": [
										{
											"key": "owner"
										},
										{
											"key": "id"
										}
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "text",
							"header": [
								{
									"key": "Content-Type",
									"value": "text/plain"
								}
							],
							"cookie": [],
							"body": ""
						},
						{
							"name": "Bad request",
							"originalRequest": {
								"method": "POST",
								"header": [
									{
										"description": "Added as a part of security scheme: oauth2",
										"key": "Authorization",
										"value": "<token>"
									}
								],
								"body": {
									"mode": "urlencoded",
									"urlencoded": [
										{
											"key": "query",
											"value": "commodo ex id mollit"
										}
									]
								},
								"url": {
									"raw": "{{baseUrl}}/sparql/:owner/:id?queryruntoken=adipisicing elit ullamco",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"sparql",
										":owner",
										":id"
									],
									"query": [
										{
											"key": "queryruntoken",
											"value": "adipisicing elit ullamco"
										}
									],
									"variable": [
										{
											"key": "owner"
										},
										{
											"key": "id"
										}
									]
								}
							},
							"status": "Bad Request",
							"code": 400,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/rdf+json"
								}
							],
							"cookie": [],
							"body": "{\n \"code\": 1519430,\n \"message\": \"enim\",\n \"details\": \"do\"\n}"
						},
						{
							"name": "Unauthorized",
							"originalRequest": {
								"method": "POST",
								"header": [
									{
										"description": "Added as a part of security scheme: oauth2",
										"key": "Authorization",
										"value": "<token>"
									}
								],
								"body": {
									"mode": "urlencoded",
									"urlencoded": [
										{
											"key": "query",
											"value": "commodo ex id mollit"
										}
									]
								},
								"url": {
									"raw": "{{baseUrl}}/sparql/:owner/:id?queryruntoken=adipisicing elit ullamco",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"sparql",
										":owner",
										":id"
									],
									"query": [
										{
											"key": "queryruntoken",
											"value": "adipisicing elit ullamco"
										}
									],
									"variable": [
										{
											"key": "owner"
										},
										{
											"key": "id"
										}
									]
								}
							},
							"status": "Unauthorized",
							"code": 401,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/rdf+json"
								}
							],
							"cookie": [],
							"body": "{\n \"code\": 1519430,\n \"message\": \"enim\",\n \"details\": \"do\"\n}"
						},
						{
							"name": "Forbidden",
							"originalRequest": {
								"method": "POST",
								"header": [
									{
										"description": "Added as a part of security scheme: oauth2",
										"key": "Authorization",
										"value": "<token>"
									}
								],
								"body": {
									"mode": "urlencoded",
									"urlencoded": [
										{
											"key": "query",
											"value": "commodo ex id mollit"
										}
									]
								},
								"url": {
									"raw": "{{baseUrl}}/sparql/:owner/:id?queryruntoken=adipisicing elit ullamco",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"sparql",
										":owner",
										":id"
									],
									"query": [
										{
											"key": "queryruntoken",
											"value": "adipisicing elit ullamco"
										}
									],
									"variable": [
										{
											"key": "owner"
										},
										{
											"key": "id"
										}
									]
								}
							},
							"status": "Forbidden",
							"code": 403,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/rdf+json"
								}
							],
							"cookie": [],
							"body": "{\n \"code\": 1519430,\n \"message\": \"enim\",\n \"details\": \"do\"\n}"
						},
						{
							"name": "Not found",
							"originalRequest": {
								"method": "POST",
								"header": [
									{
										"description": "Added as a part of security scheme: oauth2",
										"key": "Authorization",
										"value": "<token>"
									}
								],
								"body": {
									"mode": "urlencoded",
									"urlencoded": [
										{
											"key": "query",
											"value": "commodo ex id mollit"
										}
									]
								},
								"url": {
									"raw": "{{baseUrl}}/sparql/:owner/:id?queryruntoken=adipisicing elit ullamco",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"sparql",
										":owner",
										":id"
									],
									"query": [
										{
											"key": "queryruntoken",
											"value": "adipisicing elit ullamco"
										}
									],
									"variable": [
										{
											"key": "owner"
										},
										{
											"key": "id"
										}
									]
								}
							},
							"status": "Not Found",
							"code": 404,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/rdf+json"
								}
							],
							"cookie": [],
							"body": "{\n \"code\": 1519430,\n \"message\": \"enim\",\n \"details\": \"do\"\n}"
						},
						{
							"name": "Bad request",
							"originalRequest": {
								"method": "POST",
								"header": [
									{
										"description": "Added as a part of security scheme: oauth2",
										"key": "Authorization",
										"value": "<token>"
									}
								],
								"body": {
									"mode": "urlencoded",
									"urlencoded": [
										{
											"key": "query",
											"value": "commodo ex id mollit"
										}
									]
								},
								"url": {
									"raw": "{{baseUrl}}/sparql/:owner/:id?queryruntoken=adipisicing elit ullamco",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"sparql",
										":owner",
										":id"
									],
									"query": [
										{
											"key": "queryruntoken",
											"value": "adipisicing elit ullamco"
										}
									],
									"variable": [
										{
											"key": "owner"
										},
										{
											"key": "id"
										}
									]
								}
							},
							"status": "Unprocessable Entity (WebDAV) (RFC 4918)",
							"code": 422,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/rdf+json"
								}
							],
							"cookie": [],
							"body": "{\n \"code\": 1519430,\n \"message\": \"enim\",\n \"details\": \"do\"\n}"
						},
						{
							"name": "Server error",
							"originalRequest": {
								"method": "POST",
								"header": [
									{
										"description": "Added as a part of security scheme: oauth2",
										"key": "Authorization",
										"value": "<token>"
									}
								],
								"body": {
									"mode": "urlencoded",
									"urlencoded": [
										{
											"key": "query",
											"value": "commodo ex id mollit"
										}
									]
								},
								"url": {
									"raw": "{{baseUrl}}/sparql/:owner/:id?queryruntoken=adipisicing elit ullamco",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"sparql",
										":owner",
										":id"
									],
									"query": [
										{
											"key": "queryruntoken",
											"value": "adipisicing elit ullamco"
										}
									],
									"variable": [
										{
											"key": "owner"
										},
										{
											"key": "id"
										}
									]
								}
							},
							"status": "Internal Server Error",
							"code": 500,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/rdf+json"
								}
							],
							"cookie": [],
							"body": "{\n \"code\": 1519430,\n \"message\": \"enim\",\n \"details\": \"do\"\n}"
						}
					]
				}
			]
		},
		{
			"name": "sql/{owner}/{id}",
			"item": [
				{
					"name": "SQL query (via GET)",
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{readWrite}}",
									"type": "string"
								}
							]
						},
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{baseUrl}}/sql/:owner/:id?query=select last_name from 50_rows",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"sql",
								":owner",
								":id"
							],
							"query": [
								{
									"key": "includeTableSchema",
									"value": "false",
									"disabled": true
								},
								{
									"key": "query",
									"value": "select last_name from 50_rows"
								},
								{
									"key": "dialect",
									"value": "DW_SQL",
									"disabled": true
								},
								{
									"key": "queryruntoken",
									"value": "adipisicing elit ullamco",
									"description": "Query token to use with cancel",
									"disabled": true
								}
							],
							"variable": [
								{
									"key": "owner",
									"value": "{{owner}}",
									"description": "(Required) "
								},
								{
									"key": "id",
									"value": "{{datasetid}}",
									"description": "(Required) "
								}
							]
						},
						"description": "This endpoint executes SQL queries against a dataset.\nNew to SQL? Check out data.world's [SQL manual](https://docs.data.world/tutorials/dwsql/) ."
					},
					"response": [
						{
							"name": "The request has succeeded.",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"description": "Added as a part of security scheme: oauth2",
										"key": "Authorization",
										"value": "<token>"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/sql/:owner/:id?includeTableSchema=false&query=adipisicing elit ullamco&dialect=DW_SQL&queryruntoken=adipisicing elit ullamco",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"sql",
										":owner",
										":id"
									],
									"query": [
										{
											"key": "includeTableSchema",
											"value": "false"
										},
										{
											"key": "query",
											"value": "adipisicing elit ullamco"
										},
										{
											"key": "dialect",
											"value": "DW_SQL"
										},
										{
											"key": "queryruntoken",
											"value": "adipisicing elit ullamco"
										}
									],
									"variable": [
										{
											"key": "owner"
										},
										{
											"key": "id"
										}
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "text",
							"header": [
								{
									"key": "Content-Type",
									"value": "text/plain"
								}
							],
							"cookie": [],
							"body": ""
						},
						{
							"name": "Bad request",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"description": "Added as a part of security scheme: oauth2",
										"key": "Authorization",
										"value": "<token>"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/sql/:owner/:id?includeTableSchema=false&query=adipisicing elit ullamco&dialect=DW_SQL&queryruntoken=adipisicing elit ullamco",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"sql",
										":owner",
										":id"
									],
									"query": [
										{
											"key": "includeTableSchema",
											"value": "false"
										},
										{
											"key": "query",
											"value": "adipisicing elit ullamco"
										},
										{
											"key": "dialect",
											"value": "DW_SQL"
										},
										{
											"key": "queryruntoken",
											"value": "adipisicing elit ullamco"
										}
									],
									"variable": [
										{
											"key": "owner"
										},
										{
											"key": "id"
										}
									]
								}
							},
							"status": "Bad Request",
							"code": 400,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n \"code\": 1519430,\n \"message\": \"enim\",\n \"details\": \"do\"\n}"
						},
						{
							"name": "Unauthorized",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"description": "Added as a part of security scheme: oauth2",
										"key": "Authorization",
										"value": "<token>"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/sql/:owner/:id?includeTableSchema=false&query=adipisicing elit ullamco&dialect=DW_SQL&queryruntoken=adipisicing elit ullamco",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"sql",
										":owner",
										":id"
									],
									"query": [
										{
											"key": "includeTableSchema",
											"value": "false"
										},
										{
											"key": "query",
											"value": "adipisicing elit ullamco"
										},
										{
											"key": "dialect",
											"value": "DW_SQL"
										},
										{
											"key": "queryruntoken",
											"value": "adipisicing elit ullamco"
										}
									],
									"variable": [
										{
											"key": "owner"
										},
										{
											"key": "id"
										}
									]
								}
							},
							"status": "Unauthorized",
							"code": 401,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n \"code\": 1519430,\n \"message\": \"enim\",\n \"details\": \"do\"\n}"
						},
						{
							"name": "Forbidden",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"description": "Added as a part of security scheme: oauth2",
										"key": "Authorization",
										"value": "<token>"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/sql/:owner/:id?includeTableSchema=false&query=adipisicing elit ullamco&dialect=DW_SQL&queryruntoken=adipisicing elit ullamco",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"sql",
										":owner",
										":id"
									],
									"query": [
										{
											"key": "includeTableSchema",
											"value": "false"
										},
										{
											"key": "query",
											"value": "adipisicing elit ullamco"
										},
										{
											"key": "dialect",
											"value": "DW_SQL"
										},
										{
											"key": "queryruntoken",
											"value": "adipisicing elit ullamco"
										}
									],
									"variable": [
										{
											"key": "owner"
										},
										{
											"key": "id"
										}
									]
								}
							},
							"status": "Forbidden",
							"code": 403,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n \"code\": 1519430,\n \"message\": \"enim\",\n \"details\": \"do\"\n}"
						},
						{
							"name": "Not found",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"description": "Added as a part of security scheme: oauth2",
										"key": "Authorization",
										"value": "<token>"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/sql/:owner/:id?includeTableSchema=false&query=adipisicing elit ullamco&dialect=DW_SQL&queryruntoken=adipisicing elit ullamco",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"sql",
										":owner",
										":id"
									],
									"query": [
										{
											"key": "includeTableSchema",
											"value": "false"
										},
										{
											"key": "query",
											"value": "adipisicing elit ullamco"
										},
										{
											"key": "dialect",
											"value": "DW_SQL"
										},
										{
											"key": "queryruntoken",
											"value": "adipisicing elit ullamco"
										}
									],
									"variable": [
										{
											"key": "owner"
										},
										{
											"key": "id"
										}
									]
								}
							},
							"status": "Not Found",
							"code": 404,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n \"code\": 1519430,\n \"message\": \"enim\",\n \"details\": \"do\"\n}"
						},
						{
							"name": "Server error",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"description": "Added as a part of security scheme: oauth2",
										"key": "Authorization",
										"value": "<token>"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/sql/:owner/:id?includeTableSchema=false&query=adipisicing elit ullamco&dialect=DW_SQL&queryruntoken=adipisicing elit ullamco",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"sql",
										":owner",
										":id"
									],
									"query": [
										{
											"key": "includeTableSchema",
											"value": "false"
										},
										{
											"key": "query",
											"value": "adipisicing elit ullamco"
										},
										{
											"key": "dialect",
											"value": "DW_SQL"
										},
										{
											"key": "queryruntoken",
											"value": "adipisicing elit ullamco"
										}
									],
									"variable": [
										{
											"key": "owner"
										},
										{
											"key": "id"
										}
									]
								}
							},
							"status": "Internal Server Error",
							"code": 500,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n \"code\": 1519430,\n \"message\": \"enim\",\n \"details\": \"do\"\n}"
						}
					]
				},
				{
					"name": "SQL query",
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{readWrite}}",
									"type": "string"
								}
							]
						},
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"query\": \"select last_name from 50_rows\",\n    \"includeTableSchema\": false\n}"
						},
						"url": {
							"raw": "{{baseUrl}}/sql/:owner/:id?dialect=DW_SQL",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"sql",
								":owner",
								":id"
							],
							"query": [
								{
									"key": "dialect",
									"value": "DW_SQL"
								}
							],
							"variable": [
								{
									"key": "owner",
									"value": "{{owner}}",
									"description": "(Required) "
								},
								{
									"key": "id",
									"value": "{{datasetid}}",
									"description": "(Required) "
								}
							]
						},
						"description": "This endpoint executes SQL queries against a dataset.\nNew to SQL? Check out data.world's [SQL manual](https://docs.data.world/tutorials/dwsql/) ."
					},
					"response": [
						{
							"name": "The request has succeeded.",
							"originalRequest": {
								"method": "POST",
								"header": [
									{
										"description": "Added as a part of security scheme: oauth2",
										"key": "Authorization",
										"value": "<token>"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/sql/:owner/:id?dialect=DW_SQL",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"sql",
										":owner",
										":id"
									],
									"query": [
										{
											"key": "dialect",
											"value": "DW_SQL"
										}
									],
									"variable": [
										{
											"key": "owner"
										},
										{
											"key": "id"
										}
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "text",
							"header": [
								{
									"key": "Content-Type",
									"value": "text/plain"
								}
							],
							"cookie": [],
							"body": ""
						},
						{
							"name": "Bad request",
							"originalRequest": {
								"method": "POST",
								"header": [
									{
										"description": "Added as a part of security scheme: oauth2",
										"key": "Authorization",
										"value": "<token>"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/sql/:owner/:id?dialect=DW_SQL",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"sql",
										":owner",
										":id"
									],
									"query": [
										{
											"key": "dialect",
											"value": "DW_SQL"
										}
									],
									"variable": [
										{
											"key": "owner"
										},
										{
											"key": "id"
										}
									]
								}
							},
							"status": "Bad Request",
							"code": 400,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n \"code\": 1519430,\n \"message\": \"enim\",\n \"details\": \"do\"\n}"
						},
						{
							"name": "Unauthorized",
							"originalRequest": {
								"method": "POST",
								"header": [
									{
										"description": "Added as a part of security scheme: oauth2",
										"key": "Authorization",
										"value": "<token>"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/sql/:owner/:id?dialect=DW_SQL",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"sql",
										":owner",
										":id"
									],
									"query": [
										{
											"key": "dialect",
											"value": "DW_SQL"
										}
									],
									"variable": [
										{
											"key": "owner"
										},
										{
											"key": "id"
										}
									]
								}
							},
							"status": "Unauthorized",
							"code": 401,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n \"code\": 1519430,\n \"message\": \"enim\",\n \"details\": \"do\"\n}"
						},
						{
							"name": "Forbidden",
							"originalRequest": {
								"method": "POST",
								"header": [
									{
										"description": "Added as a part of security scheme: oauth2",
										"key": "Authorization",
										"value": "<token>"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/sql/:owner/:id?dialect=DW_SQL",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"sql",
										":owner",
										":id"
									],
									"query": [
										{
											"key": "dialect",
											"value": "DW_SQL"
										}
									],
									"variable": [
										{
											"key": "owner"
										},
										{
											"key": "id"
										}
									]
								}
							},
							"status": "Forbidden",
							"code": 403,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n \"code\": 1519430,\n \"message\": \"enim\",\n \"details\": \"do\"\n}"
						},
						{
							"name": "Not found",
							"originalRequest": {
								"method": "POST",
								"header": [
									{
										"description": "Added as a part of security scheme: oauth2",
										"key": "Authorization",
										"value": "<token>"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/sql/:owner/:id?dialect=DW_SQL",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"sql",
										":owner",
										":id"
									],
									"query": [
										{
											"key": "dialect",
											"value": "DW_SQL"
										}
									],
									"variable": [
										{
											"key": "owner"
										},
										{
											"key": "id"
										}
									]
								}
							},
							"status": "Not Found",
							"code": 404,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n \"code\": 1519430,\n \"message\": \"enim\",\n \"details\": \"do\"\n}"
						},
						{
							"name": "Bad request",
							"originalRequest": {
								"method": "POST",
								"header": [
									{
										"description": "Added as a part of security scheme: oauth2",
										"key": "Authorization",
										"value": "<token>"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/sql/:owner/:id?dialect=DW_SQL",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"sql",
										":owner",
										":id"
									],
									"query": [
										{
											"key": "dialect",
											"value": "DW_SQL"
										}
									],
									"variable": [
										{
											"key": "owner"
										},
										{
											"key": "id"
										}
									]
								}
							},
							"status": "Unprocessable Entity (WebDAV) (RFC 4918)",
							"code": 422,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n \"code\": 1519430,\n \"message\": \"enim\",\n \"details\": \"do\"\n}"
						},
						{
							"name": "Server error",
							"originalRequest": {
								"method": "POST",
								"header": [
									{
										"description": "Added as a part of security scheme: oauth2",
										"key": "Authorization",
										"value": "<token>"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/sql/:owner/:id?dialect=DW_SQL",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"sql",
										":owner",
										":id"
									],
									"query": [
										{
											"key": "dialect",
											"value": "DW_SQL"
										}
									],
									"variable": [
										{
											"key": "owner"
										},
										{
											"key": "id"
										}
									]
								}
							},
							"status": "Internal Server Error",
							"code": 500,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n \"code\": 1519430,\n \"message\": \"enim\",\n \"details\": \"do\"\n}"
						}
					]
				},
				{
					"name": "Describe a SQL query",
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{readWrite}}",
									"type": "string"
								}
							]
						},
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"query\": \"select last_name from 50_rows\"\n}"
						},
						"url": {
							"raw": "{{baseUrl}}/sql/:owner/:id/describe?dialect=DW_SQL",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"sql",
								":owner",
								":id",
								"describe"
							],
							"query": [
								{
									"key": "dialect",
									"value": "DW_SQL"
								}
							],
							"variable": [
								{
									"key": "owner",
									"value": "{{owner}}",
									"description": "(Required) "
								},
								{
									"key": "id",
									"value": "{{datasetid}}",
									"description": "(Required) "
								}
							]
						},
						"description": "This endpoint describes what columns will be included if the given SQL query is performed against the specified dataset.\nNew to SQL? Check out data.world's [SQL manual](https://docs.data.world/tutorials/dwsql/) ."
					},
					"response": [
						{
							"name": "The request has succeeded.",
							"originalRequest": {
								"method": "POST",
								"header": [
									{
										"description": "Added as a part of security scheme: oauth2",
										"key": "Authorization",
										"value": "<token>"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/sql/:owner/:id/describe?dialect=DW_SQL",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"sql",
										":owner",
										":id",
										"describe"
									],
									"query": [
										{
											"key": "dialect",
											"value": "DW_SQL"
										}
									],
									"variable": [
										{
											"key": "owner"
										},
										{
											"key": "id"
										}
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "text",
							"header": [
								{
									"key": "Content-Type",
									"value": "text/plain"
								}
							],
							"cookie": [],
							"body": ""
						},
						{
							"name": "Bad request",
							"originalRequest": {
								"method": "POST",
								"header": [
									{
										"description": "Added as a part of security scheme: oauth2",
										"key": "Authorization",
										"value": "<token>"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/sql/:owner/:id/describe?dialect=DW_SQL",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"sql",
										":owner",
										":id",
										"describe"
									],
									"query": [
										{
											"key": "dialect",
											"value": "DW_SQL"
										}
									],
									"variable": [
										{
											"key": "owner"
										},
										{
											"key": "id"
										}
									]
								}
							},
							"status": "Bad Request",
							"code": 400,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n \"code\": 1519430,\n \"message\": \"enim\",\n \"details\": \"do\"\n}"
						},
						{
							"name": "Unauthorized",
							"originalRequest": {
								"method": "POST",
								"header": [
									{
										"description": "Added as a part of security scheme: oauth2",
										"key": "Authorization",
										"value": "<token>"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/sql/:owner/:id/describe?dialect=DW_SQL",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"sql",
										":owner",
										":id",
										"describe"
									],
									"query": [
										{
											"key": "dialect",
											"value": "DW_SQL"
										}
									],
									"variable": [
										{
											"key": "owner"
										},
										{
											"key": "id"
										}
									]
								}
							},
							"status": "Unauthorized",
							"code": 401,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n \"code\": 1519430,\n \"message\": \"enim\",\n \"details\": \"do\"\n}"
						},
						{
							"name": "Forbidden",
							"originalRequest": {
								"method": "POST",
								"header": [
									{
										"description": "Added as a part of security scheme: oauth2",
										"key": "Authorization",
										"value": "<token>"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/sql/:owner/:id/describe?dialect=DW_SQL",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"sql",
										":owner",
										":id",
										"describe"
									],
									"query": [
										{
											"key": "dialect",
											"value": "DW_SQL"
										}
									],
									"variable": [
										{
											"key": "owner"
										},
										{
											"key": "id"
										}
									]
								}
							},
							"status": "Forbidden",
							"code": 403,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n \"code\": 1519430,\n \"message\": \"enim\",\n \"details\": \"do\"\n}"
						},
						{
							"name": "Not found",
							"originalRequest": {
								"method": "POST",
								"header": [
									{
										"description": "Added as a part of security scheme: oauth2",
										"key": "Authorization",
										"value": "<token>"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/sql/:owner/:id/describe?dialect=DW_SQL",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"sql",
										":owner",
										":id",
										"describe"
									],
									"query": [
										{
											"key": "dialect",
											"value": "DW_SQL"
										}
									],
									"variable": [
										{
											"key": "owner"
										},
										{
											"key": "id"
										}
									]
								}
							},
							"status": "Not Found",
							"code": 404,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n \"code\": 1519430,\n \"message\": \"enim\",\n \"details\": \"do\"\n}"
						},
						{
							"name": "Server error",
							"originalRequest": {
								"method": "POST",
								"header": [
									{
										"description": "Added as a part of security scheme: oauth2",
										"key": "Authorization",
										"value": "<token>"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/sql/:owner/:id/describe?dialect=DW_SQL",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"sql",
										":owner",
										":id",
										"describe"
									],
									"query": [
										{
											"key": "dialect",
											"value": "DW_SQL"
										}
									],
									"variable": [
										{
											"key": "owner"
										},
										{
											"key": "id"
										}
									]
								}
							},
							"status": "Internal Server Error",
							"code": 500,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n \"code\": 1519430,\n \"message\": \"enim\",\n \"details\": \"do\"\n}"
						}
					]
				}
			]
		},
		{
			"name": "streams/{owner}/{id}/{stream Id}",
			"item": [
				{
					"name": "schema",
					"item": [
						{
							"name": "Get the configured record schema for a stream.",
							"request": {
								"auth": {
									"type": "oauth2"
								},
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{baseUrl}}/streams/:owner/:id/:streamId/schema",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"streams",
										":owner",
										":id",
										":streamId",
										"schema"
									],
									"variable": [
										{
											"key": "owner",
											"value": "adipisicing elit ullamco",
											"description": "(Required) "
										},
										{
											"key": "id",
											"value": "adipisicing elit ullamco",
											"description": "(Required) "
										},
										{
											"key": "streamId",
											"value": "adipisicing elit ullamco",
											"description": "(Required) "
										}
									]
								}
							},
							"response": [
								{
									"name": "Successfully retrieved stream schema.",
									"originalRequest": {
										"method": "GET",
										"header": [
											{
												"description": "Added as a part of security scheme: oauth2",
												"key": "Authorization",
												"value": "<token>"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/streams/:owner/:id/:streamId/schema",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"streams",
												":owner",
												":id",
												":streamId",
												"schema"
											],
											"variable": [
												{
													"key": "owner"
												},
												{
													"key": "id"
												},
												{
													"key": "streamId"
												}
											]
										}
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n \"sequenceField\": \"ut cillum\",\n \"primaryKeyFields\": [\n  \"in et sed dolor\"\n ]\n}"
								},
								{
									"name": "Bad request",
									"originalRequest": {
										"method": "GET",
										"header": [
											{
												"description": "Added as a part of security scheme: oauth2",
												"key": "Authorization",
												"value": "<token>"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/streams/:owner/:id/:streamId/schema",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"streams",
												":owner",
												":id",
												":streamId",
												"schema"
											],
											"variable": [
												{
													"key": "owner"
												},
												{
													"key": "id"
												},
												{
													"key": "streamId"
												}
											]
										}
									},
									"status": "Bad Request",
									"code": 400,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n \"code\": 1519430,\n \"message\": \"enim\",\n \"details\": \"do\"\n}"
								},
								{
									"name": "Unauthorized",
									"originalRequest": {
										"method": "GET",
										"header": [
											{
												"description": "Added as a part of security scheme: oauth2",
												"key": "Authorization",
												"value": "<token>"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/streams/:owner/:id/:streamId/schema",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"streams",
												":owner",
												":id",
												":streamId",
												"schema"
											],
											"variable": [
												{
													"key": "owner"
												},
												{
													"key": "id"
												},
												{
													"key": "streamId"
												}
											]
										}
									},
									"status": "Unauthorized",
									"code": 401,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n \"code\": 1519430,\n \"message\": \"enim\",\n \"details\": \"do\"\n}"
								},
								{
									"name": "Forbidden",
									"originalRequest": {
										"method": "GET",
										"header": [
											{
												"description": "Added as a part of security scheme: oauth2",
												"key": "Authorization",
												"value": "<token>"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/streams/:owner/:id/:streamId/schema",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"streams",
												":owner",
												":id",
												":streamId",
												"schema"
											],
											"variable": [
												{
													"key": "owner"
												},
												{
													"key": "id"
												},
												{
													"key": "streamId"
												}
											]
										}
									},
									"status": "Forbidden",
									"code": 403,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n \"code\": 1519430,\n \"message\": \"enim\",\n \"details\": \"do\"\n}"
								},
								{
									"name": "Not found",
									"originalRequest": {
										"method": "GET",
										"header": [
											{
												"description": "Added as a part of security scheme: oauth2",
												"key": "Authorization",
												"value": "<token>"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/streams/:owner/:id/:streamId/schema",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"streams",
												":owner",
												":id",
												":streamId",
												"schema"
											],
											"variable": [
												{
													"key": "owner"
												},
												{
													"key": "id"
												},
												{
													"key": "streamId"
												}
											]
										}
									},
									"status": "Not Found",
									"code": 404,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n \"code\": 1519430,\n \"message\": \"enim\",\n \"details\": \"do\"\n}"
								},
								{
									"name": "Server error",
									"originalRequest": {
										"method": "GET",
										"header": [
											{
												"description": "Added as a part of security scheme: oauth2",
												"key": "Authorization",
												"value": "<token>"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/streams/:owner/:id/:streamId/schema",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"streams",
												":owner",
												":id",
												":streamId",
												"schema"
											],
											"variable": [
												{
													"key": "owner"
												},
												{
													"key": "id"
												},
												{
													"key": "streamId"
												}
											]
										}
									},
									"status": "Internal Server Error",
									"code": 500,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n \"code\": 1519430,\n \"message\": \"enim\",\n \"details\": \"do\"\n}"
								}
							]
						},
						{
							"name": "Update the record schema of a stream.",
							"request": {
								"auth": {
									"type": "oauth2"
								},
								"method": "PATCH",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"updateMethod\": \"TRUNCATE\",\n    \"primaryKeyFields\": [\n        \"ut id\",\n        \"commodo in dolor sed\"\n    ],\n    \"sequenceField\": \"sunt nulla\"\n}"
								},
								"url": {
									"raw": "{{baseUrl}}/streams/:owner/:id/:streamId/schema",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"streams",
										":owner",
										":id",
										":streamId",
										"schema"
									],
									"variable": [
										{
											"key": "owner",
											"value": "adipisicing elit ullamco",
											"description": "(Required) "
										},
										{
											"key": "id",
											"value": "adipisicing elit ullamco",
											"description": "(Required) "
										},
										{
											"key": "streamId",
											"value": "adipisicing elit ullamco",
											"description": "(Required) "
										}
									]
								}
							},
							"response": [
								{
									"name": "Stream updated successfully.",
									"originalRequest": {
										"method": "PATCH",
										"header": [
											{
												"description": "Added as a part of security scheme: oauth2",
												"key": "Authorization",
												"value": "<token>"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n    \"updateMethod\": \"TRUNCATE\",\n    \"primaryKeyFields\": [\n        \"eu ut e\",\n        \"officia\"\n    ],\n    \"sequenceField\": \"id irure dolore laboris ipsum\"\n}"
										},
										"url": {
											"raw": "{{baseUrl}}/streams/:owner/:id/:streamId/schema",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"streams",
												":owner",
												":id",
												":streamId",
												"schema"
											],
											"variable": [
												{
													"key": "owner"
												},
												{
													"key": "id"
												},
												{
													"key": "streamId"
												}
											]
										}
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n \"message\": \"voluptate culpa nulla esse\"\n}"
								},
								{
									"name": "Bad request",
									"originalRequest": {
										"method": "PATCH",
										"header": [
											{
												"description": "Added as a part of security scheme: oauth2",
												"key": "Authorization",
												"value": "<token>"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n    \"updateMethod\": \"TRUNCATE\",\n    \"primaryKeyFields\": [\n        \"eu ut e\",\n        \"officia\"\n    ],\n    \"sequenceField\": \"id irure dolore laboris ipsum\"\n}"
										},
										"url": {
											"raw": "{{baseUrl}}/streams/:owner/:id/:streamId/schema",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"streams",
												":owner",
												":id",
												":streamId",
												"schema"
											],
											"variable": [
												{
													"key": "owner"
												},
												{
													"key": "id"
												},
												{
													"key": "streamId"
												}
											]
										}
									},
									"status": "Bad Request",
									"code": 400,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n \"code\": 1519430,\n \"message\": \"enim\",\n \"details\": \"do\"\n}"
								},
								{
									"name": "Unauthorized",
									"originalRequest": {
										"method": "PATCH",
										"header": [
											{
												"description": "Added as a part of security scheme: oauth2",
												"key": "Authorization",
												"value": "<token>"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n    \"updateMethod\": \"TRUNCATE\",\n    \"primaryKeyFields\": [\n        \"eu ut e\",\n        \"officia\"\n    ],\n    \"sequenceField\": \"id irure dolore laboris ipsum\"\n}"
										},
										"url": {
											"raw": "{{baseUrl}}/streams/:owner/:id/:streamId/schema",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"streams",
												":owner",
												":id",
												":streamId",
												"schema"
											],
											"variable": [
												{
													"key": "owner"
												},
												{
													"key": "id"
												},
												{
													"key": "streamId"
												}
											]
										}
									},
									"status": "Unauthorized",
									"code": 401,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n \"code\": 1519430,\n \"message\": \"enim\",\n \"details\": \"do\"\n}"
								},
								{
									"name": "Forbidden",
									"originalRequest": {
										"method": "PATCH",
										"header": [
											{
												"description": "Added as a part of security scheme: oauth2",
												"key": "Authorization",
												"value": "<token>"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n    \"updateMethod\": \"TRUNCATE\",\n    \"primaryKeyFields\": [\n        \"eu ut e\",\n        \"officia\"\n    ],\n    \"sequenceField\": \"id irure dolore laboris ipsum\"\n}"
										},
										"url": {
											"raw": "{{baseUrl}}/streams/:owner/:id/:streamId/schema",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"streams",
												":owner",
												":id",
												":streamId",
												"schema"
											],
											"variable": [
												{
													"key": "owner"
												},
												{
													"key": "id"
												},
												{
													"key": "streamId"
												}
											]
										}
									},
									"status": "Forbidden",
									"code": 403,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n \"code\": 1519430,\n \"message\": \"enim\",\n \"details\": \"do\"\n}"
								},
								{
									"name": "Not found",
									"originalRequest": {
										"method": "PATCH",
										"header": [
											{
												"description": "Added as a part of security scheme: oauth2",
												"key": "Authorization",
												"value": "<token>"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n    \"updateMethod\": \"TRUNCATE\",\n    \"primaryKeyFields\": [\n        \"eu ut e\",\n        \"officia\"\n    ],\n    \"sequenceField\": \"id irure dolore laboris ipsum\"\n}"
										},
										"url": {
											"raw": "{{baseUrl}}/streams/:owner/:id/:streamId/schema",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"streams",
												":owner",
												":id",
												":streamId",
												"schema"
											],
											"variable": [
												{
													"key": "owner"
												},
												{
													"key": "id"
												},
												{
													"key": "streamId"
												}
											]
										}
									},
									"status": "Not Found",
									"code": 404,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n \"code\": 1519430,\n \"message\": \"enim\",\n \"details\": \"do\"\n}"
								},
								{
									"name": "Bad request",
									"originalRequest": {
										"method": "PATCH",
										"header": [
											{
												"description": "Added as a part of security scheme: oauth2",
												"key": "Authorization",
												"value": "<token>"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n    \"updateMethod\": \"TRUNCATE\",\n    \"primaryKeyFields\": [\n        \"eu ut e\",\n        \"officia\"\n    ],\n    \"sequenceField\": \"id irure dolore laboris ipsum\"\n}"
										},
										"url": {
											"raw": "{{baseUrl}}/streams/:owner/:id/:streamId/schema",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"streams",
												":owner",
												":id",
												":streamId",
												"schema"
											],
											"variable": [
												{
													"key": "owner"
												},
												{
													"key": "id"
												},
												{
													"key": "streamId"
												}
											]
										}
									},
									"status": "Unprocessable Entity (WebDAV) (RFC 4918)",
									"code": 422,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n \"code\": 1519430,\n \"message\": \"enim\",\n \"details\": \"do\"\n}"
								},
								{
									"name": "Server error",
									"originalRequest": {
										"method": "PATCH",
										"header": [
											{
												"description": "Added as a part of security scheme: oauth2",
												"key": "Authorization",
												"value": "<token>"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n    \"updateMethod\": \"TRUNCATE\",\n    \"primaryKeyFields\": [\n        \"eu ut e\",\n        \"officia\"\n    ],\n    \"sequenceField\": \"id irure dolore laboris ipsum\"\n}"
										},
										"url": {
											"raw": "{{baseUrl}}/streams/:owner/:id/:streamId/schema",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"streams",
												":owner",
												":id",
												":streamId",
												"schema"
											],
											"variable": [
												{
													"key": "owner"
												},
												{
													"key": "id"
												},
												{
													"key": "streamId"
												}
											]
										}
									},
									"status": "Internal Server Error",
									"code": 500,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n \"code\": 1519430,\n \"message\": \"enim\",\n \"details\": \"do\"\n}"
								}
							]
						}
					]
				},
				{
					"name": "Append record(s) to a stream.",
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{readWrite}}",
									"type": "string"
								}
							]
						},
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{}"
						},
						"url": {
							"raw": "{{baseUrl}}/streams/:owner/:id/:streamId",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"streams",
								":owner",
								":id",
								":streamId"
							],
							"variable": [
								{
									"key": "owner",
									"value": "{{owner}}",
									"description": "(Required) "
								},
								{
									"key": "id",
									"value": "{{datasetid}}",
									"description": "(Required) "
								},
								{
									"key": "streamId",
									"value": "adipisicing elit ullamco",
									"description": "(Required) "
								}
							]
						}
					},
					"response": [
						{
							"name": "Record(s) accepted.",
							"originalRequest": {
								"method": "POST",
								"header": [
									{
										"description": "Added as a part of security scheme: oauth2",
										"key": "Authorization",
										"value": "<token>"
									},
									{
										"key": "Content-Type",
										"value": ""
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{}"
								},
								"url": {
									"raw": "{{baseUrl}}/streams/:owner/:id/:streamId",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"streams",
										":owner",
										":id",
										":streamId"
									],
									"variable": [
										{
											"key": "owner"
										},
										{
											"key": "id"
										},
										{
											"key": "streamId"
										}
									]
								}
							},
							"status": "Accepted",
							"code": 202,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n \"message\": \"voluptate culpa nulla esse\"\n}"
						},
						{
							"name": "Bad request",
							"originalRequest": {
								"method": "POST",
								"header": [
									{
										"description": "Added as a part of security scheme: oauth2",
										"key": "Authorization",
										"value": "<token>"
									},
									{
										"key": "Content-Type",
										"value": ""
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{}"
								},
								"url": {
									"raw": "{{baseUrl}}/streams/:owner/:id/:streamId",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"streams",
										":owner",
										":id",
										":streamId"
									],
									"variable": [
										{
											"key": "owner"
										},
										{
											"key": "id"
										},
										{
											"key": "streamId"
										}
									]
								}
							},
							"status": "Bad Request",
							"code": 400,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n \"code\": 1519430,\n \"message\": \"enim\",\n \"details\": \"do\"\n}"
						},
						{
							"name": "Unauthorized",
							"originalRequest": {
								"method": "POST",
								"header": [
									{
										"description": "Added as a part of security scheme: oauth2",
										"key": "Authorization",
										"value": "<token>"
									},
									{
										"key": "Content-Type",
										"value": ""
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{}"
								},
								"url": {
									"raw": "{{baseUrl}}/streams/:owner/:id/:streamId",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"streams",
										":owner",
										":id",
										":streamId"
									],
									"variable": [
										{
											"key": "owner"
										},
										{
											"key": "id"
										},
										{
											"key": "streamId"
										}
									]
								}
							},
							"status": "Unauthorized",
							"code": 401,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n \"code\": 1519430,\n \"message\": \"enim\",\n \"details\": \"do\"\n}"
						},
						{
							"name": "Forbidden",
							"originalRequest": {
								"method": "POST",
								"header": [
									{
										"description": "Added as a part of security scheme: oauth2",
										"key": "Authorization",
										"value": "<token>"
									},
									{
										"key": "Content-Type",
										"value": ""
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{}"
								},
								"url": {
									"raw": "{{baseUrl}}/streams/:owner/:id/:streamId",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"streams",
										":owner",
										":id",
										":streamId"
									],
									"variable": [
										{
											"key": "owner"
										},
										{
											"key": "id"
										},
										{
											"key": "streamId"
										}
									]
								}
							},
							"status": "Forbidden",
							"code": 403,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n \"code\": 1519430,\n \"message\": \"enim\",\n \"details\": \"do\"\n}"
						},
						{
							"name": "Not found",
							"originalRequest": {
								"method": "POST",
								"header": [
									{
										"description": "Added as a part of security scheme: oauth2",
										"key": "Authorization",
										"value": "<token>"
									},
									{
										"key": "Content-Type",
										"value": ""
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{}"
								},
								"url": {
									"raw": "{{baseUrl}}/streams/:owner/:id/:streamId",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"streams",
										":owner",
										":id",
										":streamId"
									],
									"variable": [
										{
											"key": "owner"
										},
										{
											"key": "id"
										},
										{
											"key": "streamId"
										}
									]
								}
							},
							"status": "Not Found",
							"code": 404,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n \"code\": 1519430,\n \"message\": \"enim\",\n \"details\": \"do\"\n}"
						},
						{
							"name": "Bad request",
							"originalRequest": {
								"method": "POST",
								"header": [
									{
										"description": "Added as a part of security scheme: oauth2",
										"key": "Authorization",
										"value": "<token>"
									},
									{
										"key": "Content-Type",
										"value": ""
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{}"
								},
								"url": {
									"raw": "{{baseUrl}}/streams/:owner/:id/:streamId",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"streams",
										":owner",
										":id",
										":streamId"
									],
									"variable": [
										{
											"key": "owner"
										},
										{
											"key": "id"
										},
										{
											"key": "streamId"
										}
									]
								}
							},
							"status": "Unprocessable Entity (WebDAV) (RFC 4918)",
							"code": 422,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n \"code\": 1519430,\n \"message\": \"enim\",\n \"details\": \"do\"\n}"
						},
						{
							"name": "Server error",
							"originalRequest": {
								"method": "POST",
								"header": [
									{
										"description": "Added as a part of security scheme: oauth2",
										"key": "Authorization",
										"value": "<token>"
									},
									{
										"key": "Content-Type",
										"value": ""
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{}"
								},
								"url": {
									"raw": "{{baseUrl}}/streams/:owner/:id/:streamId",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"streams",
										":owner",
										":id",
										":streamId"
									],
									"variable": [
										{
											"key": "owner"
										},
										{
											"key": "id"
										},
										{
											"key": "streamId"
										}
									]
								}
							},
							"status": "Internal Server Error",
							"code": 500,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n \"code\": 1519430,\n \"message\": \"enim\",\n \"details\": \"do\"\n}"
						}
					]
				},
				{
					"name": "Delete all records uploaded to the stream.",
					"request": {
						"auth": {
							"type": "oauth2"
						},
						"method": "DELETE",
						"header": [],
						"url": {
							"raw": "{{baseUrl}}/streams/:owner/:id/:streamId/records",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"streams",
								":owner",
								":id",
								":streamId",
								"records"
							],
							"variable": [
								{
									"key": "owner",
									"value": "adipisicing elit ullamco",
									"description": "(Required) "
								},
								{
									"key": "id",
									"value": "adipisicing elit ullamco",
									"description": "(Required) "
								},
								{
									"key": "streamId",
									"value": "adipisicing elit ullamco",
									"description": "(Required) "
								}
							]
						}
					},
					"response": [
						{
							"name": "Stream updated successfully.",
							"originalRequest": {
								"method": "DELETE",
								"header": [
									{
										"description": "Added as a part of security scheme: oauth2",
										"key": "Authorization",
										"value": "<token>"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/streams/:owner/:id/:streamId/records",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"streams",
										":owner",
										":id",
										":streamId",
										"records"
									],
									"variable": [
										{
											"key": "owner"
										},
										{
											"key": "id"
										},
										{
											"key": "streamId"
										}
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n \"message\": \"voluptate culpa nulla esse\"\n}"
						},
						{
							"name": "Bad request",
							"originalRequest": {
								"method": "DELETE",
								"header": [
									{
										"description": "Added as a part of security scheme: oauth2",
										"key": "Authorization",
										"value": "<token>"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/streams/:owner/:id/:streamId/records",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"streams",
										":owner",
										":id",
										":streamId",
										"records"
									],
									"variable": [
										{
											"key": "owner"
										},
										{
											"key": "id"
										},
										{
											"key": "streamId"
										}
									]
								}
							},
							"status": "Bad Request",
							"code": 400,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n \"code\": 1519430,\n \"message\": \"enim\",\n \"details\": \"do\"\n}"
						},
						{
							"name": "Unauthorized",
							"originalRequest": {
								"method": "DELETE",
								"header": [
									{
										"description": "Added as a part of security scheme: oauth2",
										"key": "Authorization",
										"value": "<token>"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/streams/:owner/:id/:streamId/records",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"streams",
										":owner",
										":id",
										":streamId",
										"records"
									],
									"variable": [
										{
											"key": "owner"
										},
										{
											"key": "id"
										},
										{
											"key": "streamId"
										}
									]
								}
							},
							"status": "Unauthorized",
							"code": 401,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n \"code\": 1519430,\n \"message\": \"enim\",\n \"details\": \"do\"\n}"
						},
						{
							"name": "Forbidden",
							"originalRequest": {
								"method": "DELETE",
								"header": [
									{
										"description": "Added as a part of security scheme: oauth2",
										"key": "Authorization",
										"value": "<token>"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/streams/:owner/:id/:streamId/records",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"streams",
										":owner",
										":id",
										":streamId",
										"records"
									],
									"variable": [
										{
											"key": "owner"
										},
										{
											"key": "id"
										},
										{
											"key": "streamId"
										}
									]
								}
							},
							"status": "Forbidden",
							"code": 403,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n \"code\": 1519430,\n \"message\": \"enim\",\n \"details\": \"do\"\n}"
						},
						{
							"name": "Not found",
							"originalRequest": {
								"method": "DELETE",
								"header": [
									{
										"description": "Added as a part of security scheme: oauth2",
										"key": "Authorization",
										"value": "<token>"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/streams/:owner/:id/:streamId/records",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"streams",
										":owner",
										":id",
										":streamId",
										"records"
									],
									"variable": [
										{
											"key": "owner"
										},
										{
											"key": "id"
										},
										{
											"key": "streamId"
										}
									]
								}
							},
							"status": "Not Found",
							"code": 404,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n \"code\": 1519430,\n \"message\": \"enim\",\n \"details\": \"do\"\n}"
						},
						{
							"name": "Server error",
							"originalRequest": {
								"method": "DELETE",
								"header": [
									{
										"description": "Added as a part of security scheme: oauth2",
										"key": "Authorization",
										"value": "<token>"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/streams/:owner/:id/:streamId/records",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"streams",
										":owner",
										":id",
										":streamId",
										"records"
									],
									"variable": [
										{
											"key": "owner"
										},
										{
											"key": "id"
										},
										{
											"key": "streamId"
										}
									]
								}
							},
							"status": "Internal Server Error",
							"code": 500,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n \"code\": 1519430,\n \"message\": \"enim\",\n \"details\": \"do\"\n}"
						}
					]
				}
			]
		},
		{
			"name": "uploads/{owner}/{id}/files",
			"item": [
				{
					"name": "Upload one or more files to a dataset.",
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{readWrite}}",
									"type": "string"
								}
							]
						},
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "multipart/form-data"
							}
						],
						"body": {
							"mode": "formdata",
							"formdata": [
								{
									"key": "file",
									"value": "50 rows",
									"description": "(Required) Multipart-encoded file contents",
									"type": "text"
								}
							]
						},
						"url": {
							"raw": "{{baseUrl}}/uploads/:owner/:id/files",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"uploads",
								":owner",
								":id",
								"files"
							],
							"query": [
								{
									"key": "expandArchives",
									"value": "false",
									"disabled": true
								}
							],
							"variable": [
								{
									"key": "owner",
									"value": "{{org}}",
									"description": "(Required) "
								},
								{
									"key": "id",
									"value": "{{datasetid}}",
									"description": "(Required) "
								}
							]
						},
						"description": "Swagger clients will limit this method of upload to one file at a time. Other HTTP clients capable of making multipart/form-data requests can be used to upload multiple files in a single request."
					},
					"response": [
						{
							"name": "File(s) uploaded successfully.",
							"originalRequest": {
								"method": "POST",
								"header": [
									{
										"description": "Added as a part of security scheme: oauth2",
										"key": "Authorization",
										"value": "<token>"
									}
								],
								"body": {
									"mode": "formdata",
									"formdata": [
										{
											"key": "file",
											"value": "laborum adipisicing non dolore",
											"description": "(Required) Multipart-encoded file contents",
											"type": "text"
										}
									]
								},
								"url": {
									"raw": "{{baseUrl}}/uploads/:owner/:id/files?expandArchives=false",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"uploads",
										":owner",
										":id",
										"files"
									],
									"query": [
										{
											"key": "expandArchives",
											"value": "false"
										}
									],
									"variable": [
										{
											"key": "owner"
										},
										{
											"key": "id"
										}
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n \"message\": \"voluptate culpa nulla esse\"\n}"
						},
						{
							"name": "Bad request",
							"originalRequest": {
								"method": "POST",
								"header": [
									{
										"description": "Added as a part of security scheme: oauth2",
										"key": "Authorization",
										"value": "<token>"
									}
								],
								"body": {
									"mode": "formdata",
									"formdata": [
										{
											"key": "file",
											"value": "laborum adipisicing non dolore",
											"description": "(Required) Multipart-encoded file contents",
											"type": "text"
										}
									]
								},
								"url": {
									"raw": "{{baseUrl}}/uploads/:owner/:id/files?expandArchives=false",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"uploads",
										":owner",
										":id",
										"files"
									],
									"query": [
										{
											"key": "expandArchives",
											"value": "false"
										}
									],
									"variable": [
										{
											"key": "owner"
										},
										{
											"key": "id"
										}
									]
								}
							},
							"status": "Bad Request",
							"code": 400,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n \"code\": 1519430,\n \"message\": \"enim\",\n \"details\": \"do\"\n}"
						},
						{
							"name": "Unauthorized",
							"originalRequest": {
								"method": "POST",
								"header": [
									{
										"description": "Added as a part of security scheme: oauth2",
										"key": "Authorization",
										"value": "<token>"
									}
								],
								"body": {
									"mode": "formdata",
									"formdata": [
										{
											"key": "file",
											"value": "laborum adipisicing non dolore",
											"description": "(Required) Multipart-encoded file contents",
											"type": "text"
										}
									]
								},
								"url": {
									"raw": "{{baseUrl}}/uploads/:owner/:id/files?expandArchives=false",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"uploads",
										":owner",
										":id",
										"files"
									],
									"query": [
										{
											"key": "expandArchives",
											"value": "false"
										}
									],
									"variable": [
										{
											"key": "owner"
										},
										{
											"key": "id"
										}
									]
								}
							},
							"status": "Unauthorized",
							"code": 401,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n \"code\": 1519430,\n \"message\": \"enim\",\n \"details\": \"do\"\n}"
						},
						{
							"name": "Forbidden",
							"originalRequest": {
								"method": "POST",
								"header": [
									{
										"description": "Added as a part of security scheme: oauth2",
										"key": "Authorization",
										"value": "<token>"
									}
								],
								"body": {
									"mode": "formdata",
									"formdata": [
										{
											"key": "file",
											"value": "laborum adipisicing non dolore",
											"description": "(Required) Multipart-encoded file contents",
											"type": "text"
										}
									]
								},
								"url": {
									"raw": "{{baseUrl}}/uploads/:owner/:id/files?expandArchives=false",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"uploads",
										":owner",
										":id",
										"files"
									],
									"query": [
										{
											"key": "expandArchives",
											"value": "false"
										}
									],
									"variable": [
										{
											"key": "owner"
										},
										{
											"key": "id"
										}
									]
								}
							},
							"status": "Forbidden",
							"code": 403,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n \"code\": 1519430,\n \"message\": \"enim\",\n \"details\": \"do\"\n}"
						},
						{
							"name": "Not found",
							"originalRequest": {
								"method": "POST",
								"header": [
									{
										"description": "Added as a part of security scheme: oauth2",
										"key": "Authorization",
										"value": "<token>"
									}
								],
								"body": {
									"mode": "formdata",
									"formdata": [
										{
											"key": "file",
											"value": "laborum adipisicing non dolore",
											"description": "(Required) Multipart-encoded file contents",
											"type": "text"
										}
									]
								},
								"url": {
									"raw": "{{baseUrl}}/uploads/:owner/:id/files?expandArchives=false",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"uploads",
										":owner",
										":id",
										"files"
									],
									"query": [
										{
											"key": "expandArchives",
											"value": "false"
										}
									],
									"variable": [
										{
											"key": "owner"
										},
										{
											"key": "id"
										}
									]
								}
							},
							"status": "Not Found",
							"code": 404,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n \"code\": 1519430,\n \"message\": \"enim\",\n \"details\": \"do\"\n}"
						},
						{
							"name": "Upload too large",
							"originalRequest": {
								"method": "POST",
								"header": [
									{
										"description": "Added as a part of security scheme: oauth2",
										"key": "Authorization",
										"value": "<token>"
									}
								],
								"body": {
									"mode": "formdata",
									"formdata": [
										{
											"key": "file",
											"value": "laborum adipisicing non dolore",
											"description": "(Required) Multipart-encoded file contents",
											"type": "text"
										}
									]
								},
								"url": {
									"raw": "{{baseUrl}}/uploads/:owner/:id/files?expandArchives=false",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"uploads",
										":owner",
										":id",
										"files"
									],
									"query": [
										{
											"key": "expandArchives",
											"value": "false"
										}
									],
									"variable": [
										{
											"key": "owner"
										},
										{
											"key": "id"
										}
									]
								}
							},
							"status": "Request Entity Too Large",
							"code": 413,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n \"code\": 1519430,\n \"message\": \"enim\",\n \"details\": \"do\"\n}"
						},
						{
							"name": "Bad request",
							"originalRequest": {
								"method": "POST",
								"header": [
									{
										"description": "Added as a part of security scheme: oauth2",
										"key": "Authorization",
										"value": "<token>"
									}
								],
								"body": {
									"mode": "formdata",
									"formdata": [
										{
											"key": "file",
											"value": "laborum adipisicing non dolore",
											"description": "(Required) Multipart-encoded file contents",
											"type": "text"
										}
									]
								},
								"url": {
									"raw": "{{baseUrl}}/uploads/:owner/:id/files?expandArchives=false",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"uploads",
										":owner",
										":id",
										"files"
									],
									"query": [
										{
											"key": "expandArchives",
											"value": "false"
										}
									],
									"variable": [
										{
											"key": "owner"
										},
										{
											"key": "id"
										}
									]
								}
							},
							"status": "Unprocessable Entity (WebDAV) (RFC 4918)",
							"code": 422,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n \"code\": 1519430,\n \"message\": \"enim\",\n \"details\": \"do\"\n}"
						},
						{
							"name": "Server error",
							"originalRequest": {
								"method": "POST",
								"header": [
									{
										"description": "Added as a part of security scheme: oauth2",
										"key": "Authorization",
										"value": "<token>"
									}
								],
								"body": {
									"mode": "formdata",
									"formdata": [
										{
											"key": "file",
											"value": "laborum adipisicing non dolore",
											"description": "(Required) Multipart-encoded file contents",
											"type": "text"
										}
									]
								},
								"url": {
									"raw": "{{baseUrl}}/uploads/:owner/:id/files?expandArchives=false",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"uploads",
										":owner",
										":id",
										"files"
									],
									"query": [
										{
											"key": "expandArchives",
											"value": "false"
										}
									],
									"variable": [
										{
											"key": "owner"
										},
										{
											"key": "id"
										}
									]
								}
							},
							"status": "Internal Server Error",
							"code": 500,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n \"code\": 1519430,\n \"message\": \"enim\",\n \"details\": \"do\"\n}"
						}
					]
				},
				{
					"name": "Upload a file to a dataset.",
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{readWrite}}",
									"type": "string"
								}
							]
						},
						"method": "PUT",
						"header": [],
						"url": {
							"raw": "{{baseUrl}}/uploads/:owner/:id/files/:file",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"uploads",
								":owner",
								":id",
								"files",
								":file"
							],
							"query": [
								{
									"key": "expandArchive",
									"value": "false",
									"disabled": true
								}
							],
							"variable": [
								{
									"key": "owner",
									"value": "{{owner}}",
									"description": "(Required) "
								},
								{
									"key": "id",
									"value": "{{datasetid}}",
									"description": "(Required) "
								},
								{
									"key": "file",
									"value": "{{fileName}}",
									"description": "(Required) Filename"
								}
							]
						},
						"description": "This method of upload is not supported by Swagger clients. Other HTTP clients can be used to supply the contents of the file directly in the body of the request"
					},
					"response": [
						{
							"name": "File uploaded successfully.",
							"originalRequest": {
								"method": "PUT",
								"header": [
									{
										"description": "Added as a part of security scheme: oauth2",
										"key": "Authorization",
										"value": "<token>"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/uploads/:owner/:id/files/:file?expandArchive=false",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"uploads",
										":owner",
										":id",
										"files",
										":file"
									],
									"query": [
										{
											"key": "expandArchive",
											"value": "false"
										}
									],
									"variable": [
										{
											"key": "owner"
										},
										{
											"key": "id"
										},
										{
											"key": "file"
										}
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n \"message\": \"voluptate culpa nulla esse\"\n}"
						},
						{
							"name": "Bad request",
							"originalRequest": {
								"method": "PUT",
								"header": [
									{
										"description": "Added as a part of security scheme: oauth2",
										"key": "Authorization",
										"value": "<token>"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/uploads/:owner/:id/files/:file?expandArchive=false",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"uploads",
										":owner",
										":id",
										"files",
										":file"
									],
									"query": [
										{
											"key": "expandArchive",
											"value": "false"
										}
									],
									"variable": [
										{
											"key": "owner"
										},
										{
											"key": "id"
										},
										{
											"key": "file"
										}
									]
								}
							},
							"status": "Bad Request",
							"code": 400,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n \"code\": 1519430,\n \"message\": \"enim\",\n \"details\": \"do\"\n}"
						},
						{
							"name": "Unauthorized",
							"originalRequest": {
								"method": "PUT",
								"header": [
									{
										"description": "Added as a part of security scheme: oauth2",
										"key": "Authorization",
										"value": "<token>"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/uploads/:owner/:id/files/:file?expandArchive=false",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"uploads",
										":owner",
										":id",
										"files",
										":file"
									],
									"query": [
										{
											"key": "expandArchive",
											"value": "false"
										}
									],
									"variable": [
										{
											"key": "owner"
										},
										{
											"key": "id"
										},
										{
											"key": "file"
										}
									]
								}
							},
							"status": "Unauthorized",
							"code": 401,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n \"code\": 1519430,\n \"message\": \"enim\",\n \"details\": \"do\"\n}"
						},
						{
							"name": "Forbidden",
							"originalRequest": {
								"method": "PUT",
								"header": [
									{
										"description": "Added as a part of security scheme: oauth2",
										"key": "Authorization",
										"value": "<token>"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/uploads/:owner/:id/files/:file?expandArchive=false",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"uploads",
										":owner",
										":id",
										"files",
										":file"
									],
									"query": [
										{
											"key": "expandArchive",
											"value": "false"
										}
									],
									"variable": [
										{
											"key": "owner"
										},
										{
											"key": "id"
										},
										{
											"key": "file"
										}
									]
								}
							},
							"status": "Forbidden",
							"code": 403,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n \"code\": 1519430,\n \"message\": \"enim\",\n \"details\": \"do\"\n}"
						},
						{
							"name": "Not found",
							"originalRequest": {
								"method": "PUT",
								"header": [
									{
										"description": "Added as a part of security scheme: oauth2",
										"key": "Authorization",
										"value": "<token>"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/uploads/:owner/:id/files/:file?expandArchive=false",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"uploads",
										":owner",
										":id",
										"files",
										":file"
									],
									"query": [
										{
											"key": "expandArchive",
											"value": "false"
										}
									],
									"variable": [
										{
											"key": "owner"
										},
										{
											"key": "id"
										},
										{
											"key": "file"
										}
									]
								}
							},
							"status": "Not Found",
							"code": 404,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n \"code\": 1519430,\n \"message\": \"enim\",\n \"details\": \"do\"\n}"
						},
						{
							"name": "Upload too large",
							"originalRequest": {
								"method": "PUT",
								"header": [
									{
										"description": "Added as a part of security scheme: oauth2",
										"key": "Authorization",
										"value": "<token>"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/uploads/:owner/:id/files/:file?expandArchive=false",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"uploads",
										":owner",
										":id",
										"files",
										":file"
									],
									"query": [
										{
											"key": "expandArchive",
											"value": "false"
										}
									],
									"variable": [
										{
											"key": "owner"
										},
										{
											"key": "id"
										},
										{
											"key": "file"
										}
									]
								}
							},
							"status": "Request Entity Too Large",
							"code": 413,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n \"code\": 1519430,\n \"message\": \"enim\",\n \"details\": \"do\"\n}"
						},
						{
							"name": "Bad request",
							"originalRequest": {
								"method": "PUT",
								"header": [
									{
										"description": "Added as a part of security scheme: oauth2",
										"key": "Authorization",
										"value": "<token>"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/uploads/:owner/:id/files/:file?expandArchive=false",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"uploads",
										":owner",
										":id",
										"files",
										":file"
									],
									"query": [
										{
											"key": "expandArchive",
											"value": "false"
										}
									],
									"variable": [
										{
											"key": "owner"
										},
										{
											"key": "id"
										},
										{
											"key": "file"
										}
									]
								}
							},
							"status": "Unprocessable Entity (WebDAV) (RFC 4918)",
							"code": 422,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n \"code\": 1519430,\n \"message\": \"enim\",\n \"details\": \"do\"\n}"
						},
						{
							"name": "Server error",
							"originalRequest": {
								"method": "PUT",
								"header": [
									{
										"description": "Added as a part of security scheme: oauth2",
										"key": "Authorization",
										"value": "<token>"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/uploads/:owner/:id/files/:file?expandArchive=false",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"uploads",
										":owner",
										":id",
										"files",
										":file"
									],
									"query": [
										{
											"key": "expandArchive",
											"value": "false"
										}
									],
									"variable": [
										{
											"key": "owner"
										},
										{
											"key": "id"
										},
										{
											"key": "file"
										}
									]
								}
							},
							"status": "Internal Server Error",
							"code": 500,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n \"code\": 1519430,\n \"message\": \"enim\",\n \"details\": \"do\"\n}"
						}
					]
				}
			]
		},
		{
			"name": "user",
			"item": [
				{
					"name": "datasets",
					"item": [
						{
							"name": "Fetch datasets to which the requesting user is a contributor",
							"request": {
								"auth": {
									"type": "bearer",
									"bearer": [
										{
											"key": "token",
											"value": "{{readWrite}}",
											"type": "string"
										}
									]
								},
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{baseUrl}}/user/datasets/contributing",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"user",
										"datasets",
										"contributing"
									],
									"query": [
										{
											"key": "fields",
											"value": "adipisicing elit ullamco",
											"disabled": true
										},
										{
											"key": "limit",
											"value": "adipisicing elit ullamco",
											"disabled": true
										},
										{
											"key": "next",
											"value": "adipisicing elit ullamco",
											"disabled": true
										}
									]
								}
							},
							"response": [
								{
									"name": "successful operation",
									"originalRequest": {
										"method": "GET",
										"header": [
											{
												"description": "Added as a part of security scheme: oauth2",
												"key": "Authorization",
												"value": "<token>"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/user/datasets/contributing?fields=adipisicing elit ullamco&limit=adipisicing elit ullamco&next=adipisicing elit ullamco",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"user",
												"datasets",
												"contributing"
											],
											"query": [
												{
													"key": "fields",
													"value": "adipisicing elit ullamco"
												},
												{
													"key": "limit",
													"value": "adipisicing elit ullamco"
												},
												{
													"key": "next",
													"value": "adipisicing elit ullamco"
												}
											]
										}
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n \"count\": 42361237,\n \"records\": [\n  {\n   \"accessLevel\": \"NONE\",\n   \"created\": \"in labore esse\",\n   \"id\": \"incididunt ipsum\",\n   \"isProject\": false,\n   \"owner\": \"Excepteur enim culpa\",\n   \"status\": \"INPROGRESS\",\n   \"title\": \"adipisicing ipsum\",\n   \"updated\": \"dolor cillum\",\n   \"version\": \"sit Ut consequat deserunt\",\n   \"visibility\": \"OPEN\",\n   \"description\": \"veniam voluptate enim magna\",\n   \"summary\": \"reprehenderit tempor\",\n   \"tags\": [\n    \"est do Ut enim\",\n    \"aute est sit dolor\"\n   ],\n   \"dois\": [\n    {\n     \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    {\n     \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    }\n   ],\n   \"license\": \"CC-0\",\n   \"files\": [\n    {\n     \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    {\n     \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    }\n   ],\n   \"properties\": {},\n   \"assetStatus\": {\n    \"assetStatusLabel\": {\n     \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    \"dispositionLabel\": {\n     \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    }\n   },\n   \"versionDois\": [\n    {\n     \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    {\n     \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    }\n   ]\n  },\n  {\n   \"accessLevel\": \"WRITE\",\n   \"created\": \"velit \",\n   \"id\": \"mollit cillum qui quis\",\n   \"isProject\": false,\n   \"owner\": \"dolor\",\n   \"status\": \"INPROGRESS\",\n   \"title\": \"mollit voluptate consectetur\",\n   \"updated\": \"dolor sint\",\n   \"version\": \"ad ea quis\",\n   \"visibility\": \"PRIVATE\",\n   \"description\": \"dolore\",\n   \"summary\": \"aute exercitation do laborum\",\n   \"tags\": [\n    \"aliqua tempor dolore\",\n    \"ad sit\"\n   ],\n   \"dois\": [\n    {\n     \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    {\n     \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    }\n   ],\n   \"license\": \"OGL-Canada\",\n   \"files\": [\n    {\n     \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    {\n     \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    }\n   ],\n   \"properties\": {},\n   \"assetStatus\": {\n    \"assetStatusLabel\": {\n     \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    \"dispositionLabel\": {\n     \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    }\n   },\n   \"versionDois\": [\n    {\n     \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    {\n     \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    }\n   ]\n  }\n ],\n \"nextPageToken\": \"eu ipsum\"\n}"
								},
								{
									"name": "Bad request",
									"originalRequest": {
										"method": "GET",
										"header": [
											{
												"description": "Added as a part of security scheme: oauth2",
												"key": "Authorization",
												"value": "<token>"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/user/datasets/contributing?fields=adipisicing elit ullamco&limit=adipisicing elit ullamco&next=adipisicing elit ullamco",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"user",
												"datasets",
												"contributing"
											],
											"query": [
												{
													"key": "fields",
													"value": "adipisicing elit ullamco"
												},
												{
													"key": "limit",
													"value": "adipisicing elit ullamco"
												},
												{
													"key": "next",
													"value": "adipisicing elit ullamco"
												}
											]
										}
									},
									"status": "Bad Request",
									"code": 400,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n \"code\": 1519430,\n \"message\": \"enim\",\n \"details\": \"do\"\n}"
								},
								{
									"name": "Unauthorized",
									"originalRequest": {
										"method": "GET",
										"header": [
											{
												"description": "Added as a part of security scheme: oauth2",
												"key": "Authorization",
												"value": "<token>"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/user/datasets/contributing?fields=adipisicing elit ullamco&limit=adipisicing elit ullamco&next=adipisicing elit ullamco",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"user",
												"datasets",
												"contributing"
											],
											"query": [
												{
													"key": "fields",
													"value": "adipisicing elit ullamco"
												},
												{
													"key": "limit",
													"value": "adipisicing elit ullamco"
												},
												{
													"key": "next",
													"value": "adipisicing elit ullamco"
												}
											]
										}
									},
									"status": "Unauthorized",
									"code": 401,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n \"code\": 1519430,\n \"message\": \"enim\",\n \"details\": \"do\"\n}"
								},
								{
									"name": "Forbidden",
									"originalRequest": {
										"method": "GET",
										"header": [
											{
												"description": "Added as a part of security scheme: oauth2",
												"key": "Authorization",
												"value": "<token>"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/user/datasets/contributing?fields=adipisicing elit ullamco&limit=adipisicing elit ullamco&next=adipisicing elit ullamco",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"user",
												"datasets",
												"contributing"
											],
											"query": [
												{
													"key": "fields",
													"value": "adipisicing elit ullamco"
												},
												{
													"key": "limit",
													"value": "adipisicing elit ullamco"
												},
												{
													"key": "next",
													"value": "adipisicing elit ullamco"
												}
											]
										}
									},
									"status": "Forbidden",
									"code": 403,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n \"code\": 1519430,\n \"message\": \"enim\",\n \"details\": \"do\"\n}"
								},
								{
									"name": "Not found",
									"originalRequest": {
										"method": "GET",
										"header": [
											{
												"description": "Added as a part of security scheme: oauth2",
												"key": "Authorization",
												"value": "<token>"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/user/datasets/contributing?fields=adipisicing elit ullamco&limit=adipisicing elit ullamco&next=adipisicing elit ullamco",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"user",
												"datasets",
												"contributing"
											],
											"query": [
												{
													"key": "fields",
													"value": "adipisicing elit ullamco"
												},
												{
													"key": "limit",
													"value": "adipisicing elit ullamco"
												},
												{
													"key": "next",
													"value": "adipisicing elit ullamco"
												}
											]
										}
									},
									"status": "Not Found",
									"code": 404,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n \"code\": 1519430,\n \"message\": \"enim\",\n \"details\": \"do\"\n}"
								},
								{
									"name": "Server error",
									"originalRequest": {
										"method": "GET",
										"header": [
											{
												"description": "Added as a part of security scheme: oauth2",
												"key": "Authorization",
												"value": "<token>"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/user/datasets/contributing?fields=adipisicing elit ullamco&limit=adipisicing elit ullamco&next=adipisicing elit ullamco",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"user",
												"datasets",
												"contributing"
											],
											"query": [
												{
													"key": "fields",
													"value": "adipisicing elit ullamco"
												},
												{
													"key": "limit",
													"value": "adipisicing elit ullamco"
												},
												{
													"key": "next",
													"value": "adipisicing elit ullamco"
												}
											]
										}
									},
									"status": "Internal Server Error",
									"code": 500,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n \"code\": 1519430,\n \"message\": \"enim\",\n \"details\": \"do\"\n}"
								}
							]
						},
						{
							"name": "Fetch datasets the requesting user likes",
							"request": {
								"auth": {
									"type": "bearer",
									"bearer": [
										{
											"key": "token",
											"value": "{{readWrite}}",
											"type": "string"
										}
									]
								},
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{baseUrl}}/user/datasets/liked",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"user",
										"datasets",
										"liked"
									],
									"query": [
										{
											"key": "fields",
											"value": "adipisicing elit ullamco",
											"disabled": true
										},
										{
											"key": "limit",
											"value": "adipisicing elit ullamco",
											"disabled": true
										},
										{
											"key": "next",
											"value": "adipisicing elit ullamco",
											"disabled": true
										}
									]
								}
							},
							"response": [
								{
									"name": "successful operation",
									"originalRequest": {
										"method": "GET",
										"header": [
											{
												"description": "Added as a part of security scheme: oauth2",
												"key": "Authorization",
												"value": "<token>"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/user/datasets/liked?fields=adipisicing elit ullamco&limit=adipisicing elit ullamco&next=adipisicing elit ullamco",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"user",
												"datasets",
												"liked"
											],
											"query": [
												{
													"key": "fields",
													"value": "adipisicing elit ullamco"
												},
												{
													"key": "limit",
													"value": "adipisicing elit ullamco"
												},
												{
													"key": "next",
													"value": "adipisicing elit ullamco"
												}
											]
										}
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n \"count\": 42361237,\n \"records\": [\n  {\n   \"accessLevel\": \"NONE\",\n   \"created\": \"in labore esse\",\n   \"id\": \"incididunt ipsum\",\n   \"isProject\": false,\n   \"owner\": \"Excepteur enim culpa\",\n   \"status\": \"INPROGRESS\",\n   \"title\": \"adipisicing ipsum\",\n   \"updated\": \"dolor cillum\",\n   \"version\": \"sit Ut consequat deserunt\",\n   \"visibility\": \"OPEN\",\n   \"description\": \"veniam voluptate enim magna\",\n   \"summary\": \"reprehenderit tempor\",\n   \"tags\": [\n    \"est do Ut enim\",\n    \"aute est sit dolor\"\n   ],\n   \"dois\": [\n    {\n     \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    {\n     \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    }\n   ],\n   \"license\": \"CC-0\",\n   \"files\": [\n    {\n     \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    {\n     \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    }\n   ],\n   \"properties\": {},\n   \"assetStatus\": {\n    \"assetStatusLabel\": {\n     \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    \"dispositionLabel\": {\n     \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    }\n   },\n   \"versionDois\": [\n    {\n     \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    {\n     \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    }\n   ]\n  },\n  {\n   \"accessLevel\": \"WRITE\",\n   \"created\": \"velit \",\n   \"id\": \"mollit cillum qui quis\",\n   \"isProject\": false,\n   \"owner\": \"dolor\",\n   \"status\": \"INPROGRESS\",\n   \"title\": \"mollit voluptate consectetur\",\n   \"updated\": \"dolor sint\",\n   \"version\": \"ad ea quis\",\n   \"visibility\": \"PRIVATE\",\n   \"description\": \"dolore\",\n   \"summary\": \"aute exercitation do laborum\",\n   \"tags\": [\n    \"aliqua tempor dolore\",\n    \"ad sit\"\n   ],\n   \"dois\": [\n    {\n     \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    {\n     \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    }\n   ],\n   \"license\": \"OGL-Canada\",\n   \"files\": [\n    {\n     \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    {\n     \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    }\n   ],\n   \"properties\": {},\n   \"assetStatus\": {\n    \"assetStatusLabel\": {\n     \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    \"dispositionLabel\": {\n     \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    }\n   },\n   \"versionDois\": [\n    {\n     \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    {\n     \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    }\n   ]\n  }\n ],\n \"nextPageToken\": \"eu ipsum\"\n}"
								},
								{
									"name": "Bad request",
									"originalRequest": {
										"method": "GET",
										"header": [
											{
												"description": "Added as a part of security scheme: oauth2",
												"key": "Authorization",
												"value": "<token>"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/user/datasets/liked?fields=adipisicing elit ullamco&limit=adipisicing elit ullamco&next=adipisicing elit ullamco",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"user",
												"datasets",
												"liked"
											],
											"query": [
												{
													"key": "fields",
													"value": "adipisicing elit ullamco"
												},
												{
													"key": "limit",
													"value": "adipisicing elit ullamco"
												},
												{
													"key": "next",
													"value": "adipisicing elit ullamco"
												}
											]
										}
									},
									"status": "Bad Request",
									"code": 400,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n \"code\": 1519430,\n \"message\": \"enim\",\n \"details\": \"do\"\n}"
								},
								{
									"name": "Unauthorized",
									"originalRequest": {
										"method": "GET",
										"header": [
											{
												"description": "Added as a part of security scheme: oauth2",
												"key": "Authorization",
												"value": "<token>"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/user/datasets/liked?fields=adipisicing elit ullamco&limit=adipisicing elit ullamco&next=adipisicing elit ullamco",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"user",
												"datasets",
												"liked"
											],
											"query": [
												{
													"key": "fields",
													"value": "adipisicing elit ullamco"
												},
												{
													"key": "limit",
													"value": "adipisicing elit ullamco"
												},
												{
													"key": "next",
													"value": "adipisicing elit ullamco"
												}
											]
										}
									},
									"status": "Unauthorized",
									"code": 401,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n \"code\": 1519430,\n \"message\": \"enim\",\n \"details\": \"do\"\n}"
								},
								{
									"name": "Forbidden",
									"originalRequest": {
										"method": "GET",
										"header": [
											{
												"description": "Added as a part of security scheme: oauth2",
												"key": "Authorization",
												"value": "<token>"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/user/datasets/liked?fields=adipisicing elit ullamco&limit=adipisicing elit ullamco&next=adipisicing elit ullamco",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"user",
												"datasets",
												"liked"
											],
											"query": [
												{
													"key": "fields",
													"value": "adipisicing elit ullamco"
												},
												{
													"key": "limit",
													"value": "adipisicing elit ullamco"
												},
												{
													"key": "next",
													"value": "adipisicing elit ullamco"
												}
											]
										}
									},
									"status": "Forbidden",
									"code": 403,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n \"code\": 1519430,\n \"message\": \"enim\",\n \"details\": \"do\"\n}"
								},
								{
									"name": "Not found",
									"originalRequest": {
										"method": "GET",
										"header": [
											{
												"description": "Added as a part of security scheme: oauth2",
												"key": "Authorization",
												"value": "<token>"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/user/datasets/liked?fields=adipisicing elit ullamco&limit=adipisicing elit ullamco&next=adipisicing elit ullamco",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"user",
												"datasets",
												"liked"
											],
											"query": [
												{
													"key": "fields",
													"value": "adipisicing elit ullamco"
												},
												{
													"key": "limit",
													"value": "adipisicing elit ullamco"
												},
												{
													"key": "next",
													"value": "adipisicing elit ullamco"
												}
											]
										}
									},
									"status": "Not Found",
									"code": 404,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n \"code\": 1519430,\n \"message\": \"enim\",\n \"details\": \"do\"\n}"
								},
								{
									"name": "Server error",
									"originalRequest": {
										"method": "GET",
										"header": [
											{
												"description": "Added as a part of security scheme: oauth2",
												"key": "Authorization",
												"value": "<token>"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/user/datasets/liked?fields=adipisicing elit ullamco&limit=adipisicing elit ullamco&next=adipisicing elit ullamco",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"user",
												"datasets",
												"liked"
											],
											"query": [
												{
													"key": "fields",
													"value": "adipisicing elit ullamco"
												},
												{
													"key": "limit",
													"value": "adipisicing elit ullamco"
												},
												{
													"key": "next",
													"value": "adipisicing elit ullamco"
												}
											]
										}
									},
									"status": "Internal Server Error",
									"code": 500,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n \"code\": 1519430,\n \"message\": \"enim\",\n \"details\": \"do\"\n}"
								}
							]
						},
						{
							"name": "Fetch datasets the requesting user owns",
							"request": {
								"auth": {
									"type": "bearer",
									"bearer": [
										{
											"key": "token",
											"value": "{{readWrite}}",
											"type": "string"
										}
									]
								},
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{baseUrl}}/user/datasets/own",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"user",
										"datasets",
										"own"
									],
									"query": [
										{
											"key": "fields",
											"value": "adipisicing elit ullamco",
											"disabled": true
										},
										{
											"key": "limit",
											"value": "adipisicing elit ullamco",
											"disabled": true
										},
										{
											"key": "next",
											"value": "adipisicing elit ullamco",
											"disabled": true
										}
									]
								}
							},
							"response": [
								{
									"name": "successful operation",
									"originalRequest": {
										"method": "GET",
										"header": [
											{
												"description": "Added as a part of security scheme: oauth2",
												"key": "Authorization",
												"value": "<token>"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/user/datasets/own?fields=adipisicing elit ullamco&limit=adipisicing elit ullamco&next=adipisicing elit ullamco",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"user",
												"datasets",
												"own"
											],
											"query": [
												{
													"key": "fields",
													"value": "adipisicing elit ullamco"
												},
												{
													"key": "limit",
													"value": "adipisicing elit ullamco"
												},
												{
													"key": "next",
													"value": "adipisicing elit ullamco"
												}
											]
										}
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n \"count\": 42361237,\n \"records\": [\n  {\n   \"accessLevel\": \"NONE\",\n   \"created\": \"in labore esse\",\n   \"id\": \"incididunt ipsum\",\n   \"isProject\": false,\n   \"owner\": \"Excepteur enim culpa\",\n   \"status\": \"INPROGRESS\",\n   \"title\": \"adipisicing ipsum\",\n   \"updated\": \"dolor cillum\",\n   \"version\": \"sit Ut consequat deserunt\",\n   \"visibility\": \"OPEN\",\n   \"description\": \"veniam voluptate enim magna\",\n   \"summary\": \"reprehenderit tempor\",\n   \"tags\": [\n    \"est do Ut enim\",\n    \"aute est sit dolor\"\n   ],\n   \"dois\": [\n    {\n     \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    {\n     \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    }\n   ],\n   \"license\": \"CC-0\",\n   \"files\": [\n    {\n     \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    {\n     \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    }\n   ],\n   \"properties\": {},\n   \"assetStatus\": {\n    \"assetStatusLabel\": {\n     \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    \"dispositionLabel\": {\n     \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    }\n   },\n   \"versionDois\": [\n    {\n     \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    {\n     \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    }\n   ]\n  },\n  {\n   \"accessLevel\": \"WRITE\",\n   \"created\": \"velit \",\n   \"id\": \"mollit cillum qui quis\",\n   \"isProject\": false,\n   \"owner\": \"dolor\",\n   \"status\": \"INPROGRESS\",\n   \"title\": \"mollit voluptate consectetur\",\n   \"updated\": \"dolor sint\",\n   \"version\": \"ad ea quis\",\n   \"visibility\": \"PRIVATE\",\n   \"description\": \"dolore\",\n   \"summary\": \"aute exercitation do laborum\",\n   \"tags\": [\n    \"aliqua tempor dolore\",\n    \"ad sit\"\n   ],\n   \"dois\": [\n    {\n     \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    {\n     \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    }\n   ],\n   \"license\": \"OGL-Canada\",\n   \"files\": [\n    {\n     \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    {\n     \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    }\n   ],\n   \"properties\": {},\n   \"assetStatus\": {\n    \"assetStatusLabel\": {\n     \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    \"dispositionLabel\": {\n     \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    }\n   },\n   \"versionDois\": [\n    {\n     \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    {\n     \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    }\n   ]\n  }\n ],\n \"nextPageToken\": \"eu ipsum\"\n}"
								},
								{
									"name": "Bad request",
									"originalRequest": {
										"method": "GET",
										"header": [
											{
												"description": "Added as a part of security scheme: oauth2",
												"key": "Authorization",
												"value": "<token>"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/user/datasets/own?fields=adipisicing elit ullamco&limit=adipisicing elit ullamco&next=adipisicing elit ullamco",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"user",
												"datasets",
												"own"
											],
											"query": [
												{
													"key": "fields",
													"value": "adipisicing elit ullamco"
												},
												{
													"key": "limit",
													"value": "adipisicing elit ullamco"
												},
												{
													"key": "next",
													"value": "adipisicing elit ullamco"
												}
											]
										}
									},
									"status": "Bad Request",
									"code": 400,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n \"code\": 1519430,\n \"message\": \"enim\",\n \"details\": \"do\"\n}"
								},
								{
									"name": "Unauthorized",
									"originalRequest": {
										"method": "GET",
										"header": [
											{
												"description": "Added as a part of security scheme: oauth2",
												"key": "Authorization",
												"value": "<token>"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/user/datasets/own?fields=adipisicing elit ullamco&limit=adipisicing elit ullamco&next=adipisicing elit ullamco",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"user",
												"datasets",
												"own"
											],
											"query": [
												{
													"key": "fields",
													"value": "adipisicing elit ullamco"
												},
												{
													"key": "limit",
													"value": "adipisicing elit ullamco"
												},
												{
													"key": "next",
													"value": "adipisicing elit ullamco"
												}
											]
										}
									},
									"status": "Unauthorized",
									"code": 401,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n \"code\": 1519430,\n \"message\": \"enim\",\n \"details\": \"do\"\n}"
								},
								{
									"name": "Forbidden",
									"originalRequest": {
										"method": "GET",
										"header": [
											{
												"description": "Added as a part of security scheme: oauth2",
												"key": "Authorization",
												"value": "<token>"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/user/datasets/own?fields=adipisicing elit ullamco&limit=adipisicing elit ullamco&next=adipisicing elit ullamco",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"user",
												"datasets",
												"own"
											],
											"query": [
												{
													"key": "fields",
													"value": "adipisicing elit ullamco"
												},
												{
													"key": "limit",
													"value": "adipisicing elit ullamco"
												},
												{
													"key": "next",
													"value": "adipisicing elit ullamco"
												}
											]
										}
									},
									"status": "Forbidden",
									"code": 403,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n \"code\": 1519430,\n \"message\": \"enim\",\n \"details\": \"do\"\n}"
								},
								{
									"name": "Not found",
									"originalRequest": {
										"method": "GET",
										"header": [
											{
												"description": "Added as a part of security scheme: oauth2",
												"key": "Authorization",
												"value": "<token>"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/user/datasets/own?fields=adipisicing elit ullamco&limit=adipisicing elit ullamco&next=adipisicing elit ullamco",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"user",
												"datasets",
												"own"
											],
											"query": [
												{
													"key": "fields",
													"value": "adipisicing elit ullamco"
												},
												{
													"key": "limit",
													"value": "adipisicing elit ullamco"
												},
												{
													"key": "next",
													"value": "adipisicing elit ullamco"
												}
											]
										}
									},
									"status": "Not Found",
									"code": 404,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n \"code\": 1519430,\n \"message\": \"enim\",\n \"details\": \"do\"\n}"
								},
								{
									"name": "Server error",
									"originalRequest": {
										"method": "GET",
										"header": [
											{
												"description": "Added as a part of security scheme: oauth2",
												"key": "Authorization",
												"value": "<token>"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/user/datasets/own?fields=adipisicing elit ullamco&limit=adipisicing elit ullamco&next=adipisicing elit ullamco",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"user",
												"datasets",
												"own"
											],
											"query": [
												{
													"key": "fields",
													"value": "adipisicing elit ullamco"
												},
												{
													"key": "limit",
													"value": "adipisicing elit ullamco"
												},
												{
													"key": "next",
													"value": "adipisicing elit ullamco"
												}
											]
										}
									},
									"status": "Internal Server Error",
									"code": 500,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n \"code\": 1519430,\n \"message\": \"enim\",\n \"details\": \"do\"\n}"
								}
							]
						}
					]
				},
				{
					"name": "projects",
					"item": [
						{
							"name": "Fetch projects to which the requesting user is a contributor",
							"request": {
								"auth": {
									"type": "bearer",
									"bearer": [
										{
											"key": "token",
											"value": "{{readWrite}}",
											"type": "string"
										}
									]
								},
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{baseUrl}}/user/projects/contributing",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"user",
										"projects",
										"contributing"
									],
									"query": [
										{
											"key": "limit",
											"value": "adipisicing elit ullamco",
											"disabled": true
										},
										{
											"key": "next",
											"value": "adipisicing elit ullamco",
											"disabled": true
										}
									]
								}
							},
							"response": [
								{
									"name": "successful operation",
									"originalRequest": {
										"method": "GET",
										"header": [
											{
												"description": "Added as a part of security scheme: oauth2",
												"key": "Authorization",
												"value": "<token>"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/user/projects/contributing?limit=adipisicing elit ullamco&next=adipisicing elit ullamco",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"user",
												"projects",
												"contributing"
											],
											"query": [
												{
													"key": "limit",
													"value": "adipisicing elit ullamco"
												},
												{
													"key": "next",
													"value": "adipisicing elit ullamco"
												}
											]
										}
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n \"count\": 57949641,\n \"records\": [\n  {\n   \"accessLevel\": \"DISCOVER\",\n   \"created\": \"sint cillum consectetur in Excepteur\",\n   \"id\": \"do eiusmod\",\n   \"owner\": \"ut\",\n   \"status\": \"NEW\",\n   \"title\": \"dolore\",\n   \"updated\": \"dolore anim do in\",\n   \"version\": \"proident ipsum sit\",\n   \"visibility\": \"PRIVATE\",\n   \"objective\": \"et culpa\",\n   \"summary\": \"in adipisicing consectetur cupidatat in\",\n   \"tags\": [\n    \"et elit aliquip irure\",\n    \"labore sed nulla\"\n   ],\n   \"license\": \"CC-BY-SA\",\n   \"assetStatus\": {\n    \"assetStatusLabel\": \"do ad\",\n    \"dispositionLabel\": \"dolor culpa\"\n   },\n   \"files\": [\n    {\n     \"created\": \"ex aliqua dolore adipisicing in\",\n     \"name\": \"fD\\\\Ks:OI-vT\",\n     \"updated\": \"velit ex\",\n     \"sizeInBytes\": 87771719,\n     \"source\": {\n      \"syncStatus\": {\n       \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      \"url\": {\n       \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      \"method\": {\n       \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      \"requestHeaders\": {\n       \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      \"requestEntity\": {\n       \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      \"oauthToken\": {\n       \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      \"credentials\": {\n       \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      \"authorization\": {\n       \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      \"databaseSource\": {\n       \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      \"dwccSpec\": {\n       \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      \"viewRequest\": {\n       \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      \"databaseMetadataSpec\": {\n       \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      \"dataTables\": {\n       \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      \"tableSpec\": {\n       \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      \"expandArchive\": {\n       \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      \"syncSummary\": {\n       \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      \"lastSyncStart\": {\n       \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      \"lastSyncSuccess\": {\n       \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      \"lastSyncFailure\": {\n       \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      }\n     },\n     \"description\": \"tempor aliquip ad\",\n     \"labels\": [\n      \"amet sed\",\n      \"in et sed incididunt\"\n     ]\n    },\n    {\n     \"created\": \"dolor Ut do qui\",\n     \"name\": \"r~L7FX]M\",\n     \"updated\": \"anim qui\",\n     \"sizeInBytes\": -28410645,\n     \"source\": {\n      \"syncStatus\": {\n       \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      \"url\": {\n       \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      \"method\": {\n       \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      \"requestHeaders\": {\n       \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      \"requestEntity\": {\n       \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      \"oauthToken\": {\n       \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      \"credentials\": {\n       \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      \"authorization\": {\n       \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      \"databaseSource\": {\n       \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      \"dwccSpec\": {\n       \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      \"viewRequest\": {\n       \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      \"databaseMetadataSpec\": {\n       \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      \"dataTables\": {\n       \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      \"tableSpec\": {\n       \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      \"expandArchive\": {\n       \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      \"syncSummary\": {\n       \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      \"lastSyncStart\": {\n       \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      \"lastSyncSuccess\": {\n       \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      \"lastSyncFailure\": {\n       \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      }\n     },\n     \"description\": \"dolor magn\",\n     \"labels\": [\n      \"officia non dolor minim\",\n      \"incididunt ut mollit\"\n     ]\n    }\n   ],\n   \"properties\": {},\n   \"linkedDatasets\": [\n    {\n     \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    {\n     \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    }\n   ]\n  },\n  {\n   \"accessLevel\": \"NONE\",\n   \"created\": \"pariatur dolore exercit\",\n   \"id\": \"aliqua mollit labo\",\n   \"owner\": \"eiusmod anim dolor\",\n   \"status\": \"NEW\",\n   \"title\": \"ullamco non in\",\n   \"updated\": \"Excepteur\",\n   \"version\": \"ad aliqua nisi tempor\",\n   \"visibility\": \"PRIVATE\",\n   \"objective\": \"aute culpa eiusmod consequat ea\",\n   \"summary\": \"ipsum in occaecat incididunt\",\n   \"tags\": [\n    \"Ut sed laboris\",\n    \"pariatur\"\n   ],\n   \"license\": \"CC BY-NC-ND\",\n   \"assetStatus\": {\n    \"assetStatusLabel\": \"officia\",\n    \"dispositionLabel\": \"ex\"\n   },\n   \"files\": [\n    {\n     \"created\": \"in ut nostrud sed\",\n     \"name\": \"]cI\",\n     \"updated\": \"est cillum consequat\",\n     \"sizeInBytes\": -72655526,\n     \"source\": {\n      \"syncStatus\": {\n       \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      \"url\": {\n       \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      \"method\": {\n       \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      \"requestHeaders\": {\n       \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      \"requestEntity\": {\n       \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      \"oauthToken\": {\n       \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      \"credentials\": {\n       \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      \"authorization\": {\n       \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      \"databaseSource\": {\n       \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      \"dwccSpec\": {\n       \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      \"viewRequest\": {\n       \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      \"databaseMetadataSpec\": {\n       \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      \"dataTables\": {\n       \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      \"tableSpec\": {\n       \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      \"expandArchive\": {\n       \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      \"syncSummary\": {\n       \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      \"lastSyncStart\": {\n       \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      \"lastSyncSuccess\": {\n       \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      \"lastSyncFailure\": {\n       \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      }\n     },\n     \"description\": \"dolor irure ad\",\n     \"labels\": [\n      \"consectetur id dolor\",\n      \"adip\"\n     ]\n    },\n    {\n     \"created\": \"U\",\n     \"name\": \"<8f\",\n     \"updated\": \"culpa eu anim in\",\n     \"sizeInBytes\": 87819060,\n     \"source\": {\n      \"syncStatus\": {\n       \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      \"url\": {\n       \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      \"method\": {\n       \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      \"requestHeaders\": {\n       \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      \"requestEntity\": {\n       \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      \"oauthToken\": {\n       \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      \"credentials\": {\n       \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      \"authorization\": {\n       \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      \"databaseSource\": {\n       \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      \"dwccSpec\": {\n       \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      \"viewRequest\": {\n       \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      \"databaseMetadataSpec\": {\n       \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      \"dataTables\": {\n       \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      \"tableSpec\": {\n       \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      \"expandArchive\": {\n       \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      \"syncSummary\": {\n       \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      \"lastSyncStart\": {\n       \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      \"lastSyncSuccess\": {\n       \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      \"lastSyncFailure\": {\n       \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      }\n     },\n     \"description\": \"est ex\",\n     \"labels\": [\n      \"est magna\",\n      \"velit consectetur incididunt\"\n     ]\n    }\n   ],\n   \"properties\": {},\n   \"linkedDatasets\": [\n    {\n     \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    {\n     \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    }\n   ]\n  }\n ],\n \"nextPageToken\": \"nulla\"\n}"
								},
								{
									"name": "Bad request",
									"originalRequest": {
										"method": "GET",
										"header": [
											{
												"description": "Added as a part of security scheme: oauth2",
												"key": "Authorization",
												"value": "<token>"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/user/projects/contributing?limit=adipisicing elit ullamco&next=adipisicing elit ullamco",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"user",
												"projects",
												"contributing"
											],
											"query": [
												{
													"key": "limit",
													"value": "adipisicing elit ullamco"
												},
												{
													"key": "next",
													"value": "adipisicing elit ullamco"
												}
											]
										}
									},
									"status": "Bad Request",
									"code": 400,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n \"code\": 1519430,\n \"message\": \"enim\",\n \"details\": \"do\"\n}"
								},
								{
									"name": "Unauthorized",
									"originalRequest": {
										"method": "GET",
										"header": [
											{
												"description": "Added as a part of security scheme: oauth2",
												"key": "Authorization",
												"value": "<token>"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/user/projects/contributing?limit=adipisicing elit ullamco&next=adipisicing elit ullamco",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"user",
												"projects",
												"contributing"
											],
											"query": [
												{
													"key": "limit",
													"value": "adipisicing elit ullamco"
												},
												{
													"key": "next",
													"value": "adipisicing elit ullamco"
												}
											]
										}
									},
									"status": "Unauthorized",
									"code": 401,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n \"code\": 1519430,\n \"message\": \"enim\",\n \"details\": \"do\"\n}"
								},
								{
									"name": "Forbidden",
									"originalRequest": {
										"method": "GET",
										"header": [
											{
												"description": "Added as a part of security scheme: oauth2",
												"key": "Authorization",
												"value": "<token>"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/user/projects/contributing?limit=adipisicing elit ullamco&next=adipisicing elit ullamco",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"user",
												"projects",
												"contributing"
											],
											"query": [
												{
													"key": "limit",
													"value": "adipisicing elit ullamco"
												},
												{
													"key": "next",
													"value": "adipisicing elit ullamco"
												}
											]
										}
									},
									"status": "Forbidden",
									"code": 403,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n \"code\": 1519430,\n \"message\": \"enim\",\n \"details\": \"do\"\n}"
								},
								{
									"name": "Not found",
									"originalRequest": {
										"method": "GET",
										"header": [
											{
												"description": "Added as a part of security scheme: oauth2",
												"key": "Authorization",
												"value": "<token>"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/user/projects/contributing?limit=adipisicing elit ullamco&next=adipisicing elit ullamco",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"user",
												"projects",
												"contributing"
											],
											"query": [
												{
													"key": "limit",
													"value": "adipisicing elit ullamco"
												},
												{
													"key": "next",
													"value": "adipisicing elit ullamco"
												}
											]
										}
									},
									"status": "Not Found",
									"code": 404,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n \"code\": 1519430,\n \"message\": \"enim\",\n \"details\": \"do\"\n}"
								},
								{
									"name": "Server error",
									"originalRequest": {
										"method": "GET",
										"header": [
											{
												"description": "Added as a part of security scheme: oauth2",
												"key": "Authorization",
												"value": "<token>"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/user/projects/contributing?limit=adipisicing elit ullamco&next=adipisicing elit ullamco",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"user",
												"projects",
												"contributing"
											],
											"query": [
												{
													"key": "limit",
													"value": "adipisicing elit ullamco"
												},
												{
													"key": "next",
													"value": "adipisicing elit ullamco"
												}
											]
										}
									},
									"status": "Internal Server Error",
									"code": 500,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n \"code\": 1519430,\n \"message\": \"enim\",\n \"details\": \"do\"\n}"
								}
							]
						},
						{
							"name": "Fetch projects the requesting user likes",
							"request": {
								"auth": {
									"type": "bearer",
									"bearer": [
										{
											"key": "token",
											"value": "{{readWrite}}",
											"type": "string"
										}
									]
								},
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{baseUrl}}/user/projects/liked",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"user",
										"projects",
										"liked"
									],
									"query": [
										{
											"key": "limit",
											"value": "adipisicing elit ullamco",
											"disabled": true
										},
										{
											"key": "next",
											"value": "adipisicing elit ullamco",
											"disabled": true
										}
									]
								}
							},
							"response": [
								{
									"name": "successful operation",
									"originalRequest": {
										"method": "GET",
										"header": [
											{
												"description": "Added as a part of security scheme: oauth2",
												"key": "Authorization",
												"value": "<token>"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/user/projects/liked?limit=adipisicing elit ullamco&next=adipisicing elit ullamco",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"user",
												"projects",
												"liked"
											],
											"query": [
												{
													"key": "limit",
													"value": "adipisicing elit ullamco"
												},
												{
													"key": "next",
													"value": "adipisicing elit ullamco"
												}
											]
										}
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n \"count\": 57949641,\n \"records\": [\n  {\n   \"accessLevel\": \"DISCOVER\",\n   \"created\": \"sint cillum consectetur in Excepteur\",\n   \"id\": \"do eiusmod\",\n   \"owner\": \"ut\",\n   \"status\": \"NEW\",\n   \"title\": \"dolore\",\n   \"updated\": \"dolore anim do in\",\n   \"version\": \"proident ipsum sit\",\n   \"visibility\": \"PRIVATE\",\n   \"objective\": \"et culpa\",\n   \"summary\": \"in adipisicing consectetur cupidatat in\",\n   \"tags\": [\n    \"et elit aliquip irure\",\n    \"labore sed nulla\"\n   ],\n   \"license\": \"CC-BY-SA\",\n   \"assetStatus\": {\n    \"assetStatusLabel\": \"do ad\",\n    \"dispositionLabel\": \"dolor culpa\"\n   },\n   \"files\": [\n    {\n     \"created\": \"ex aliqua dolore adipisicing in\",\n     \"name\": \"fD\\\\Ks:OI-vT\",\n     \"updated\": \"velit ex\",\n     \"sizeInBytes\": 87771719,\n     \"source\": {\n      \"syncStatus\": {\n       \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      \"url\": {\n       \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      \"method\": {\n       \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      \"requestHeaders\": {\n       \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      \"requestEntity\": {\n       \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      \"oauthToken\": {\n       \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      \"credentials\": {\n       \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      \"authorization\": {\n       \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      \"databaseSource\": {\n       \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      \"dwccSpec\": {\n       \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      \"viewRequest\": {\n       \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      \"databaseMetadataSpec\": {\n       \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      \"dataTables\": {\n       \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      \"tableSpec\": {\n       \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      \"expandArchive\": {\n       \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      \"syncSummary\": {\n       \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      \"lastSyncStart\": {\n       \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      \"lastSyncSuccess\": {\n       \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      \"lastSyncFailure\": {\n       \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      }\n     },\n     \"description\": \"tempor aliquip ad\",\n     \"labels\": [\n      \"amet sed\",\n      \"in et sed incididunt\"\n     ]\n    },\n    {\n     \"created\": \"dolor Ut do qui\",\n     \"name\": \"r~L7FX]M\",\n     \"updated\": \"anim qui\",\n     \"sizeInBytes\": -28410645,\n     \"source\": {\n      \"syncStatus\": {\n       \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      \"url\": {\n       \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      \"method\": {\n       \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      \"requestHeaders\": {\n       \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      \"requestEntity\": {\n       \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      \"oauthToken\": {\n       \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      \"credentials\": {\n       \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      \"authorization\": {\n       \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      \"databaseSource\": {\n       \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      \"dwccSpec\": {\n       \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      \"viewRequest\": {\n       \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      \"databaseMetadataSpec\": {\n       \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      \"dataTables\": {\n       \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      \"tableSpec\": {\n       \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      \"expandArchive\": {\n       \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      \"syncSummary\": {\n       \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      \"lastSyncStart\": {\n       \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      \"lastSyncSuccess\": {\n       \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      \"lastSyncFailure\": {\n       \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      }\n     },\n     \"description\": \"dolor magn\",\n     \"labels\": [\n      \"officia non dolor minim\",\n      \"incididunt ut mollit\"\n     ]\n    }\n   ],\n   \"properties\": {},\n   \"linkedDatasets\": [\n    {\n     \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    {\n     \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    }\n   ]\n  },\n  {\n   \"accessLevel\": \"NONE\",\n   \"created\": \"pariatur dolore exercit\",\n   \"id\": \"aliqua mollit labo\",\n   \"owner\": \"eiusmod anim dolor\",\n   \"status\": \"NEW\",\n   \"title\": \"ullamco non in\",\n   \"updated\": \"Excepteur\",\n   \"version\": \"ad aliqua nisi tempor\",\n   \"visibility\": \"PRIVATE\",\n   \"objective\": \"aute culpa eiusmod consequat ea\",\n   \"summary\": \"ipsum in occaecat incididunt\",\n   \"tags\": [\n    \"Ut sed laboris\",\n    \"pariatur\"\n   ],\n   \"license\": \"CC BY-NC-ND\",\n   \"assetStatus\": {\n    \"assetStatusLabel\": \"officia\",\n    \"dispositionLabel\": \"ex\"\n   },\n   \"files\": [\n    {\n     \"created\": \"in ut nostrud sed\",\n     \"name\": \"]cI\",\n     \"updated\": \"est cillum consequat\",\n     \"sizeInBytes\": -72655526,\n     \"source\": {\n      \"syncStatus\": {\n       \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      \"url\": {\n       \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      \"method\": {\n       \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      \"requestHeaders\": {\n       \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      \"requestEntity\": {\n       \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      \"oauthToken\": {\n       \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      \"credentials\": {\n       \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      \"authorization\": {\n       \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      \"databaseSource\": {\n       \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      \"dwccSpec\": {\n       \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      \"viewRequest\": {\n       \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      \"databaseMetadataSpec\": {\n       \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      \"dataTables\": {\n       \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      \"tableSpec\": {\n       \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      \"expandArchive\": {\n       \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      \"syncSummary\": {\n       \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      \"lastSyncStart\": {\n       \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      \"lastSyncSuccess\": {\n       \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      \"lastSyncFailure\": {\n       \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      }\n     },\n     \"description\": \"dolor irure ad\",\n     \"labels\": [\n      \"consectetur id dolor\",\n      \"adip\"\n     ]\n    },\n    {\n     \"created\": \"U\",\n     \"name\": \"<8f\",\n     \"updated\": \"culpa eu anim in\",\n     \"sizeInBytes\": 87819060,\n     \"source\": {\n      \"syncStatus\": {\n       \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      \"url\": {\n       \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      \"method\": {\n       \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      \"requestHeaders\": {\n       \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      \"requestEntity\": {\n       \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      \"oauthToken\": {\n       \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      \"credentials\": {\n       \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      \"authorization\": {\n       \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      \"databaseSource\": {\n       \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      \"dwccSpec\": {\n       \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      \"viewRequest\": {\n       \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      \"databaseMetadataSpec\": {\n       \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      \"dataTables\": {\n       \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      \"tableSpec\": {\n       \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      \"expandArchive\": {\n       \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      \"syncSummary\": {\n       \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      \"lastSyncStart\": {\n       \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      \"lastSyncSuccess\": {\n       \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      \"lastSyncFailure\": {\n       \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      }\n     },\n     \"description\": \"est ex\",\n     \"labels\": [\n      \"est magna\",\n      \"velit consectetur incididunt\"\n     ]\n    }\n   ],\n   \"properties\": {},\n   \"linkedDatasets\": [\n    {\n     \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    {\n     \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    }\n   ]\n  }\n ],\n \"nextPageToken\": \"nulla\"\n}"
								},
								{
									"name": "Bad request",
									"originalRequest": {
										"method": "GET",
										"header": [
											{
												"description": "Added as a part of security scheme: oauth2",
												"key": "Authorization",
												"value": "<token>"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/user/projects/liked?limit=adipisicing elit ullamco&next=adipisicing elit ullamco",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"user",
												"projects",
												"liked"
											],
											"query": [
												{
													"key": "limit",
													"value": "adipisicing elit ullamco"
												},
												{
													"key": "next",
													"value": "adipisicing elit ullamco"
												}
											]
										}
									},
									"status": "Bad Request",
									"code": 400,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n \"code\": 1519430,\n \"message\": \"enim\",\n \"details\": \"do\"\n}"
								},
								{
									"name": "Unauthorized",
									"originalRequest": {
										"method": "GET",
										"header": [
											{
												"description": "Added as a part of security scheme: oauth2",
												"key": "Authorization",
												"value": "<token>"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/user/projects/liked?limit=adipisicing elit ullamco&next=adipisicing elit ullamco",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"user",
												"projects",
												"liked"
											],
											"query": [
												{
													"key": "limit",
													"value": "adipisicing elit ullamco"
												},
												{
													"key": "next",
													"value": "adipisicing elit ullamco"
												}
											]
										}
									},
									"status": "Unauthorized",
									"code": 401,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n \"code\": 1519430,\n \"message\": \"enim\",\n \"details\": \"do\"\n}"
								},
								{
									"name": "Forbidden",
									"originalRequest": {
										"method": "GET",
										"header": [
											{
												"description": "Added as a part of security scheme: oauth2",
												"key": "Authorization",
												"value": "<token>"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/user/projects/liked?limit=adipisicing elit ullamco&next=adipisicing elit ullamco",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"user",
												"projects",
												"liked"
											],
											"query": [
												{
													"key": "limit",
													"value": "adipisicing elit ullamco"
												},
												{
													"key": "next",
													"value": "adipisicing elit ullamco"
												}
											]
										}
									},
									"status": "Forbidden",
									"code": 403,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n \"code\": 1519430,\n \"message\": \"enim\",\n \"details\": \"do\"\n}"
								},
								{
									"name": "Not found",
									"originalRequest": {
										"method": "GET",
										"header": [
											{
												"description": "Added as a part of security scheme: oauth2",
												"key": "Authorization",
												"value": "<token>"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/user/projects/liked?limit=adipisicing elit ullamco&next=adipisicing elit ullamco",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"user",
												"projects",
												"liked"
											],
											"query": [
												{
													"key": "limit",
													"value": "adipisicing elit ullamco"
												},
												{
													"key": "next",
													"value": "adipisicing elit ullamco"
												}
											]
										}
									},
									"status": "Not Found",
									"code": 404,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n \"code\": 1519430,\n \"message\": \"enim\",\n \"details\": \"do\"\n}"
								},
								{
									"name": "Server error",
									"originalRequest": {
										"method": "GET",
										"header": [
											{
												"description": "Added as a part of security scheme: oauth2",
												"key": "Authorization",
												"value": "<token>"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/user/projects/liked?limit=adipisicing elit ullamco&next=adipisicing elit ullamco",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"user",
												"projects",
												"liked"
											],
											"query": [
												{
													"key": "limit",
													"value": "adipisicing elit ullamco"
												},
												{
													"key": "next",
													"value": "adipisicing elit ullamco"
												}
											]
										}
									},
									"status": "Internal Server Error",
									"code": 500,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n \"code\": 1519430,\n \"message\": \"enim\",\n \"details\": \"do\"\n}"
								}
							]
						},
						{
							"name": "Fetch projects the requesting user owns",
							"request": {
								"auth": {
									"type": "bearer",
									"bearer": [
										{
											"key": "token",
											"value": "{{readWrite}}",
											"type": "string"
										}
									]
								},
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{baseUrl}}/user/projects/own",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"user",
										"projects",
										"own"
									],
									"query": [
										{
											"key": "limit",
											"value": "adipisicing elit ullamco",
											"disabled": true
										},
										{
											"key": "next",
											"value": "adipisicing elit ullamco",
											"disabled": true
										}
									]
								}
							},
							"response": [
								{
									"name": "successful operation",
									"originalRequest": {
										"method": "GET",
										"header": [
											{
												"description": "Added as a part of security scheme: oauth2",
												"key": "Authorization",
												"value": "<token>"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/user/projects/own?limit=adipisicing elit ullamco&next=adipisicing elit ullamco",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"user",
												"projects",
												"own"
											],
											"query": [
												{
													"key": "limit",
													"value": "adipisicing elit ullamco"
												},
												{
													"key": "next",
													"value": "adipisicing elit ullamco"
												}
											]
										}
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n \"count\": 57949641,\n \"records\": [\n  {\n   \"accessLevel\": \"DISCOVER\",\n   \"created\": \"sint cillum consectetur in Excepteur\",\n   \"id\": \"do eiusmod\",\n   \"owner\": \"ut\",\n   \"status\": \"NEW\",\n   \"title\": \"dolore\",\n   \"updated\": \"dolore anim do in\",\n   \"version\": \"proident ipsum sit\",\n   \"visibility\": \"PRIVATE\",\n   \"objective\": \"et culpa\",\n   \"summary\": \"in adipisicing consectetur cupidatat in\",\n   \"tags\": [\n    \"et elit aliquip irure\",\n    \"labore sed nulla\"\n   ],\n   \"license\": \"CC-BY-SA\",\n   \"assetStatus\": {\n    \"assetStatusLabel\": \"do ad\",\n    \"dispositionLabel\": \"dolor culpa\"\n   },\n   \"files\": [\n    {\n     \"created\": \"ex aliqua dolore adipisicing in\",\n     \"name\": \"fD\\\\Ks:OI-vT\",\n     \"updated\": \"velit ex\",\n     \"sizeInBytes\": 87771719,\n     \"source\": {\n      \"syncStatus\": {\n       \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      \"url\": {\n       \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      \"method\": {\n       \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      \"requestHeaders\": {\n       \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      \"requestEntity\": {\n       \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      \"oauthToken\": {\n       \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      \"credentials\": {\n       \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      \"authorization\": {\n       \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      \"databaseSource\": {\n       \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      \"dwccSpec\": {\n       \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      \"viewRequest\": {\n       \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      \"databaseMetadataSpec\": {\n       \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      \"dataTables\": {\n       \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      \"tableSpec\": {\n       \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      \"expandArchive\": {\n       \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      \"syncSummary\": {\n       \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      \"lastSyncStart\": {\n       \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      \"lastSyncSuccess\": {\n       \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      \"lastSyncFailure\": {\n       \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      }\n     },\n     \"description\": \"tempor aliquip ad\",\n     \"labels\": [\n      \"amet sed\",\n      \"in et sed incididunt\"\n     ]\n    },\n    {\n     \"created\": \"dolor Ut do qui\",\n     \"name\": \"r~L7FX]M\",\n     \"updated\": \"anim qui\",\n     \"sizeInBytes\": -28410645,\n     \"source\": {\n      \"syncStatus\": {\n       \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      \"url\": {\n       \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      \"method\": {\n       \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      \"requestHeaders\": {\n       \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      \"requestEntity\": {\n       \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      \"oauthToken\": {\n       \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      \"credentials\": {\n       \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      \"authorization\": {\n       \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      \"databaseSource\": {\n       \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      \"dwccSpec\": {\n       \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      \"viewRequest\": {\n       \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      \"databaseMetadataSpec\": {\n       \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      \"dataTables\": {\n       \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      \"tableSpec\": {\n       \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      \"expandArchive\": {\n       \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      \"syncSummary\": {\n       \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      \"lastSyncStart\": {\n       \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      \"lastSyncSuccess\": {\n       \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      \"lastSyncFailure\": {\n       \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      }\n     },\n     \"description\": \"dolor magn\",\n     \"labels\": [\n      \"officia non dolor minim\",\n      \"incididunt ut mollit\"\n     ]\n    }\n   ],\n   \"properties\": {},\n   \"linkedDatasets\": [\n    {\n     \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    {\n     \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    }\n   ]\n  },\n  {\n   \"accessLevel\": \"NONE\",\n   \"created\": \"pariatur dolore exercit\",\n   \"id\": \"aliqua mollit labo\",\n   \"owner\": \"eiusmod anim dolor\",\n   \"status\": \"NEW\",\n   \"title\": \"ullamco non in\",\n   \"updated\": \"Excepteur\",\n   \"version\": \"ad aliqua nisi tempor\",\n   \"visibility\": \"PRIVATE\",\n   \"objective\": \"aute culpa eiusmod consequat ea\",\n   \"summary\": \"ipsum in occaecat incididunt\",\n   \"tags\": [\n    \"Ut sed laboris\",\n    \"pariatur\"\n   ],\n   \"license\": \"CC BY-NC-ND\",\n   \"assetStatus\": {\n    \"assetStatusLabel\": \"officia\",\n    \"dispositionLabel\": \"ex\"\n   },\n   \"files\": [\n    {\n     \"created\": \"in ut nostrud sed\",\n     \"name\": \"]cI\",\n     \"updated\": \"est cillum consequat\",\n     \"sizeInBytes\": -72655526,\n     \"source\": {\n      \"syncStatus\": {\n       \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      \"url\": {\n       \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      \"method\": {\n       \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      \"requestHeaders\": {\n       \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      \"requestEntity\": {\n       \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      \"oauthToken\": {\n       \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      \"credentials\": {\n       \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      \"authorization\": {\n       \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      \"databaseSource\": {\n       \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      \"dwccSpec\": {\n       \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      \"viewRequest\": {\n       \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      \"databaseMetadataSpec\": {\n       \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      \"dataTables\": {\n       \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      \"tableSpec\": {\n       \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      \"expandArchive\": {\n       \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      \"syncSummary\": {\n       \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      \"lastSyncStart\": {\n       \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      \"lastSyncSuccess\": {\n       \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      \"lastSyncFailure\": {\n       \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      }\n     },\n     \"description\": \"dolor irure ad\",\n     \"labels\": [\n      \"consectetur id dolor\",\n      \"adip\"\n     ]\n    },\n    {\n     \"created\": \"U\",\n     \"name\": \"<8f\",\n     \"updated\": \"culpa eu anim in\",\n     \"sizeInBytes\": 87819060,\n     \"source\": {\n      \"syncStatus\": {\n       \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      \"url\": {\n       \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      \"method\": {\n       \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      \"requestHeaders\": {\n       \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      \"requestEntity\": {\n       \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      \"oauthToken\": {\n       \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      \"credentials\": {\n       \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      \"authorization\": {\n       \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      \"databaseSource\": {\n       \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      \"dwccSpec\": {\n       \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      \"viewRequest\": {\n       \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      \"databaseMetadataSpec\": {\n       \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      \"dataTables\": {\n       \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      \"tableSpec\": {\n       \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      \"expandArchive\": {\n       \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      \"syncSummary\": {\n       \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      \"lastSyncStart\": {\n       \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      \"lastSyncSuccess\": {\n       \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      \"lastSyncFailure\": {\n       \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      }\n     },\n     \"description\": \"est ex\",\n     \"labels\": [\n      \"est magna\",\n      \"velit consectetur incididunt\"\n     ]\n    }\n   ],\n   \"properties\": {},\n   \"linkedDatasets\": [\n    {\n     \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    {\n     \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    }\n   ]\n  }\n ],\n \"nextPageToken\": \"nulla\"\n}"
								},
								{
									"name": "Bad request",
									"originalRequest": {
										"method": "GET",
										"header": [
											{
												"description": "Added as a part of security scheme: oauth2",
												"key": "Authorization",
												"value": "<token>"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/user/projects/own?limit=adipisicing elit ullamco&next=adipisicing elit ullamco",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"user",
												"projects",
												"own"
											],
											"query": [
												{
													"key": "limit",
													"value": "adipisicing elit ullamco"
												},
												{
													"key": "next",
													"value": "adipisicing elit ullamco"
												}
											]
										}
									},
									"status": "Bad Request",
									"code": 400,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n \"code\": 1519430,\n \"message\": \"enim\",\n \"details\": \"do\"\n}"
								},
								{
									"name": "Unauthorized",
									"originalRequest": {
										"method": "GET",
										"header": [
											{
												"description": "Added as a part of security scheme: oauth2",
												"key": "Authorization",
												"value": "<token>"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/user/projects/own?limit=adipisicing elit ullamco&next=adipisicing elit ullamco",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"user",
												"projects",
												"own"
											],
											"query": [
												{
													"key": "limit",
													"value": "adipisicing elit ullamco"
												},
												{
													"key": "next",
													"value": "adipisicing elit ullamco"
												}
											]
										}
									},
									"status": "Unauthorized",
									"code": 401,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n \"code\": 1519430,\n \"message\": \"enim\",\n \"details\": \"do\"\n}"
								},
								{
									"name": "Forbidden",
									"originalRequest": {
										"method": "GET",
										"header": [
											{
												"description": "Added as a part of security scheme: oauth2",
												"key": "Authorization",
												"value": "<token>"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/user/projects/own?limit=adipisicing elit ullamco&next=adipisicing elit ullamco",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"user",
												"projects",
												"own"
											],
											"query": [
												{
													"key": "limit",
													"value": "adipisicing elit ullamco"
												},
												{
													"key": "next",
													"value": "adipisicing elit ullamco"
												}
											]
										}
									},
									"status": "Forbidden",
									"code": 403,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n \"code\": 1519430,\n \"message\": \"enim\",\n \"details\": \"do\"\n}"
								},
								{
									"name": "Not found",
									"originalRequest": {
										"method": "GET",
										"header": [
											{
												"description": "Added as a part of security scheme: oauth2",
												"key": "Authorization",
												"value": "<token>"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/user/projects/own?limit=adipisicing elit ullamco&next=adipisicing elit ullamco",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"user",
												"projects",
												"own"
											],
											"query": [
												{
													"key": "limit",
													"value": "adipisicing elit ullamco"
												},
												{
													"key": "next",
													"value": "adipisicing elit ullamco"
												}
											]
										}
									},
									"status": "Not Found",
									"code": 404,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n \"code\": 1519430,\n \"message\": \"enim\",\n \"details\": \"do\"\n}"
								},
								{
									"name": "Server error",
									"originalRequest": {
										"method": "GET",
										"header": [
											{
												"description": "Added as a part of security scheme: oauth2",
												"key": "Authorization",
												"value": "<token>"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/user/projects/own?limit=adipisicing elit ullamco&next=adipisicing elit ullamco",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"user",
												"projects",
												"own"
											],
											"query": [
												{
													"key": "limit",
													"value": "adipisicing elit ullamco"
												},
												{
													"key": "next",
													"value": "adipisicing elit ullamco"
												}
											]
										}
									},
									"status": "Internal Server Error",
									"code": 500,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n \"code\": 1519430,\n \"message\": \"enim\",\n \"details\": \"do\"\n}"
								}
							]
						}
					]
				},
				{
					"name": "webhooks",
					"item": [
						{
							"name": "datasets/{owner}/{id}",
							"item": [
								{
									"name": "Fetch a webhook subscription for a dataset.",
									"request": {
										"auth": {
											"type": "oauth2"
										},
										"method": "GET",
										"header": [],
										"url": {
											"raw": "{{baseUrl}}/user/webhooks/datasets/:owner/:id",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"user",
												"webhooks",
												"datasets",
												":owner",
												":id"
											],
											"variable": [
												{
													"key": "owner",
													"value": "adipisicing elit ullamco",
													"description": "(Required) "
												},
												{
													"key": "id",
													"value": "adipisicing elit ullamco",
													"description": "(Required) "
												}
											]
										}
									},
									"response": [
										{
											"name": "Webhook subscription retrieved successfully.",
											"originalRequest": {
												"method": "GET",
												"header": [
													{
														"description": "Added as a part of security scheme: oauth2",
														"key": "Authorization",
														"value": "<token>"
													}
												],
												"url": {
													"raw": "{{baseUrl}}/user/webhooks/datasets/:owner/:id",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"user",
														"webhooks",
														"datasets",
														":owner",
														":id"
													],
													"variable": [
														{
															"key": "owner"
														},
														{
															"key": "id"
														}
													]
												}
											},
											"status": "OK",
											"code": 200,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"body": "{\n \"events\": [\n  \"ALL\",\n  \"ALL\"\n ],\n \"user\": {\n  \"id\": \"id ad et laborum\"\n },\n \"dataset\": {\n  \"id\": \"proiden\",\n  \"owner\": \"in et ut\"\n },\n \"project\": {\n  \"id\": \"consequat\",\n  \"owner\": \"minim ea ex eiusmod\"\n }\n}"
										},
										{
											"name": "Bad request",
											"originalRequest": {
												"method": "GET",
												"header": [
													{
														"description": "Added as a part of security scheme: oauth2",
														"key": "Authorization",
														"value": "<token>"
													}
												],
												"url": {
													"raw": "{{baseUrl}}/user/webhooks/datasets/:owner/:id",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"user",
														"webhooks",
														"datasets",
														":owner",
														":id"
													],
													"variable": [
														{
															"key": "owner"
														},
														{
															"key": "id"
														}
													]
												}
											},
											"status": "Bad Request",
											"code": 400,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"body": "{\n \"code\": 1519430,\n \"message\": \"enim\",\n \"details\": \"do\"\n}"
										},
										{
											"name": "Unauthorized",
											"originalRequest": {
												"method": "GET",
												"header": [
													{
														"description": "Added as a part of security scheme: oauth2",
														"key": "Authorization",
														"value": "<token>"
													}
												],
												"url": {
													"raw": "{{baseUrl}}/user/webhooks/datasets/:owner/:id",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"user",
														"webhooks",
														"datasets",
														":owner",
														":id"
													],
													"variable": [
														{
															"key": "owner"
														},
														{
															"key": "id"
														}
													]
												}
											},
											"status": "Unauthorized",
											"code": 401,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"body": "{\n \"code\": 1519430,\n \"message\": \"enim\",\n \"details\": \"do\"\n}"
										},
										{
											"name": "Forbidden",
											"originalRequest": {
												"method": "GET",
												"header": [
													{
														"description": "Added as a part of security scheme: oauth2",
														"key": "Authorization",
														"value": "<token>"
													}
												],
												"url": {
													"raw": "{{baseUrl}}/user/webhooks/datasets/:owner/:id",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"user",
														"webhooks",
														"datasets",
														":owner",
														":id"
													],
													"variable": [
														{
															"key": "owner"
														},
														{
															"key": "id"
														}
													]
												}
											},
											"status": "Forbidden",
											"code": 403,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"body": "{\n \"code\": 1519430,\n \"message\": \"enim\",\n \"details\": \"do\"\n}"
										},
										{
											"name": "Not found",
											"originalRequest": {
												"method": "GET",
												"header": [
													{
														"description": "Added as a part of security scheme: oauth2",
														"key": "Authorization",
														"value": "<token>"
													}
												],
												"url": {
													"raw": "{{baseUrl}}/user/webhooks/datasets/:owner/:id",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"user",
														"webhooks",
														"datasets",
														":owner",
														":id"
													],
													"variable": [
														{
															"key": "owner"
														},
														{
															"key": "id"
														}
													]
												}
											},
											"status": "Not Found",
											"code": 404,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"body": "{\n \"code\": 1519430,\n \"message\": \"enim\",\n \"details\": \"do\"\n}"
										},
										{
											"name": "Server error",
											"originalRequest": {
												"method": "GET",
												"header": [
													{
														"description": "Added as a part of security scheme: oauth2",
														"key": "Authorization",
														"value": "<token>"
													}
												],
												"url": {
													"raw": "{{baseUrl}}/user/webhooks/datasets/:owner/:id",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"user",
														"webhooks",
														"datasets",
														":owner",
														":id"
													],
													"variable": [
														{
															"key": "owner"
														},
														{
															"key": "id"
														}
													]
												}
											},
											"status": "Internal Server Error",
											"code": 500,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"body": "{\n \"code\": 1519430,\n \"message\": \"enim\",\n \"details\": \"do\"\n}"
										}
									]
								},
								{
									"name": "Create a webhook subscription for a dataset including objects owned by it.",
									"request": {
										"auth": {
											"type": "oauth2"
										},
										"method": "PUT",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/json"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n    \"events\": [\n        \"ALL\"\n    ]\n}"
										},
										"url": {
											"raw": "{{baseUrl}}/user/webhooks/datasets/:owner/:id",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"user",
												"webhooks",
												"datasets",
												":owner",
												":id"
											],
											"variable": [
												{
													"key": "owner",
													"value": "adipisicing elit ullamco",
													"description": "(Required) "
												},
												{
													"key": "id",
													"value": "adipisicing elit ullamco",
													"description": "(Required) "
												}
											]
										}
									},
									"response": [
										{
											"name": "Webhook subscription created successfully.",
											"originalRequest": {
												"method": "PUT",
												"header": [
													{
														"description": "Added as a part of security scheme: oauth2",
														"key": "Authorization",
														"value": "<token>"
													}
												],
												"url": {
													"raw": "{{baseUrl}}/user/webhooks/datasets/:owner/:id",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"user",
														"webhooks",
														"datasets",
														":owner",
														":id"
													],
													"variable": [
														{
															"key": "owner"
														},
														{
															"key": "id"
														}
													]
												}
											},
											"status": "OK",
											"code": 200,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"body": "{\n \"message\": \"voluptate culpa nulla esse\"\n}"
										},
										{
											"name": "Bad request",
											"originalRequest": {
												"method": "PUT",
												"header": [
													{
														"description": "Added as a part of security scheme: oauth2",
														"key": "Authorization",
														"value": "<token>"
													}
												],
												"url": {
													"raw": "{{baseUrl}}/user/webhooks/datasets/:owner/:id",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"user",
														"webhooks",
														"datasets",
														":owner",
														":id"
													],
													"variable": [
														{
															"key": "owner"
														},
														{
															"key": "id"
														}
													]
												}
											},
											"status": "Bad Request",
											"code": 400,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"body": "{\n \"code\": 1519430,\n \"message\": \"enim\",\n \"details\": \"do\"\n}"
										},
										{
											"name": "Unauthorized",
											"originalRequest": {
												"method": "PUT",
												"header": [
													{
														"description": "Added as a part of security scheme: oauth2",
														"key": "Authorization",
														"value": "<token>"
													}
												],
												"url": {
													"raw": "{{baseUrl}}/user/webhooks/datasets/:owner/:id",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"user",
														"webhooks",
														"datasets",
														":owner",
														":id"
													],
													"variable": [
														{
															"key": "owner"
														},
														{
															"key": "id"
														}
													]
												}
											},
											"status": "Unauthorized",
											"code": 401,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"body": "{\n \"code\": 1519430,\n \"message\": \"enim\",\n \"details\": \"do\"\n}"
										},
										{
											"name": "Forbidden",
											"originalRequest": {
												"method": "PUT",
												"header": [
													{
														"description": "Added as a part of security scheme: oauth2",
														"key": "Authorization",
														"value": "<token>"
													}
												],
												"url": {
													"raw": "{{baseUrl}}/user/webhooks/datasets/:owner/:id",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"user",
														"webhooks",
														"datasets",
														":owner",
														":id"
													],
													"variable": [
														{
															"key": "owner"
														},
														{
															"key": "id"
														}
													]
												}
											},
											"status": "Forbidden",
											"code": 403,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"body": "{\n \"code\": 1519430,\n \"message\": \"enim\",\n \"details\": \"do\"\n}"
										},
										{
											"name": "Not found",
											"originalRequest": {
												"method": "PUT",
												"header": [
													{
														"description": "Added as a part of security scheme: oauth2",
														"key": "Authorization",
														"value": "<token>"
													}
												],
												"url": {
													"raw": "{{baseUrl}}/user/webhooks/datasets/:owner/:id",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"user",
														"webhooks",
														"datasets",
														":owner",
														":id"
													],
													"variable": [
														{
															"key": "owner"
														},
														{
															"key": "id"
														}
													]
												}
											},
											"status": "Not Found",
											"code": 404,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"body": "{\n \"code\": 1519430,\n \"message\": \"enim\",\n \"details\": \"do\"\n}"
										},
										{
											"name": "Bad request",
											"originalRequest": {
												"method": "PUT",
												"header": [
													{
														"description": "Added as a part of security scheme: oauth2",
														"key": "Authorization",
														"value": "<token>"
													}
												],
												"url": {
													"raw": "{{baseUrl}}/user/webhooks/datasets/:owner/:id",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"user",
														"webhooks",
														"datasets",
														":owner",
														":id"
													],
													"variable": [
														{
															"key": "owner"
														},
														{
															"key": "id"
														}
													]
												}
											},
											"status": "Unprocessable Entity (WebDAV) (RFC 4918)",
											"code": 422,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"body": "{\n \"code\": 1519430,\n \"message\": \"enim\",\n \"details\": \"do\"\n}"
										},
										{
											"name": "Server error",
											"originalRequest": {
												"method": "PUT",
												"header": [
													{
														"description": "Added as a part of security scheme: oauth2",
														"key": "Authorization",
														"value": "<token>"
													}
												],
												"url": {
													"raw": "{{baseUrl}}/user/webhooks/datasets/:owner/:id",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"user",
														"webhooks",
														"datasets",
														":owner",
														":id"
													],
													"variable": [
														{
															"key": "owner"
														},
														{
															"key": "id"
														}
													]
												}
											},
											"status": "Internal Server Error",
											"code": 500,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"body": "{\n \"code\": 1519430,\n \"message\": \"enim\",\n \"details\": \"do\"\n}"
										}
									]
								},
								{
									"name": "Delete a webhook subscription for a dataset.",
									"request": {
										"auth": {
											"type": "oauth2"
										},
										"method": "DELETE",
										"header": [],
										"url": {
											"raw": "{{baseUrl}}/user/webhooks/datasets/:owner/:id",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"user",
												"webhooks",
												"datasets",
												":owner",
												":id"
											],
											"variable": [
												{
													"key": "owner",
													"value": "adipisicing elit ullamco",
													"description": "(Required) "
												},
												{
													"key": "id",
													"value": "adipisicing elit ullamco",
													"description": "(Required) "
												}
											]
										}
									},
									"response": [
										{
											"name": "Webhook subscription deleted successfully.",
											"originalRequest": {
												"method": "DELETE",
												"header": [
													{
														"description": "Added as a part of security scheme: oauth2",
														"key": "Authorization",
														"value": "<token>"
													}
												],
												"url": {
													"raw": "{{baseUrl}}/user/webhooks/datasets/:owner/:id",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"user",
														"webhooks",
														"datasets",
														":owner",
														":id"
													],
													"variable": [
														{
															"key": "owner"
														},
														{
															"key": "id"
														}
													]
												}
											},
											"status": "OK",
											"code": 200,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"body": "{\n \"message\": \"voluptate culpa nulla esse\"\n}"
										},
										{
											"name": "Bad request",
											"originalRequest": {
												"method": "DELETE",
												"header": [
													{
														"description": "Added as a part of security scheme: oauth2",
														"key": "Authorization",
														"value": "<token>"
													}
												],
												"url": {
													"raw": "{{baseUrl}}/user/webhooks/datasets/:owner/:id",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"user",
														"webhooks",
														"datasets",
														":owner",
														":id"
													],
													"variable": [
														{
															"key": "owner"
														},
														{
															"key": "id"
														}
													]
												}
											},
											"status": "Bad Request",
											"code": 400,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"body": "{\n \"code\": 1519430,\n \"message\": \"enim\",\n \"details\": \"do\"\n}"
										},
										{
											"name": "Unauthorized",
											"originalRequest": {
												"method": "DELETE",
												"header": [
													{
														"description": "Added as a part of security scheme: oauth2",
														"key": "Authorization",
														"value": "<token>"
													}
												],
												"url": {
													"raw": "{{baseUrl}}/user/webhooks/datasets/:owner/:id",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"user",
														"webhooks",
														"datasets",
														":owner",
														":id"
													],
													"variable": [
														{
															"key": "owner"
														},
														{
															"key": "id"
														}
													]
												}
											},
											"status": "Unauthorized",
											"code": 401,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"body": "{\n \"code\": 1519430,\n \"message\": \"enim\",\n \"details\": \"do\"\n}"
										},
										{
											"name": "Forbidden",
											"originalRequest": {
												"method": "DELETE",
												"header": [
													{
														"description": "Added as a part of security scheme: oauth2",
														"key": "Authorization",
														"value": "<token>"
													}
												],
												"url": {
													"raw": "{{baseUrl}}/user/webhooks/datasets/:owner/:id",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"user",
														"webhooks",
														"datasets",
														":owner",
														":id"
													],
													"variable": [
														{
															"key": "owner"
														},
														{
															"key": "id"
														}
													]
												}
											},
											"status": "Forbidden",
											"code": 403,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"body": "{\n \"code\": 1519430,\n \"message\": \"enim\",\n \"details\": \"do\"\n}"
										},
										{
											"name": "Not found",
											"originalRequest": {
												"method": "DELETE",
												"header": [
													{
														"description": "Added as a part of security scheme: oauth2",
														"key": "Authorization",
														"value": "<token>"
													}
												],
												"url": {
													"raw": "{{baseUrl}}/user/webhooks/datasets/:owner/:id",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"user",
														"webhooks",
														"datasets",
														":owner",
														":id"
													],
													"variable": [
														{
															"key": "owner"
														},
														{
															"key": "id"
														}
													]
												}
											},
											"status": "Not Found",
											"code": 404,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"body": "{\n \"code\": 1519430,\n \"message\": \"enim\",\n \"details\": \"do\"\n}"
										},
										{
											"name": "Server error",
											"originalRequest": {
												"method": "DELETE",
												"header": [
													{
														"description": "Added as a part of security scheme: oauth2",
														"key": "Authorization",
														"value": "<token>"
													}
												],
												"url": {
													"raw": "{{baseUrl}}/user/webhooks/datasets/:owner/:id",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"user",
														"webhooks",
														"datasets",
														":owner",
														":id"
													],
													"variable": [
														{
															"key": "owner"
														},
														{
															"key": "id"
														}
													]
												}
											},
											"status": "Internal Server Error",
											"code": 500,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"body": "{\n \"code\": 1519430,\n \"message\": \"enim\",\n \"details\": \"do\"\n}"
										}
									]
								}
							]
						},
						{
							"name": "projects/{owner}/{id}",
							"item": [
								{
									"name": "Fetch a webhook subscription for a project.",
									"request": {
										"auth": {
											"type": "oauth2"
										},
										"method": "GET",
										"header": [],
										"url": {
											"raw": "{{baseUrl}}/user/webhooks/projects/:owner/:id",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"user",
												"webhooks",
												"projects",
												":owner",
												":id"
											],
											"variable": [
												{
													"key": "owner",
													"value": "adipisicing elit ullamco",
													"description": "(Required) "
												},
												{
													"key": "id",
													"value": "adipisicing elit ullamco",
													"description": "(Required) "
												}
											]
										}
									},
									"response": [
										{
											"name": "Webhook subscription retrieved successfully.",
											"originalRequest": {
												"method": "GET",
												"header": [
													{
														"description": "Added as a part of security scheme: oauth2",
														"key": "Authorization",
														"value": "<token>"
													}
												],
												"url": {
													"raw": "{{baseUrl}}/user/webhooks/projects/:owner/:id",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"user",
														"webhooks",
														"projects",
														":owner",
														":id"
													],
													"variable": [
														{
															"key": "owner"
														},
														{
															"key": "id"
														}
													]
												}
											},
											"status": "OK",
											"code": 200,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"body": "{\n \"events\": [\n  \"ALL\",\n  \"ALL\"\n ],\n \"user\": {\n  \"id\": \"ipsum aliqua eiusmod\"\n },\n \"dataset\": {\n  \"id\": \"consectetur eiusmod aliquip\",\n  \"owner\": \"elit enim reprehenderit\"\n },\n \"project\": {\n  \"id\": \"dolor inc\",\n  \"owner\": \"magna veniam elit labore\"\n }\n}"
										},
										{
											"name": "Bad request",
											"originalRequest": {
												"method": "GET",
												"header": [
													{
														"description": "Added as a part of security scheme: oauth2",
														"key": "Authorization",
														"value": "<token>"
													}
												],
												"url": {
													"raw": "{{baseUrl}}/user/webhooks/projects/:owner/:id",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"user",
														"webhooks",
														"projects",
														":owner",
														":id"
													],
													"variable": [
														{
															"key": "owner"
														},
														{
															"key": "id"
														}
													]
												}
											},
											"status": "Bad Request",
											"code": 400,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"body": "{\n \"code\": 1519430,\n \"message\": \"enim\",\n \"details\": \"do\"\n}"
										},
										{
											"name": "Unauthorized",
											"originalRequest": {
												"method": "GET",
												"header": [
													{
														"description": "Added as a part of security scheme: oauth2",
														"key": "Authorization",
														"value": "<token>"
													}
												],
												"url": {
													"raw": "{{baseUrl}}/user/webhooks/projects/:owner/:id",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"user",
														"webhooks",
														"projects",
														":owner",
														":id"
													],
													"variable": [
														{
															"key": "owner"
														},
														{
															"key": "id"
														}
													]
												}
											},
											"status": "Unauthorized",
											"code": 401,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"body": "{\n \"code\": 1519430,\n \"message\": \"enim\",\n \"details\": \"do\"\n}"
										},
										{
											"name": "Forbidden",
											"originalRequest": {
												"method": "GET",
												"header": [
													{
														"description": "Added as a part of security scheme: oauth2",
														"key": "Authorization",
														"value": "<token>"
													}
												],
												"url": {
													"raw": "{{baseUrl}}/user/webhooks/projects/:owner/:id",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"user",
														"webhooks",
														"projects",
														":owner",
														":id"
													],
													"variable": [
														{
															"key": "owner"
														},
														{
															"key": "id"
														}
													]
												}
											},
											"status": "Forbidden",
											"code": 403,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"body": "{\n \"code\": 1519430,\n \"message\": \"enim\",\n \"details\": \"do\"\n}"
										},
										{
											"name": "Not found",
											"originalRequest": {
												"method": "GET",
												"header": [
													{
														"description": "Added as a part of security scheme: oauth2",
														"key": "Authorization",
														"value": "<token>"
													}
												],
												"url": {
													"raw": "{{baseUrl}}/user/webhooks/projects/:owner/:id",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"user",
														"webhooks",
														"projects",
														":owner",
														":id"
													],
													"variable": [
														{
															"key": "owner"
														},
														{
															"key": "id"
														}
													]
												}
											},
											"status": "Not Found",
											"code": 404,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"body": "{\n \"code\": 1519430,\n \"message\": \"enim\",\n \"details\": \"do\"\n}"
										},
										{
											"name": "Server error",
											"originalRequest": {
												"method": "GET",
												"header": [
													{
														"description": "Added as a part of security scheme: oauth2",
														"key": "Authorization",
														"value": "<token>"
													}
												],
												"url": {
													"raw": "{{baseUrl}}/user/webhooks/projects/:owner/:id",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"user",
														"webhooks",
														"projects",
														":owner",
														":id"
													],
													"variable": [
														{
															"key": "owner"
														},
														{
															"key": "id"
														}
													]
												}
											},
											"status": "Internal Server Error",
											"code": 500,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"body": "{\n \"code\": 1519430,\n \"message\": \"enim\",\n \"details\": \"do\"\n}"
										}
									]
								},
								{
									"name": "Create a webhook subscription for a project including objects owned by it.",
									"request": {
										"auth": {
											"type": "oauth2"
										},
										"method": "PUT",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/json"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n    \"events\": [\n        \"ALL\"\n    ]\n}"
										},
										"url": {
											"raw": "{{baseUrl}}/user/webhooks/projects/:owner/:id",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"user",
												"webhooks",
												"projects",
												":owner",
												":id"
											],
											"variable": [
												{
													"key": "owner",
													"value": "adipisicing elit ullamco",
													"description": "(Required) "
												},
												{
													"key": "id",
													"value": "adipisicing elit ullamco",
													"description": "(Required) "
												}
											]
										}
									},
									"response": [
										{
											"name": "Webhook subscription created successfully.",
											"originalRequest": {
												"method": "PUT",
												"header": [
													{
														"description": "Added as a part of security scheme: oauth2",
														"key": "Authorization",
														"value": "<token>"
													}
												],
												"url": {
													"raw": "{{baseUrl}}/user/webhooks/projects/:owner/:id",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"user",
														"webhooks",
														"projects",
														":owner",
														":id"
													],
													"variable": [
														{
															"key": "owner"
														},
														{
															"key": "id"
														}
													]
												}
											},
											"status": "OK",
											"code": 200,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"body": "{\n \"message\": \"voluptate culpa nulla esse\"\n}"
										},
										{
											"name": "Bad request",
											"originalRequest": {
												"method": "PUT",
												"header": [
													{
														"description": "Added as a part of security scheme: oauth2",
														"key": "Authorization",
														"value": "<token>"
													}
												],
												"url": {
													"raw": "{{baseUrl}}/user/webhooks/projects/:owner/:id",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"user",
														"webhooks",
														"projects",
														":owner",
														":id"
													],
													"variable": [
														{
															"key": "owner"
														},
														{
															"key": "id"
														}
													]
												}
											},
											"status": "Bad Request",
											"code": 400,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"body": "{\n \"code\": 1519430,\n \"message\": \"enim\",\n \"details\": \"do\"\n}"
										},
										{
											"name": "Unauthorized",
											"originalRequest": {
												"method": "PUT",
												"header": [
													{
														"description": "Added as a part of security scheme: oauth2",
														"key": "Authorization",
														"value": "<token>"
													}
												],
												"url": {
													"raw": "{{baseUrl}}/user/webhooks/projects/:owner/:id",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"user",
														"webhooks",
														"projects",
														":owner",
														":id"
													],
													"variable": [
														{
															"key": "owner"
														},
														{
															"key": "id"
														}
													]
												}
											},
											"status": "Unauthorized",
											"code": 401,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"body": "{\n \"code\": 1519430,\n \"message\": \"enim\",\n \"details\": \"do\"\n}"
										},
										{
											"name": "Forbidden",
											"originalRequest": {
												"method": "PUT",
												"header": [
													{
														"description": "Added as a part of security scheme: oauth2",
														"key": "Authorization",
														"value": "<token>"
													}
												],
												"url": {
													"raw": "{{baseUrl}}/user/webhooks/projects/:owner/:id",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"user",
														"webhooks",
														"projects",
														":owner",
														":id"
													],
													"variable": [
														{
															"key": "owner"
														},
														{
															"key": "id"
														}
													]
												}
											},
											"status": "Forbidden",
											"code": 403,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"body": "{\n \"code\": 1519430,\n \"message\": \"enim\",\n \"details\": \"do\"\n}"
										},
										{
											"name": "Not found",
											"originalRequest": {
												"method": "PUT",
												"header": [
													{
														"description": "Added as a part of security scheme: oauth2",
														"key": "Authorization",
														"value": "<token>"
													}
												],
												"url": {
													"raw": "{{baseUrl}}/user/webhooks/projects/:owner/:id",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"user",
														"webhooks",
														"projects",
														":owner",
														":id"
													],
													"variable": [
														{
															"key": "owner"
														},
														{
															"key": "id"
														}
													]
												}
											},
											"status": "Not Found",
											"code": 404,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"body": "{\n \"code\": 1519430,\n \"message\": \"enim\",\n \"details\": \"do\"\n}"
										},
										{
											"name": "Bad request",
											"originalRequest": {
												"method": "PUT",
												"header": [
													{
														"description": "Added as a part of security scheme: oauth2",
														"key": "Authorization",
														"value": "<token>"
													}
												],
												"url": {
													"raw": "{{baseUrl}}/user/webhooks/projects/:owner/:id",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"user",
														"webhooks",
														"projects",
														":owner",
														":id"
													],
													"variable": [
														{
															"key": "owner"
														},
														{
															"key": "id"
														}
													]
												}
											},
											"status": "Unprocessable Entity (WebDAV) (RFC 4918)",
											"code": 422,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"body": "{\n \"code\": 1519430,\n \"message\": \"enim\",\n \"details\": \"do\"\n}"
										},
										{
											"name": "Server error",
											"originalRequest": {
												"method": "PUT",
												"header": [
													{
														"description": "Added as a part of security scheme: oauth2",
														"key": "Authorization",
														"value": "<token>"
													}
												],
												"url": {
													"raw": "{{baseUrl}}/user/webhooks/projects/:owner/:id",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"user",
														"webhooks",
														"projects",
														":owner",
														":id"
													],
													"variable": [
														{
															"key": "owner"
														},
														{
															"key": "id"
														}
													]
												}
											},
											"status": "Internal Server Error",
											"code": 500,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"body": "{\n \"code\": 1519430,\n \"message\": \"enim\",\n \"details\": \"do\"\n}"
										}
									]
								},
								{
									"name": "Delete a webhook subscription for a project.",
									"request": {
										"auth": {
											"type": "oauth2"
										},
										"method": "DELETE",
										"header": [],
										"url": {
											"raw": "{{baseUrl}}/user/webhooks/projects/:owner/:id",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"user",
												"webhooks",
												"projects",
												":owner",
												":id"
											],
											"variable": [
												{
													"key": "owner",
													"value": "adipisicing elit ullamco",
													"description": "(Required) "
												},
												{
													"key": "id",
													"value": "adipisicing elit ullamco",
													"description": "(Required) "
												}
											]
										}
									},
									"response": [
										{
											"name": "Webhook subscription deleted successfully.",
											"originalRequest": {
												"method": "DELETE",
												"header": [
													{
														"description": "Added as a part of security scheme: oauth2",
														"key": "Authorization",
														"value": "<token>"
													}
												],
												"url": {
													"raw": "{{baseUrl}}/user/webhooks/projects/:owner/:id",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"user",
														"webhooks",
														"projects",
														":owner",
														":id"
													],
													"variable": [
														{
															"key": "owner"
														},
														{
															"key": "id"
														}
													]
												}
											},
											"status": "OK",
											"code": 200,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"body": "{\n \"message\": \"voluptate culpa nulla esse\"\n}"
										},
										{
											"name": "Bad request",
											"originalRequest": {
												"method": "DELETE",
												"header": [
													{
														"description": "Added as a part of security scheme: oauth2",
														"key": "Authorization",
														"value": "<token>"
													}
												],
												"url": {
													"raw": "{{baseUrl}}/user/webhooks/projects/:owner/:id",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"user",
														"webhooks",
														"projects",
														":owner",
														":id"
													],
													"variable": [
														{
															"key": "owner"
														},
														{
															"key": "id"
														}
													]
												}
											},
											"status": "Bad Request",
											"code": 400,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"body": "{\n \"code\": 1519430,\n \"message\": \"enim\",\n \"details\": \"do\"\n}"
										},
										{
											"name": "Unauthorized",
											"originalRequest": {
												"method": "DELETE",
												"header": [
													{
														"description": "Added as a part of security scheme: oauth2",
														"key": "Authorization",
														"value": "<token>"
													}
												],
												"url": {
													"raw": "{{baseUrl}}/user/webhooks/projects/:owner/:id",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"user",
														"webhooks",
														"projects",
														":owner",
														":id"
													],
													"variable": [
														{
															"key": "owner"
														},
														{
															"key": "id"
														}
													]
												}
											},
											"status": "Unauthorized",
											"code": 401,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"body": "{\n \"code\": 1519430,\n \"message\": \"enim\",\n \"details\": \"do\"\n}"
										},
										{
											"name": "Forbidden",
											"originalRequest": {
												"method": "DELETE",
												"header": [
													{
														"description": "Added as a part of security scheme: oauth2",
														"key": "Authorization",
														"value": "<token>"
													}
												],
												"url": {
													"raw": "{{baseUrl}}/user/webhooks/projects/:owner/:id",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"user",
														"webhooks",
														"projects",
														":owner",
														":id"
													],
													"variable": [
														{
															"key": "owner"
														},
														{
															"key": "id"
														}
													]
												}
											},
											"status": "Forbidden",
											"code": 403,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"body": "{\n \"code\": 1519430,\n \"message\": \"enim\",\n \"details\": \"do\"\n}"
										},
										{
											"name": "Not found",
											"originalRequest": {
												"method": "DELETE",
												"header": [
													{
														"description": "Added as a part of security scheme: oauth2",
														"key": "Authorization",
														"value": "<token>"
													}
												],
												"url": {
													"raw": "{{baseUrl}}/user/webhooks/projects/:owner/:id",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"user",
														"webhooks",
														"projects",
														":owner",
														":id"
													],
													"variable": [
														{
															"key": "owner"
														},
														{
															"key": "id"
														}
													]
												}
											},
											"status": "Not Found",
											"code": 404,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"body": "{\n \"code\": 1519430,\n \"message\": \"enim\",\n \"details\": \"do\"\n}"
										},
										{
											"name": "Server error",
											"originalRequest": {
												"method": "DELETE",
												"header": [
													{
														"description": "Added as a part of security scheme: oauth2",
														"key": "Authorization",
														"value": "<token>"
													}
												],
												"url": {
													"raw": "{{baseUrl}}/user/webhooks/projects/:owner/:id",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"user",
														"webhooks",
														"projects",
														":owner",
														":id"
													],
													"variable": [
														{
															"key": "owner"
														},
														{
															"key": "id"
														}
													]
												}
											},
											"status": "Internal Server Error",
											"code": 500,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"body": "{\n \"code\": 1519430,\n \"message\": \"enim\",\n \"details\": \"do\"\n}"
										}
									]
								}
							]
						},
						{
							"name": "users/{account}",
							"item": [
								{
									"name": "Fetch a webhook subscription for a user account.",
									"request": {
										"auth": {
											"type": "oauth2"
										},
										"method": "GET",
										"header": [],
										"url": {
											"raw": "{{baseUrl}}/user/webhooks/users/:account",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"user",
												"webhooks",
												"users",
												":account"
											],
											"variable": [
												{
													"key": "account",
													"value": "adipisicing elit ullamco",
													"description": "(Required) "
												}
											]
										}
									},
									"response": [
										{
											"name": "Webhook subscription retrieved successfully.",
											"originalRequest": {
												"method": "GET",
												"header": [
													{
														"description": "Added as a part of security scheme: oauth2",
														"key": "Authorization",
														"value": "<token>"
													}
												],
												"url": {
													"raw": "{{baseUrl}}/user/webhooks/users/:account",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"user",
														"webhooks",
														"users",
														":account"
													],
													"variable": [
														{
															"key": "account"
														}
													]
												}
											},
											"status": "OK",
											"code": 200,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"body": "{\n \"events\": [\n  \"ALL\",\n  \"ALL\"\n ],\n \"user\": {\n  \"id\": \"ipsum aliqua eiusmod\"\n },\n \"dataset\": {\n  \"id\": \"consectetur eiusmod aliquip\",\n  \"owner\": \"elit enim reprehenderit\"\n },\n \"project\": {\n  \"id\": \"dolor inc\",\n  \"owner\": \"magna veniam elit labore\"\n }\n}"
										},
										{
											"name": "Bad request",
											"originalRequest": {
												"method": "GET",
												"header": [
													{
														"description": "Added as a part of security scheme: oauth2",
														"key": "Authorization",
														"value": "<token>"
													}
												],
												"url": {
													"raw": "{{baseUrl}}/user/webhooks/users/:account",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"user",
														"webhooks",
														"users",
														":account"
													],
													"variable": [
														{
															"key": "account"
														}
													]
												}
											},
											"status": "Bad Request",
											"code": 400,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"body": "{\n \"code\": 1519430,\n \"message\": \"enim\",\n \"details\": \"do\"\n}"
										},
										{
											"name": "Unauthorized",
											"originalRequest": {
												"method": "GET",
												"header": [
													{
														"description": "Added as a part of security scheme: oauth2",
														"key": "Authorization",
														"value": "<token>"
													}
												],
												"url": {
													"raw": "{{baseUrl}}/user/webhooks/users/:account",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"user",
														"webhooks",
														"users",
														":account"
													],
													"variable": [
														{
															"key": "account"
														}
													]
												}
											},
											"status": "Unauthorized",
											"code": 401,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"body": "{\n \"code\": 1519430,\n \"message\": \"enim\",\n \"details\": \"do\"\n}"
										},
										{
											"name": "Forbidden",
											"originalRequest": {
												"method": "GET",
												"header": [
													{
														"description": "Added as a part of security scheme: oauth2",
														"key": "Authorization",
														"value": "<token>"
													}
												],
												"url": {
													"raw": "{{baseUrl}}/user/webhooks/users/:account",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"user",
														"webhooks",
														"users",
														":account"
													],
													"variable": [
														{
															"key": "account"
														}
													]
												}
											},
											"status": "Forbidden",
											"code": 403,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"body": "{\n \"code\": 1519430,\n \"message\": \"enim\",\n \"details\": \"do\"\n}"
										},
										{
											"name": "Not found",
											"originalRequest": {
												"method": "GET",
												"header": [
													{
														"description": "Added as a part of security scheme: oauth2",
														"key": "Authorization",
														"value": "<token>"
													}
												],
												"url": {
													"raw": "{{baseUrl}}/user/webhooks/users/:account",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"user",
														"webhooks",
														"users",
														":account"
													],
													"variable": [
														{
															"key": "account"
														}
													]
												}
											},
											"status": "Not Found",
											"code": 404,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"body": "{\n \"code\": 1519430,\n \"message\": \"enim\",\n \"details\": \"do\"\n}"
										},
										{
											"name": "Server error",
											"originalRequest": {
												"method": "GET",
												"header": [
													{
														"description": "Added as a part of security scheme: oauth2",
														"key": "Authorization",
														"value": "<token>"
													}
												],
												"url": {
													"raw": "{{baseUrl}}/user/webhooks/users/:account",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"user",
														"webhooks",
														"users",
														":account"
													],
													"variable": [
														{
															"key": "account"
														}
													]
												}
											},
											"status": "Internal Server Error",
											"code": 500,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"body": "{\n \"code\": 1519430,\n \"message\": \"enim\",\n \"details\": \"do\"\n}"
										}
									]
								},
								{
									"name": "Create a webhook subscription for a user account including objects owned by it.",
									"request": {
										"auth": {
											"type": "oauth2"
										},
										"method": "PUT",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/json"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n    \"events\": [\n        \"ALL\"\n    ]\n}"
										},
										"url": {
											"raw": "{{baseUrl}}/user/webhooks/users/:account",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"user",
												"webhooks",
												"users",
												":account"
											],
											"variable": [
												{
													"key": "account",
													"value": "adipisicing elit ullamco",
													"description": "(Required) "
												}
											]
										}
									},
									"response": [
										{
											"name": "Webhook subscription created successfully.",
											"originalRequest": {
												"method": "PUT",
												"header": [
													{
														"description": "Added as a part of security scheme: oauth2",
														"key": "Authorization",
														"value": "<token>"
													}
												],
												"url": {
													"raw": "{{baseUrl}}/user/webhooks/users/:account",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"user",
														"webhooks",
														"users",
														":account"
													],
													"variable": [
														{
															"key": "account"
														}
													]
												}
											},
											"status": "OK",
											"code": 200,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"body": "{\n \"message\": \"voluptate culpa nulla esse\"\n}"
										},
										{
											"name": "Bad request",
											"originalRequest": {
												"method": "PUT",
												"header": [
													{
														"description": "Added as a part of security scheme: oauth2",
														"key": "Authorization",
														"value": "<token>"
													}
												],
												"url": {
													"raw": "{{baseUrl}}/user/webhooks/users/:account",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"user",
														"webhooks",
														"users",
														":account"
													],
													"variable": [
														{
															"key": "account"
														}
													]
												}
											},
											"status": "Bad Request",
											"code": 400,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"body": "{\n \"code\": 1519430,\n \"message\": \"enim\",\n \"details\": \"do\"\n}"
										},
										{
											"name": "Unauthorized",
											"originalRequest": {
												"method": "PUT",
												"header": [
													{
														"description": "Added as a part of security scheme: oauth2",
														"key": "Authorization",
														"value": "<token>"
													}
												],
												"url": {
													"raw": "{{baseUrl}}/user/webhooks/users/:account",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"user",
														"webhooks",
														"users",
														":account"
													],
													"variable": [
														{
															"key": "account"
														}
													]
												}
											},
											"status": "Unauthorized",
											"code": 401,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"body": "{\n \"code\": 1519430,\n \"message\": \"enim\",\n \"details\": \"do\"\n}"
										},
										{
											"name": "Forbidden",
											"originalRequest": {
												"method": "PUT",
												"header": [
													{
														"description": "Added as a part of security scheme: oauth2",
														"key": "Authorization",
														"value": "<token>"
													}
												],
												"url": {
													"raw": "{{baseUrl}}/user/webhooks/users/:account",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"user",
														"webhooks",
														"users",
														":account"
													],
													"variable": [
														{
															"key": "account"
														}
													]
												}
											},
											"status": "Forbidden",
											"code": 403,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"body": "{\n \"code\": 1519430,\n \"message\": \"enim\",\n \"details\": \"do\"\n}"
										},
										{
											"name": "Not found",
											"originalRequest": {
												"method": "PUT",
												"header": [
													{
														"description": "Added as a part of security scheme: oauth2",
														"key": "Authorization",
														"value": "<token>"
													}
												],
												"url": {
													"raw": "{{baseUrl}}/user/webhooks/users/:account",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"user",
														"webhooks",
														"users",
														":account"
													],
													"variable": [
														{
															"key": "account"
														}
													]
												}
											},
											"status": "Not Found",
											"code": 404,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"body": "{\n \"code\": 1519430,\n \"message\": \"enim\",\n \"details\": \"do\"\n}"
										},
										{
											"name": "Bad request",
											"originalRequest": {
												"method": "PUT",
												"header": [
													{
														"description": "Added as a part of security scheme: oauth2",
														"key": "Authorization",
														"value": "<token>"
													}
												],
												"url": {
													"raw": "{{baseUrl}}/user/webhooks/users/:account",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"user",
														"webhooks",
														"users",
														":account"
													],
													"variable": [
														{
															"key": "account"
														}
													]
												}
											},
											"status": "Unprocessable Entity (WebDAV) (RFC 4918)",
											"code": 422,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"body": "{\n \"code\": 1519430,\n \"message\": \"enim\",\n \"details\": \"do\"\n}"
										},
										{
											"name": "Server error",
											"originalRequest": {
												"method": "PUT",
												"header": [
													{
														"description": "Added as a part of security scheme: oauth2",
														"key": "Authorization",
														"value": "<token>"
													}
												],
												"url": {
													"raw": "{{baseUrl}}/user/webhooks/users/:account",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"user",
														"webhooks",
														"users",
														":account"
													],
													"variable": [
														{
															"key": "account"
														}
													]
												}
											},
											"status": "Internal Server Error",
											"code": 500,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"body": "{\n \"code\": 1519430,\n \"message\": \"enim\",\n \"details\": \"do\"\n}"
										}
									]
								},
								{
									"name": "Delete a webhook subscription for a user account.",
									"request": {
										"auth": {
											"type": "oauth2"
										},
										"method": "DELETE",
										"header": [],
										"url": {
											"raw": "{{baseUrl}}/user/webhooks/users/:account",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"user",
												"webhooks",
												"users",
												":account"
											],
											"variable": [
												{
													"key": "account",
													"value": "adipisicing elit ullamco",
													"description": "(Required) "
												}
											]
										}
									},
									"response": [
										{
											"name": "Webhook subscription deleted successfully.",
											"originalRequest": {
												"method": "DELETE",
												"header": [
													{
														"description": "Added as a part of security scheme: oauth2",
														"key": "Authorization",
														"value": "<token>"
													}
												],
												"url": {
													"raw": "{{baseUrl}}/user/webhooks/users/:account",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"user",
														"webhooks",
														"users",
														":account"
													],
													"variable": [
														{
															"key": "account"
														}
													]
												}
											},
											"status": "OK",
											"code": 200,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"body": "{\n \"message\": \"voluptate culpa nulla esse\"\n}"
										},
										{
											"name": "Bad request",
											"originalRequest": {
												"method": "DELETE",
												"header": [
													{
														"description": "Added as a part of security scheme: oauth2",
														"key": "Authorization",
														"value": "<token>"
													}
												],
												"url": {
													"raw": "{{baseUrl}}/user/webhooks/users/:account",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"user",
														"webhooks",
														"users",
														":account"
													],
													"variable": [
														{
															"key": "account"
														}
													]
												}
											},
											"status": "Bad Request",
											"code": 400,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"body": "{\n \"code\": 1519430,\n \"message\": \"enim\",\n \"details\": \"do\"\n}"
										},
										{
											"name": "Unauthorized",
											"originalRequest": {
												"method": "DELETE",
												"header": [
													{
														"description": "Added as a part of security scheme: oauth2",
														"key": "Authorization",
														"value": "<token>"
													}
												],
												"url": {
													"raw": "{{baseUrl}}/user/webhooks/users/:account",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"user",
														"webhooks",
														"users",
														":account"
													],
													"variable": [
														{
															"key": "account"
														}
													]
												}
											},
											"status": "Unauthorized",
											"code": 401,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"body": "{\n \"code\": 1519430,\n \"message\": \"enim\",\n \"details\": \"do\"\n}"
										},
										{
											"name": "Forbidden",
											"originalRequest": {
												"method": "DELETE",
												"header": [
													{
														"description": "Added as a part of security scheme: oauth2",
														"key": "Authorization",
														"value": "<token>"
													}
												],
												"url": {
													"raw": "{{baseUrl}}/user/webhooks/users/:account",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"user",
														"webhooks",
														"users",
														":account"
													],
													"variable": [
														{
															"key": "account"
														}
													]
												}
											},
											"status": "Forbidden",
											"code": 403,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"body": "{\n \"code\": 1519430,\n \"message\": \"enim\",\n \"details\": \"do\"\n}"
										},
										{
											"name": "Not found",
											"originalRequest": {
												"method": "DELETE",
												"header": [
													{
														"description": "Added as a part of security scheme: oauth2",
														"key": "Authorization",
														"value": "<token>"
													}
												],
												"url": {
													"raw": "{{baseUrl}}/user/webhooks/users/:account",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"user",
														"webhooks",
														"users",
														":account"
													],
													"variable": [
														{
															"key": "account"
														}
													]
												}
											},
											"status": "Not Found",
											"code": 404,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"body": "{\n \"code\": 1519430,\n \"message\": \"enim\",\n \"details\": \"do\"\n}"
										},
										{
											"name": "Server error",
											"originalRequest": {
												"method": "DELETE",
												"header": [
													{
														"description": "Added as a part of security scheme: oauth2",
														"key": "Authorization",
														"value": "<token>"
													}
												],
												"url": {
													"raw": "{{baseUrl}}/user/webhooks/users/:account",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"user",
														"webhooks",
														"users",
														":account"
													],
													"variable": [
														{
															"key": "account"
														}
													]
												}
											},
											"status": "Internal Server Error",
											"code": 500,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"body": "{\n \"code\": 1519430,\n \"message\": \"enim\",\n \"details\": \"do\"\n}"
										}
									]
								}
							]
						},
						{
							"name": "Return existing webhook subscriptions.",
							"request": {
								"auth": {
									"type": "oauth2"
								},
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{baseUrl}}/user/webhooks?limit=adipisicing elit ullamco&next=adipisicing elit ullamco",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"user",
										"webhooks"
									],
									"query": [
										{
											"key": "limit",
											"value": "adipisicing elit ullamco"
										},
										{
											"key": "next",
											"value": "adipisicing elit ullamco"
										}
									]
								}
							},
							"response": [
								{
									"name": "Webhook subscriptions returned successfully.",
									"originalRequest": {
										"method": "GET",
										"header": [
											{
												"description": "Added as a part of security scheme: oauth2",
												"key": "Authorization",
												"value": "<token>"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/user/webhooks?limit=adipisicing elit ullamco&next=adipisicing elit ullamco",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"user",
												"webhooks"
											],
											"query": [
												{
													"key": "limit",
													"value": "adipisicing elit ullamco"
												},
												{
													"key": "next",
													"value": "adipisicing elit ullamco"
												}
											]
										}
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n \"count\": 77440247,\n \"records\": [\n  {\n   \"events\": [\n    \"ALL\",\n    \"ALL\"\n   ],\n   \"dataset\": {\n    \"id\": {\n     \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    \"owner\": {\n     \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    }\n   },\n   \"project\": {\n    \"id\": {\n     \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    \"owner\": {\n     \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    }\n   },\n   \"user\": {\n    \"id\": {\n     \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    }\n   },\n   \"links\": {\n    \"api\": {\n     \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    }\n   }\n  },\n  {\n   \"events\": [\n    \"ALL\",\n    \"ALL\"\n   ],\n   \"dataset\": {\n    \"id\": {\n     \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    \"owner\": {\n     \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    }\n   },\n   \"project\": {\n    \"id\": {\n     \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    \"owner\": {\n     \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    }\n   },\n   \"user\": {\n    \"id\": {\n     \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    }\n   },\n   \"links\": {\n    \"api\": {\n     \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    }\n   }\n  }\n ],\n \"nextPageToken\": \"qui sint\"\n}"
								},
								{
									"name": "Bad request",
									"originalRequest": {
										"method": "GET",
										"header": [
											{
												"description": "Added as a part of security scheme: oauth2",
												"key": "Authorization",
												"value": "<token>"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/user/webhooks?limit=adipisicing elit ullamco&next=adipisicing elit ullamco",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"user",
												"webhooks"
											],
											"query": [
												{
													"key": "limit",
													"value": "adipisicing elit ullamco"
												},
												{
													"key": "next",
													"value": "adipisicing elit ullamco"
												}
											]
										}
									},
									"status": "Bad Request",
									"code": 400,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n \"code\": 1519430,\n \"message\": \"enim\",\n \"details\": \"do\"\n}"
								},
								{
									"name": "Unauthorized",
									"originalRequest": {
										"method": "GET",
										"header": [
											{
												"description": "Added as a part of security scheme: oauth2",
												"key": "Authorization",
												"value": "<token>"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/user/webhooks?limit=adipisicing elit ullamco&next=adipisicing elit ullamco",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"user",
												"webhooks"
											],
											"query": [
												{
													"key": "limit",
													"value": "adipisicing elit ullamco"
												},
												{
													"key": "next",
													"value": "adipisicing elit ullamco"
												}
											]
										}
									},
									"status": "Unauthorized",
									"code": 401,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n \"code\": 1519430,\n \"message\": \"enim\",\n \"details\": \"do\"\n}"
								},
								{
									"name": "Forbidden",
									"originalRequest": {
										"method": "GET",
										"header": [
											{
												"description": "Added as a part of security scheme: oauth2",
												"key": "Authorization",
												"value": "<token>"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/user/webhooks?limit=adipisicing elit ullamco&next=adipisicing elit ullamco",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"user",
												"webhooks"
											],
											"query": [
												{
													"key": "limit",
													"value": "adipisicing elit ullamco"
												},
												{
													"key": "next",
													"value": "adipisicing elit ullamco"
												}
											]
										}
									},
									"status": "Forbidden",
									"code": 403,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n \"code\": 1519430,\n \"message\": \"enim\",\n \"details\": \"do\"\n}"
								},
								{
									"name": "Server error",
									"originalRequest": {
										"method": "GET",
										"header": [
											{
												"description": "Added as a part of security scheme: oauth2",
												"key": "Authorization",
												"value": "<token>"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/user/webhooks?limit=adipisicing elit ullamco&next=adipisicing elit ullamco",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"user",
												"webhooks"
											],
											"query": [
												{
													"key": "limit",
													"value": "adipisicing elit ullamco"
												},
												{
													"key": "next",
													"value": "adipisicing elit ullamco"
												}
											]
										}
									},
									"status": "Internal Server Error",
									"code": 500,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n \"code\": 1519430,\n \"message\": \"enim\",\n \"details\": \"do\"\n}"
								}
							]
						}
					]
				},
				{
					"name": "Get user data.",
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{readWrite}}",
									"type": "string"
								}
							]
						},
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{baseUrl}}/user",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"user"
							]
						}
					},
					"response": [
						{
							"name": "User data returned.",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"description": "Added as a part of security scheme: oauth2",
										"key": "Authorization",
										"value": "<token>"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/user",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"user"
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n \"created\": \"in irure\",\n \"id\": \"mollit aliqua consectetur laboris\",\n \"updated\": \"aliqua in consequat\",\n \"avatarUrl\": \"eu qui Ut\",\n \"displayName\": \"ip\"\n}"
						},
						{
							"name": "Unauthorized",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"description": "Added as a part of security scheme: oauth2",
										"key": "Authorization",
										"value": "<token>"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/user",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"user"
									]
								}
							},
							"status": "Unauthorized",
							"code": 401,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n \"code\": 1519430,\n \"message\": \"enim\",\n \"details\": \"do\"\n}"
						},
						{
							"name": "Forbidden",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"description": "Added as a part of security scheme: oauth2",
										"key": "Authorization",
										"value": "<token>"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/user",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"user"
									]
								}
							},
							"status": "Forbidden",
							"code": 403,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n \"code\": 1519430,\n \"message\": \"enim\",\n \"details\": \"do\"\n}"
						},
						{
							"name": "Not found",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"description": "Added as a part of security scheme: oauth2",
										"key": "Authorization",
										"value": "<token>"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/user",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"user"
									]
								}
							},
							"status": "Not Found",
							"code": 404,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n \"code\": 1519430,\n \"message\": \"enim\",\n \"details\": \"do\"\n}"
						},
						{
							"name": "Server error",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"description": "Added as a part of security scheme: oauth2",
										"key": "Authorization",
										"value": "<token>"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/user",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"user"
									]
								}
							},
							"status": "Internal Server Error",
							"code": 500,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n \"code\": 1519430,\n \"message\": \"enim\",\n \"details\": \"do\"\n}"
						}
					]
				},
				{
					"name": "Fetch organizations to which the requesting user is a member",
					"request": {
						"auth": {
							"type": "oauth2"
						},
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{baseUrl}}/user/organizations?limit=adipisicing elit ullamco&next=adipisicing elit ullamco",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"user",
								"organizations"
							],
							"query": [
								{
									"key": "limit",
									"value": "adipisicing elit ullamco"
								},
								{
									"key": "next",
									"value": "adipisicing elit ullamco"
								}
							]
						}
					},
					"response": [
						{
							"name": "successful operation",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"description": "Added as a part of security scheme: oauth2",
										"key": "Authorization",
										"value": "<token>"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/user/organizations?limit=adipisicing elit ullamco&next=adipisicing elit ullamco",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"user",
										"organizations"
									],
									"query": [
										{
											"key": "limit",
											"value": "adipisicing elit ullamco"
										},
										{
											"key": "next",
											"value": "adipisicing elit ullamco"
										}
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n \"count\": 74525606,\n \"records\": [\n  {\n   \"created\": \"nulla\",\n   \"id\": \"non sint officia aliquip\",\n   \"updated\": \"dolor\",\n   \"avatarUrl\": \"dolor exercitation cupidatat\",\n   \"displayName\": \"minim dolore\"\n  },\n  {\n   \"created\": \"et c\",\n   \"id\": \"enim amet voluptate occaec\",\n   \"updated\": \"qui irure sint\",\n   \"avatarUrl\": \"pariatur eiusmod\",\n   \"displayName\": \"sed fugiat nulla\"\n  }\n ],\n \"nextPageToken\": \"sint\"\n}"
						},
						{
							"name": "Bad request",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"description": "Added as a part of security scheme: oauth2",
										"key": "Authorization",
										"value": "<token>"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/user/organizations?limit=adipisicing elit ullamco&next=adipisicing elit ullamco",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"user",
										"organizations"
									],
									"query": [
										{
											"key": "limit",
											"value": "adipisicing elit ullamco"
										},
										{
											"key": "next",
											"value": "adipisicing elit ullamco"
										}
									]
								}
							},
							"status": "Bad Request",
							"code": 400,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n \"code\": 1519430,\n \"message\": \"enim\",\n \"details\": \"do\"\n}"
						},
						{
							"name": "Unauthorized",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"description": "Added as a part of security scheme: oauth2",
										"key": "Authorization",
										"value": "<token>"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/user/organizations?limit=adipisicing elit ullamco&next=adipisicing elit ullamco",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"user",
										"organizations"
									],
									"query": [
										{
											"key": "limit",
											"value": "adipisicing elit ullamco"
										},
										{
											"key": "next",
											"value": "adipisicing elit ullamco"
										}
									]
								}
							},
							"status": "Unauthorized",
							"code": 401,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n \"code\": 1519430,\n \"message\": \"enim\",\n \"details\": \"do\"\n}"
						},
						{
							"name": "Forbidden",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"description": "Added as a part of security scheme: oauth2",
										"key": "Authorization",
										"value": "<token>"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/user/organizations?limit=adipisicing elit ullamco&next=adipisicing elit ullamco",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"user",
										"organizations"
									],
									"query": [
										{
											"key": "limit",
											"value": "adipisicing elit ullamco"
										},
										{
											"key": "next",
											"value": "adipisicing elit ullamco"
										}
									]
								}
							},
							"status": "Forbidden",
							"code": 403,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n \"code\": 1519430,\n \"message\": \"enim\",\n \"details\": \"do\"\n}"
						},
						{
							"name": "Not found",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"description": "Added as a part of security scheme: oauth2",
										"key": "Authorization",
										"value": "<token>"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/user/organizations?limit=adipisicing elit ullamco&next=adipisicing elit ullamco",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"user",
										"organizations"
									],
									"query": [
										{
											"key": "limit",
											"value": "adipisicing elit ullamco"
										},
										{
											"key": "next",
											"value": "adipisicing elit ullamco"
										}
									]
								}
							},
							"status": "Not Found",
							"code": 404,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n \"code\": 1519430,\n \"message\": \"enim\",\n \"details\": \"do\"\n}"
						},
						{
							"name": "Server error",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"description": "Added as a part of security scheme: oauth2",
										"key": "Authorization",
										"value": "<token>"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/user/organizations?limit=adipisicing elit ullamco&next=adipisicing elit ullamco",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"user",
										"organizations"
									],
									"query": [
										{
											"key": "limit",
											"value": "adipisicing elit ullamco"
										},
										{
											"key": "next",
											"value": "adipisicing elit ullamco"
										}
									]
								}
							},
							"status": "Internal Server Error",
							"code": 500,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n \"code\": 1519430,\n \"message\": \"enim\",\n \"details\": \"do\"\n}"
						}
					]
				}
			]
		},
		{
			"name": "Cancel a query",
			"request": {
				"auth": {
					"type": "bearer",
					"bearer": [
						{
							"key": "token",
							"value": "{{readWrite}}",
							"type": "string"
						}
					]
				},
				"method": "POST",
				"header": [],
				"url": {
					"raw": "{{baseUrl}}/cancel?queryruntoken=123",
					"host": [
						"{{baseUrl}}"
					],
					"path": [
						"cancel"
					],
					"query": [
						{
							"key": "queryruntoken",
							"value": "123"
						}
					]
				}
			},
			"response": [
				{
					"name": "Bad Request",
					"originalRequest": {
						"method": "POST",
						"header": [
							{
								"description": "Added as a part of security scheme: oauth2",
								"key": "Authorization",
								"value": "<token>"
							}
						],
						"url": {
							"raw": "{{baseUrl}}/cancel?queryruntoken=adipisicing elit ullamco",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"cancel"
							],
							"query": [
								{
									"key": "queryruntoken",
									"value": "adipisicing elit ullamco"
								}
							]
						}
					},
					"status": "Bad Request",
					"code": 400,
					"_postman_previewlanguage": "text",
					"header": [
						{
							"key": "Content-Type",
							"value": "*/*"
						}
					],
					"cookie": [],
					"body": ""
				},
				{
					"name": "Not found",
					"originalRequest": {
						"method": "POST",
						"header": [
							{
								"description": "Added as a part of security scheme: oauth2",
								"key": "Authorization",
								"value": "<token>"
							}
						],
						"url": {
							"raw": "{{baseUrl}}/cancel?queryruntoken=adipisicing elit ullamco",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"cancel"
							],
							"query": [
								{
									"key": "queryruntoken",
									"value": "adipisicing elit ullamco"
								}
							]
						}
					},
					"status": "Not Found",
					"code": 404,
					"_postman_previewlanguage": "text",
					"header": [
						{
							"key": "Content-Type",
							"value": "*/*"
						}
					],
					"cookie": [],
					"body": ""
				}
			]
		},
		{
			"name": "SPARQL DESCRIBE query",
			"request": {
				"auth": {
					"type": "bearer",
					"bearer": [
						{
							"key": "token",
							"value": "{{admin}}",
							"type": "string"
						}
					]
				},
				"method": "GET",
				"header": [],
				"url": {
					"raw": "{{baseUrl}}/describe?iri=https://VEXsQkJmEKNzFZrzGi.tyyWkRGo8vUziZp0hdGKebSlG&queryruntoken=123&namespace=adipisicing elit ullamco",
					"host": [
						"{{baseUrl}}"
					],
					"path": [
						"describe"
					],
					"query": [
						{
							"key": "iri",
							"value": "https://VEXsQkJmEKNzFZrzGi.tyyWkRGo8vUziZp0hdGKebSlG"
						},
						{
							"key": "queryruntoken",
							"value": "123",
							"description": "Query token to use with cancel"
						},
						{
							"key": "namespace",
							"value": "adipisicing elit ullamco"
						}
					]
				},
				"description": "This endpoint executes a SPARQL DESCRIBE query, given an IRI.\n."
			},
			"response": [
				{
					"name": "The request has succeeded.",
					"originalRequest": {
						"method": "GET",
						"header": [
							{
								"description": "Added as a part of security scheme: oauth2",
								"key": "Authorization",
								"value": "<token>"
							}
						],
						"url": {
							"raw": "{{baseUrl}}/describe?iri=https://VEXsQkJmEKNzFZrzGi.tyyWkRGo8vUziZp0hdGKebSlG&queryruntoken=adipisicing elit ullamco&namespace=adipisicing elit ullamco",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"describe"
							],
							"query": [
								{
									"key": "iri",
									"value": "https://VEXsQkJmEKNzFZrzGi.tyyWkRGo8vUziZp0hdGKebSlG"
								},
								{
									"key": "queryruntoken",
									"value": "adipisicing elit ullamco"
								},
								{
									"key": "namespace",
									"value": "adipisicing elit ullamco"
								}
							]
						}
					},
					"status": "OK",
					"code": 200,
					"_postman_previewlanguage": "text",
					"header": [
						{
							"key": "Content-Type",
							"value": "text/plain"
						}
					],
					"cookie": [],
					"body": ""
				},
				{
					"name": "Bad request",
					"originalRequest": {
						"method": "GET",
						"header": [
							{
								"description": "Added as a part of security scheme: oauth2",
								"key": "Authorization",
								"value": "<token>"
							}
						],
						"url": {
							"raw": "{{baseUrl}}/describe?iri=https://VEXsQkJmEKNzFZrzGi.tyyWkRGo8vUziZp0hdGKebSlG&queryruntoken=adipisicing elit ullamco&namespace=adipisicing elit ullamco",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"describe"
							],
							"query": [
								{
									"key": "iri",
									"value": "https://VEXsQkJmEKNzFZrzGi.tyyWkRGo8vUziZp0hdGKebSlG"
								},
								{
									"key": "queryruntoken",
									"value": "adipisicing elit ullamco"
								},
								{
									"key": "namespace",
									"value": "adipisicing elit ullamco"
								}
							]
						}
					},
					"status": "Bad Request",
					"code": 400,
					"_postman_previewlanguage": "json",
					"header": [
						{
							"key": "Content-Type",
							"value": "application/rdf+json"
						}
					],
					"cookie": [],
					"body": "{\n \"code\": 1519430,\n \"message\": \"enim\",\n \"details\": \"do\"\n}"
				},
				{
					"name": "Unauthorized",
					"originalRequest": {
						"method": "GET",
						"header": [
							{
								"description": "Added as a part of security scheme: oauth2",
								"key": "Authorization",
								"value": "<token>"
							}
						],
						"url": {
							"raw": "{{baseUrl}}/describe?iri=https://VEXsQkJmEKNzFZrzGi.tyyWkRGo8vUziZp0hdGKebSlG&queryruntoken=adipisicing elit ullamco&namespace=adipisicing elit ullamco",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"describe"
							],
							"query": [
								{
									"key": "iri",
									"value": "https://VEXsQkJmEKNzFZrzGi.tyyWkRGo8vUziZp0hdGKebSlG"
								},
								{
									"key": "queryruntoken",
									"value": "adipisicing elit ullamco"
								},
								{
									"key": "namespace",
									"value": "adipisicing elit ullamco"
								}
							]
						}
					},
					"status": "Unauthorized",
					"code": 401,
					"_postman_previewlanguage": "json",
					"header": [
						{
							"key": "Content-Type",
							"value": "application/rdf+json"
						}
					],
					"cookie": [],
					"body": "{\n \"code\": 1519430,\n \"message\": \"enim\",\n \"details\": \"do\"\n}"
				},
				{
					"name": "Forbidden",
					"originalRequest": {
						"method": "GET",
						"header": [
							{
								"description": "Added as a part of security scheme: oauth2",
								"key": "Authorization",
								"value": "<token>"
							}
						],
						"url": {
							"raw": "{{baseUrl}}/describe?iri=https://VEXsQkJmEKNzFZrzGi.tyyWkRGo8vUziZp0hdGKebSlG&queryruntoken=adipisicing elit ullamco&namespace=adipisicing elit ullamco",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"describe"
							],
							"query": [
								{
									"key": "iri",
									"value": "https://VEXsQkJmEKNzFZrzGi.tyyWkRGo8vUziZp0hdGKebSlG"
								},
								{
									"key": "queryruntoken",
									"value": "adipisicing elit ullamco"
								},
								{
									"key": "namespace",
									"value": "adipisicing elit ullamco"
								}
							]
						}
					},
					"status": "Forbidden",
					"code": 403,
					"_postman_previewlanguage": "json",
					"header": [
						{
							"key": "Content-Type",
							"value": "application/rdf+json"
						}
					],
					"cookie": [],
					"body": "{\n \"code\": 1519430,\n \"message\": \"enim\",\n \"details\": \"do\"\n}"
				},
				{
					"name": "Not found",
					"originalRequest": {
						"method": "GET",
						"header": [
							{
								"description": "Added as a part of security scheme: oauth2",
								"key": "Authorization",
								"value": "<token>"
							}
						],
						"url": {
							"raw": "{{baseUrl}}/describe?iri=https://VEXsQkJmEKNzFZrzGi.tyyWkRGo8vUziZp0hdGKebSlG&queryruntoken=adipisicing elit ullamco&namespace=adipisicing elit ullamco",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"describe"
							],
							"query": [
								{
									"key": "iri",
									"value": "https://VEXsQkJmEKNzFZrzGi.tyyWkRGo8vUziZp0hdGKebSlG"
								},
								{
									"key": "queryruntoken",
									"value": "adipisicing elit ullamco"
								},
								{
									"key": "namespace",
									"value": "adipisicing elit ullamco"
								}
							]
						}
					},
					"status": "Not Found",
					"code": 404,
					"_postman_previewlanguage": "json",
					"header": [
						{
							"key": "Content-Type",
							"value": "application/rdf+json"
						}
					],
					"cookie": [],
					"body": "{\n \"code\": 1519430,\n \"message\": \"enim\",\n \"details\": \"do\"\n}"
				},
				{
					"name": "Bad request",
					"originalRequest": {
						"method": "GET",
						"header": [
							{
								"description": "Added as a part of security scheme: oauth2",
								"key": "Authorization",
								"value": "<token>"
							}
						],
						"url": {
							"raw": "{{baseUrl}}/describe?iri=https://VEXsQkJmEKNzFZrzGi.tyyWkRGo8vUziZp0hdGKebSlG&queryruntoken=adipisicing elit ullamco&namespace=adipisicing elit ullamco",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"describe"
							],
							"query": [
								{
									"key": "iri",
									"value": "https://VEXsQkJmEKNzFZrzGi.tyyWkRGo8vUziZp0hdGKebSlG"
								},
								{
									"key": "queryruntoken",
									"value": "adipisicing elit ullamco"
								},
								{
									"key": "namespace",
									"value": "adipisicing elit ullamco"
								}
							]
						}
					},
					"status": "Unprocessable Entity (WebDAV) (RFC 4918)",
					"code": 422,
					"_postman_previewlanguage": "json",
					"header": [
						{
							"key": "Content-Type",
							"value": "application/rdf+json"
						}
					],
					"cookie": [],
					"body": "{\n \"code\": 1519430,\n \"message\": \"enim\",\n \"details\": \"do\"\n}"
				},
				{
					"name": "Server error",
					"originalRequest": {
						"method": "GET",
						"header": [
							{
								"description": "Added as a part of security scheme: oauth2",
								"key": "Authorization",
								"value": "<token>"
							}
						],
						"url": {
							"raw": "{{baseUrl}}/describe?iri=https://VEXsQkJmEKNzFZrzGi.tyyWkRGo8vUziZp0hdGKebSlG&queryruntoken=adipisicing elit ullamco&namespace=adipisicing elit ullamco",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"describe"
							],
							"query": [
								{
									"key": "iri",
									"value": "https://VEXsQkJmEKNzFZrzGi.tyyWkRGo8vUziZp0hdGKebSlG"
								},
								{
									"key": "queryruntoken",
									"value": "adipisicing elit ullamco"
								},
								{
									"key": "namespace",
									"value": "adipisicing elit ullamco"
								}
							]
						}
					},
					"status": "Internal Server Error",
					"code": 500,
					"_postman_previewlanguage": "json",
					"header": [
						{
							"key": "Content-Type",
							"value": "application/rdf+json"
						}
					],
					"cookie": [],
					"body": "{\n \"code\": 1519430,\n \"message\": \"enim\",\n \"details\": \"do\"\n}"
				}
			]
		},
		{
			"name": "Download dataset",
			"request": {
				"auth": {
					"type": "bearer",
					"bearer": [
						{
							"key": "token",
							"value": "{{readWrite}}",
							"type": "string"
						}
					]
				},
				"method": "GET",
				"header": [],
				"url": {
					"raw": "{{baseUrl}}/download/:owner/:id",
					"host": [
						"{{baseUrl}}"
					],
					"path": [
						"download",
						":owner",
						":id"
					],
					"variable": [
						{
							"key": "owner",
							"value": "{{owner}}",
							"description": "(Required) "
						},
						{
							"key": "id",
							"value": "{{datasetid}}",
							"description": "(Required) "
						}
					]
				},
				"description": "This endpoint will return a .zip of all files within the dataset.\""
			},
			"response": [
				{
					"name": "The request has succeeded.",
					"originalRequest": {
						"method": "GET",
						"header": [
							{
								"description": "Added as a part of security scheme: oauth2",
								"key": "Authorization",
								"value": "<token>"
							}
						],
						"url": {
							"raw": "{{baseUrl}}/download/:owner/:id",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"download",
								":owner",
								":id"
							],
							"variable": [
								{
									"key": "owner"
								},
								{
									"key": "id"
								}
							]
						}
					},
					"status": "OK",
					"code": 200,
					"_postman_previewlanguage": "text",
					"header": [
						{
							"key": "Content-Type",
							"value": "text/plain"
						}
					],
					"cookie": [],
					"body": ""
				},
				{
					"name": "Bad request",
					"originalRequest": {
						"method": "GET",
						"header": [
							{
								"description": "Added as a part of security scheme: oauth2",
								"key": "Authorization",
								"value": "<token>"
							}
						],
						"url": {
							"raw": "{{baseUrl}}/download/:owner/:id",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"download",
								":owner",
								":id"
							],
							"variable": [
								{
									"key": "owner"
								},
								{
									"key": "id"
								}
							]
						}
					},
					"status": "Bad Request",
					"code": 400,
					"_postman_previewlanguage": "text",
					"header": [
						{
							"key": "Content-Type",
							"value": "application/zip"
						}
					],
					"cookie": [],
					"body": ""
				},
				{
					"name": "Unauthorized",
					"originalRequest": {
						"method": "GET",
						"header": [
							{
								"description": "Added as a part of security scheme: oauth2",
								"key": "Authorization",
								"value": "<token>"
							}
						],
						"url": {
							"raw": "{{baseUrl}}/download/:owner/:id",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"download",
								":owner",
								":id"
							],
							"variable": [
								{
									"key": "owner"
								},
								{
									"key": "id"
								}
							]
						}
					},
					"status": "Unauthorized",
					"code": 401,
					"_postman_previewlanguage": "text",
					"header": [
						{
							"key": "Content-Type",
							"value": "application/zip"
						}
					],
					"cookie": [],
					"body": ""
				},
				{
					"name": "Forbidden",
					"originalRequest": {
						"method": "GET",
						"header": [
							{
								"description": "Added as a part of security scheme: oauth2",
								"key": "Authorization",
								"value": "<token>"
							}
						],
						"url": {
							"raw": "{{baseUrl}}/download/:owner/:id",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"download",
								":owner",
								":id"
							],
							"variable": [
								{
									"key": "owner"
								},
								{
									"key": "id"
								}
							]
						}
					},
					"status": "Forbidden",
					"code": 403,
					"_postman_previewlanguage": "text",
					"header": [
						{
							"key": "Content-Type",
							"value": "application/zip"
						}
					],
					"cookie": [],
					"body": ""
				},
				{
					"name": "Not found",
					"originalRequest": {
						"method": "GET",
						"header": [
							{
								"description": "Added as a part of security scheme: oauth2",
								"key": "Authorization",
								"value": "<token>"
							}
						],
						"url": {
							"raw": "{{baseUrl}}/download/:owner/:id",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"download",
								":owner",
								":id"
							],
							"variable": [
								{
									"key": "owner"
								},
								{
									"key": "id"
								}
							]
						}
					},
					"status": "Not Found",
					"code": 404,
					"_postman_previewlanguage": "text",
					"header": [
						{
							"key": "Content-Type",
							"value": "application/zip"
						}
					],
					"cookie": [],
					"body": ""
				},
				{
					"name": "Server error",
					"originalRequest": {
						"method": "GET",
						"header": [
							{
								"description": "Added as a part of security scheme: oauth2",
								"key": "Authorization",
								"value": "<token>"
							}
						],
						"url": {
							"raw": "{{baseUrl}}/download/:owner/:id",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"download",
								":owner",
								":id"
							],
							"variable": [
								{
									"key": "owner"
								},
								{
									"key": "id"
								}
							]
						}
					},
					"status": "Internal Server Error",
					"code": 500,
					"_postman_previewlanguage": "text",
					"header": [
						{
							"key": "Content-Type",
							"value": "application/zip"
						}
					],
					"cookie": [],
					"body": ""
				}
			]
		},
		{
			"name": "Download file",
			"request": {
				"auth": {
					"type": "bearer",
					"bearer": [
						{
							"key": "token",
							"value": "{{readWrite}}",
							"type": "string"
						}
					]
				},
				"method": "GET",
				"header": [],
				"url": {
					"raw": "{{baseUrl}}/file_download/:owner/:id/:file",
					"host": [
						"{{baseUrl}}"
					],
					"path": [
						"file_download",
						":owner",
						":id",
						":file"
					],
					"variable": [
						{
							"key": "owner",
							"value": "{{owner}}",
							"description": "(Required) "
						},
						{
							"key": "id",
							"value": "{{datasetid}}",
							"description": "(Required) "
						},
						{
							"key": "file",
							"value": "{{fileName}}",
							"description": "(Required) "
						}
					]
				},
				"description": "This endpoint will return the file from the latest dataset version."
			},
			"response": [
				{
					"name": "The request has succeeded.",
					"originalRequest": {
						"method": "GET",
						"header": [
							{
								"description": "Added as a part of security scheme: oauth2",
								"key": "Authorization",
								"value": "<token>"
							}
						],
						"url": {
							"raw": "{{baseUrl}}/file_download/:owner/:id/:file",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"file_download",
								":owner",
								":id",
								":file"
							],
							"variable": [
								{
									"key": "owner"
								},
								{
									"key": "id"
								},
								{
									"key": "file"
								}
							]
						}
					},
					"status": "OK",
					"code": 200,
					"_postman_previewlanguage": "text",
					"header": [
						{
							"key": "Content-Type",
							"value": "text/plain"
						}
					],
					"cookie": [],
					"body": ""
				},
				{
					"name": "Bad request",
					"originalRequest": {
						"method": "GET",
						"header": [
							{
								"description": "Added as a part of security scheme: oauth2",
								"key": "Authorization",
								"value": "<token>"
							}
						],
						"url": {
							"raw": "{{baseUrl}}/file_download/:owner/:id/:file",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"file_download",
								":owner",
								":id",
								":file"
							],
							"variable": [
								{
									"key": "owner"
								},
								{
									"key": "id"
								},
								{
									"key": "file"
								}
							]
						}
					},
					"status": "Bad Request",
					"code": 400,
					"_postman_previewlanguage": "text",
					"header": [
						{
							"key": "Content-Type",
							"value": "*/*"
						}
					],
					"cookie": [],
					"body": ""
				},
				{
					"name": "Unauthorized",
					"originalRequest": {
						"method": "GET",
						"header": [
							{
								"description": "Added as a part of security scheme: oauth2",
								"key": "Authorization",
								"value": "<token>"
							}
						],
						"url": {
							"raw": "{{baseUrl}}/file_download/:owner/:id/:file",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"file_download",
								":owner",
								":id",
								":file"
							],
							"variable": [
								{
									"key": "owner"
								},
								{
									"key": "id"
								},
								{
									"key": "file"
								}
							]
						}
					},
					"status": "Unauthorized",
					"code": 401,
					"_postman_previewlanguage": "text",
					"header": [
						{
							"key": "Content-Type",
							"value": "*/*"
						}
					],
					"cookie": [],
					"body": ""
				},
				{
					"name": "Forbidden",
					"originalRequest": {
						"method": "GET",
						"header": [
							{
								"description": "Added as a part of security scheme: oauth2",
								"key": "Authorization",
								"value": "<token>"
							}
						],
						"url": {
							"raw": "{{baseUrl}}/file_download/:owner/:id/:file",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"file_download",
								":owner",
								":id",
								":file"
							],
							"variable": [
								{
									"key": "owner"
								},
								{
									"key": "id"
								},
								{
									"key": "file"
								}
							]
						}
					},
					"status": "Forbidden",
					"code": 403,
					"_postman_previewlanguage": "text",
					"header": [
						{
							"key": "Content-Type",
							"value": "*/*"
						}
					],
					"cookie": [],
					"body": ""
				},
				{
					"name": "Not found",
					"originalRequest": {
						"method": "GET",
						"header": [
							{
								"description": "Added as a part of security scheme: oauth2",
								"key": "Authorization",
								"value": "<token>"
							}
						],
						"url": {
							"raw": "{{baseUrl}}/file_download/:owner/:id/:file",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"file_download",
								":owner",
								":id",
								":file"
							],
							"variable": [
								{
									"key": "owner"
								},
								{
									"key": "id"
								},
								{
									"key": "file"
								}
							]
						}
					},
					"status": "Not Found",
					"code": 404,
					"_postman_previewlanguage": "text",
					"header": [
						{
							"key": "Content-Type",
							"value": "*/*"
						}
					],
					"cookie": [],
					"body": ""
				},
				{
					"name": "Server error",
					"originalRequest": {
						"method": "GET",
						"header": [
							{
								"description": "Added as a part of security scheme: oauth2",
								"key": "Authorization",
								"value": "<token>"
							}
						],
						"url": {
							"raw": "{{baseUrl}}/file_download/:owner/:id/:file",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"file_download",
								":owner",
								":id",
								":file"
							],
							"variable": [
								{
									"key": "owner"
								},
								{
									"key": "id"
								},
								{
									"key": "file"
								}
							]
						}
					},
					"status": "Internal Server Error",
					"code": 500,
					"_postman_previewlanguage": "text",
					"header": [
						{
							"key": "Content-Type",
							"value": "*/*"
						}
					],
					"cookie": [],
					"body": ""
				}
			]
		},
		{
			"name": "Get properties by owner.",
			"request": {
				"auth": {
					"type": "bearer",
					"bearer": [
						{
							"key": "token",
							"value": "{{readWrite}}",
							"type": "string"
						}
					]
				},
				"method": "GET",
				"header": [],
				"url": {
					"raw": "{{baseUrl}}/properties/:owner",
					"host": [
						"{{baseUrl}}"
					],
					"path": [
						"properties",
						":owner"
					],
					"query": [
						{
							"key": "categorylabel",
							"value": "adipisicing elit ullamco",
							"disabled": true
						},
						{
							"key": "typelabel",
							"value": "adipisicing elit ullamco",
							"disabled": true
						}
					],
					"variable": [
						{
							"key": "owner",
							"value": "{{org}}",
							"description": "(Required) "
						}
					]
				}
			},
			"response": [
				{
					"name": "Successfully retrieved properties",
					"originalRequest": {
						"method": "GET",
						"header": [
							{
								"description": "Added as a part of security scheme: oauth2",
								"key": "Authorization",
								"value": "<token>"
							}
						],
						"url": {
							"raw": "{{baseUrl}}/properties/:owner?categorylabel=adipisicing elit ullamco&typelabel=adipisicing elit ullamco",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"properties",
								":owner"
							],
							"query": [
								{
									"key": "categorylabel",
									"value": "adipisicing elit ullamco"
								},
								{
									"key": "typelabel",
									"value": "adipisicing elit ullamco"
								}
							],
							"variable": [
								{
									"key": "owner"
								}
							]
						}
					},
					"status": "OK",
					"code": 200,
					"_postman_previewlanguage": "json",
					"header": [
						{
							"key": "Content-Type",
							"value": "application/json"
						}
					],
					"cookie": [],
					"body": "[]"
				},
				{
					"name": "Bad request",
					"originalRequest": {
						"method": "GET",
						"header": [
							{
								"description": "Added as a part of security scheme: oauth2",
								"key": "Authorization",
								"value": "<token>"
							}
						],
						"url": {
							"raw": "{{baseUrl}}/properties/:owner?categorylabel=adipisicing elit ullamco&typelabel=adipisicing elit ullamco",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"properties",
								":owner"
							],
							"query": [
								{
									"key": "categorylabel",
									"value": "adipisicing elit ullamco"
								},
								{
									"key": "typelabel",
									"value": "adipisicing elit ullamco"
								}
							],
							"variable": [
								{
									"key": "owner"
								}
							]
						}
					},
					"status": "Bad Request",
					"code": 400,
					"_postman_previewlanguage": "json",
					"header": [
						{
							"key": "Content-Type",
							"value": "application/json"
						}
					],
					"cookie": [],
					"body": "{\n \"code\": 1519430,\n \"message\": \"enim\",\n \"details\": \"do\"\n}"
				},
				{
					"name": "Unauthorized",
					"originalRequest": {
						"method": "GET",
						"header": [
							{
								"description": "Added as a part of security scheme: oauth2",
								"key": "Authorization",
								"value": "<token>"
							}
						],
						"url": {
							"raw": "{{baseUrl}}/properties/:owner?categorylabel=adipisicing elit ullamco&typelabel=adipisicing elit ullamco",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"properties",
								":owner"
							],
							"query": [
								{
									"key": "categorylabel",
									"value": "adipisicing elit ullamco"
								},
								{
									"key": "typelabel",
									"value": "adipisicing elit ullamco"
								}
							],
							"variable": [
								{
									"key": "owner"
								}
							]
						}
					},
					"status": "Unauthorized",
					"code": 401,
					"_postman_previewlanguage": "json",
					"header": [
						{
							"key": "Content-Type",
							"value": "application/json"
						}
					],
					"cookie": [],
					"body": "{\n \"code\": 1519430,\n \"message\": \"enim\",\n \"details\": \"do\"\n}"
				},
				{
					"name": "Forbidden",
					"originalRequest": {
						"method": "GET",
						"header": [
							{
								"description": "Added as a part of security scheme: oauth2",
								"key": "Authorization",
								"value": "<token>"
							}
						],
						"url": {
							"raw": "{{baseUrl}}/properties/:owner?categorylabel=adipisicing elit ullamco&typelabel=adipisicing elit ullamco",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"properties",
								":owner"
							],
							"query": [
								{
									"key": "categorylabel",
									"value": "adipisicing elit ullamco"
								},
								{
									"key": "typelabel",
									"value": "adipisicing elit ullamco"
								}
							],
							"variable": [
								{
									"key": "owner"
								}
							]
						}
					},
					"status": "Forbidden",
					"code": 403,
					"_postman_previewlanguage": "json",
					"header": [
						{
							"key": "Content-Type",
							"value": "application/json"
						}
					],
					"cookie": [],
					"body": "{\n \"code\": 1519430,\n \"message\": \"enim\",\n \"details\": \"do\"\n}"
				},
				{
					"name": "Not found",
					"originalRequest": {
						"method": "GET",
						"header": [
							{
								"description": "Added as a part of security scheme: oauth2",
								"key": "Authorization",
								"value": "<token>"
							}
						],
						"url": {
							"raw": "{{baseUrl}}/properties/:owner?categorylabel=adipisicing elit ullamco&typelabel=adipisicing elit ullamco",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"properties",
								":owner"
							],
							"query": [
								{
									"key": "categorylabel",
									"value": "adipisicing elit ullamco"
								},
								{
									"key": "typelabel",
									"value": "adipisicing elit ullamco"
								}
							],
							"variable": [
								{
									"key": "owner"
								}
							]
						}
					},
					"status": "Not Found",
					"code": 404,
					"_postman_previewlanguage": "json",
					"header": [
						{
							"key": "Content-Type",
							"value": "application/json"
						}
					],
					"cookie": [],
					"body": "{\n \"code\": 1519430,\n \"message\": \"enim\",\n \"details\": \"do\"\n}"
				},
				{
					"name": "Server error",
					"originalRequest": {
						"method": "GET",
						"header": [
							{
								"description": "Added as a part of security scheme: oauth2",
								"key": "Authorization",
								"value": "<token>"
							}
						],
						"url": {
							"raw": "{{baseUrl}}/properties/:owner?categorylabel=adipisicing elit ullamco&typelabel=adipisicing elit ullamco",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"properties",
								":owner"
							],
							"query": [
								{
									"key": "categorylabel",
									"value": "adipisicing elit ullamco"
								},
								{
									"key": "typelabel",
									"value": "adipisicing elit ullamco"
								}
							],
							"variable": [
								{
									"key": "owner"
								}
							]
						}
					},
					"status": "Internal Server Error",
					"code": 500,
					"_postman_previewlanguage": "json",
					"header": [
						{
							"key": "Content-Type",
							"value": "application/json"
						}
					],
					"cookie": [],
					"body": "{\n \"code\": 1519430,\n \"message\": \"enim\",\n \"details\": \"do\"\n}"
				}
			]
		},
		{
			"name": "Get a user account info.",
			"request": {
				"auth": {
					"type": "bearer",
					"bearer": [
						{
							"key": "token",
							"value": "{{readWrite}}",
							"type": "string"
						}
					]
				},
				"method": "GET",
				"header": [],
				"url": {
					"raw": "{{baseUrl}}/users/:account",
					"host": [
						"{{baseUrl}}"
					],
					"path": [
						"users",
						":account"
					],
					"variable": [
						{
							"key": "account",
							"value": "{{owner}}",
							"description": "(Required) "
						}
					]
				}
			},
			"response": [
				{
					"name": "User data returned.",
					"originalRequest": {
						"method": "GET",
						"header": [
							{
								"description": "Added as a part of security scheme: oauth2",
								"key": "Authorization",
								"value": "<token>"
							}
						],
						"url": {
							"raw": "{{baseUrl}}/users/:account",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"users",
								":account"
							],
							"variable": [
								{
									"key": "account"
								}
							]
						}
					},
					"status": "OK",
					"code": 200,
					"_postman_previewlanguage": "json",
					"header": [
						{
							"key": "Content-Type",
							"value": "application/json"
						}
					],
					"cookie": [],
					"body": "{\n \"created\": \"in irure\",\n \"id\": \"mollit aliqua consectetur laboris\",\n \"updated\": \"aliqua in consequat\",\n \"avatarUrl\": \"eu qui Ut\",\n \"displayName\": \"ip\"\n}"
				},
				{
					"name": "Bad request",
					"originalRequest": {
						"method": "GET",
						"header": [
							{
								"description": "Added as a part of security scheme: oauth2",
								"key": "Authorization",
								"value": "<token>"
							}
						],
						"url": {
							"raw": "{{baseUrl}}/users/:account",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"users",
								":account"
							],
							"variable": [
								{
									"key": "account"
								}
							]
						}
					},
					"status": "Bad Request",
					"code": 400,
					"_postman_previewlanguage": "json",
					"header": [
						{
							"key": "Content-Type",
							"value": "application/json"
						}
					],
					"cookie": [],
					"body": "{\n \"code\": 1519430,\n \"message\": \"enim\",\n \"details\": \"do\"\n}"
				},
				{
					"name": "Unauthorized",
					"originalRequest": {
						"method": "GET",
						"header": [
							{
								"description": "Added as a part of security scheme: oauth2",
								"key": "Authorization",
								"value": "<token>"
							}
						],
						"url": {
							"raw": "{{baseUrl}}/users/:account",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"users",
								":account"
							],
							"variable": [
								{
									"key": "account"
								}
							]
						}
					},
					"status": "Unauthorized",
					"code": 401,
					"_postman_previewlanguage": "json",
					"header": [
						{
							"key": "Content-Type",
							"value": "application/json"
						}
					],
					"cookie": [],
					"body": "{\n \"code\": 1519430,\n \"message\": \"enim\",\n \"details\": \"do\"\n}"
				},
				{
					"name": "Forbidden",
					"originalRequest": {
						"method": "GET",
						"header": [
							{
								"description": "Added as a part of security scheme: oauth2",
								"key": "Authorization",
								"value": "<token>"
							}
						],
						"url": {
							"raw": "{{baseUrl}}/users/:account",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"users",
								":account"
							],
							"variable": [
								{
									"key": "account"
								}
							]
						}
					},
					"status": "Forbidden",
					"code": 403,
					"_postman_previewlanguage": "json",
					"header": [
						{
							"key": "Content-Type",
							"value": "application/json"
						}
					],
					"cookie": [],
					"body": "{\n \"code\": 1519430,\n \"message\": \"enim\",\n \"details\": \"do\"\n}"
				},
				{
					"name": "Not found",
					"originalRequest": {
						"method": "GET",
						"header": [
							{
								"description": "Added as a part of security scheme: oauth2",
								"key": "Authorization",
								"value": "<token>"
							}
						],
						"url": {
							"raw": "{{baseUrl}}/users/:account",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"users",
								":account"
							],
							"variable": [
								{
									"key": "account"
								}
							]
						}
					},
					"status": "Not Found",
					"code": 404,
					"_postman_previewlanguage": "json",
					"header": [
						{
							"key": "Content-Type",
							"value": "application/json"
						}
					],
					"cookie": [],
					"body": "{\n \"code\": 1519430,\n \"message\": \"enim\",\n \"details\": \"do\"\n}"
				},
				{
					"name": "Server error",
					"originalRequest": {
						"method": "GET",
						"header": [
							{
								"description": "Added as a part of security scheme: oauth2",
								"key": "Authorization",
								"value": "<token>"
							}
						],
						"url": {
							"raw": "{{baseUrl}}/users/:account",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"users",
								":account"
							],
							"variable": [
								{
									"key": "account"
								}
							]
						}
					},
					"status": "Internal Server Error",
					"code": 500,
					"_postman_previewlanguage": "json",
					"header": [
						{
							"key": "Content-Type",
							"value": "application/json"
						}
					],
					"cookie": [],
					"body": "{\n \"code\": 1519430,\n \"message\": \"enim\",\n \"details\": \"do\"\n}"
				}
			]
		}
	],
	"auth": {
		"type": "bearer",
		"bearer": [
			{
				"key": "token",
				"value": "",
				"type": "string"
			}
		]
	},
	"event": [
		{
			"listen": "prerequest",
			"script": {
				"type": "text/javascript",
				"exec": [
					""
				]
			}
		},
		{
			"listen": "test",
			"script": {
				"type": "text/javascript",
				"exec": [
					""
				]
			}
		}
	]
}